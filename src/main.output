Terminals unused in grammar

   T_STRING
   BOOL
   FOR
   INPUT
   OUTPUT
   DO
   ELSE
   EOL
   LOP_EQ


State 13 conflicts: 10 shift/reduce
State 44 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 86 conflicts: 21 shift/reduce
State 87 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 89 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | declaration SEMICOLON
    9          | SEMICOLON

   10 if_stmt: IF LP expr RP statement
   11        | IF LP expr RP LB statements RB

   12 while_stmt: WHILE LP expr RP statements

   13 declaration: T IDENTIFIER LOP_ASSIGN expr
   14            | T IDLIST

   15 IDLIST: IDENTIFIER COMMA IDLIST
   16       | IDENTIFIER

   17 expr: expr PLUS expr
   18     | expr MINUS expr
   19     | expr TIMES expr
   20     | expr OVER expr
   21     | expr MOD expr
   22     | expr MMINUS
   23     | expr PPLUS
   24     | expr AND expr
   25     | expr OR expr
   26     | NOT expr
   27     | expr XOR expr
   28     | expr SHIFT_LEFT expr
   29     | expr SHIFT_RIGHT expr
   30     | expr ASSIGN expr
   31     | expr EQU expr
   32     | expr GTR expr
   33     | expr LSS expr
   34     | expr GEQ expr
   35     | expr LEQ expr
   36     | expr NEQ expr
   37     | expr LOGICAL_AND expr
   38     | expr LOGICAL_OR expr
   39     | LOGICAL_NOT expr
   40     | MINUS expr
   41     | LP expr RP
   42     | IDENTIFIER
   43     | INTEGER
   44     | NUMBER
   45     | CHAR
   46     | STRING

   47 T: T_INT
   48  | T_CHAR
   49  | T_BOOL
   50  | T_DOUBLE
   51  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 48
T_INT (259) 47
T_STRING (260)
T_BOOL (261) 49
T_DOUBLE (262) 50
T_VOID (263) 51
LOP_ASSIGN (264) 13
SEMICOLON (265) 8 9
LB (266) 4 11
RB (267) 4 11
COMMA (268) 15
LP (269) 5 10 11 12 41
RP (270) 5 10 11 12 41
IDENTIFIER (271) 13 15 16 42
INTEGER (272) 43
CHAR (273) 45
BOOL (274)
STRING (275) 46
NUMBER (276) 44
PLUS (277) 17
MINUS (278) 18 40
TIMES (279) 19
OVER (280) 20
MOD (281) 21
PPLUS (282) 23
MMINUS (283) 22
AND (284) 24
OR (285) 25
XOR (286) 27
NOT (287) 26
SHIFT_LEFT (288) 28
SHIFT_RIGHT (289) 29
ASSIGN (290) 30
EQU (291) 31
GTR (292) 32
LSS (293) 33
GEQ (294) 34
LEQ (295) 35
NEQ (296) 36
LOGICAL_AND (297) 37
LOGICAL_OR (298) 38
LOGICAL_NOT (299) 39
UMINUS (300)
FOR (301)
INPUT (302)
OUTPUT (303)
DO (304)
MAIN (305) 5
IF (306) 10 11
ELSE (307)
WHILE (308) 12
EOL (309)
LOP_EQ (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3 4, on right: 1 3 4 5 11 12
statement (59)
    on left: 5 6 7 8 9, on right: 2 3 10
if_stmt (60)
    on left: 10 11, on right: 7
while_stmt (61)
    on left: 12, on right: 6
declaration (62)
    on left: 13 14, on right: 8
IDLIST (63)
    on left: 15 16, on right: 14 15
expr (64)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39 40 41 42 43 44 45 46, on right: 10 11 12 13 17 18
    19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39
    40 41
T (65)
    on left: 47 48 49 50 51, on right: 13 14


State 0

    0 $accept: . program $end

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10

    program      go to state 11
    statements   go to state 12
    statement    go to state 13
    if_stmt      go to state 14
    while_stmt   go to state 15
    declaration  go to state 16
    T            go to state 17


State 1

   48 T: T_CHAR .

    $default  reduce using rule 48 (T)


State 2

   47 T: T_INT .

    $default  reduce using rule 47 (T)


State 3

   49 T: T_BOOL .

    $default  reduce using rule 49 (T)


State 4

   50 T: T_DOUBLE .

    $default  reduce using rule 50 (T)


State 5

   51 T: T_VOID .

    $default  reduce using rule 51 (T)


State 6

    9 statement: SEMICOLON .

    $default  reduce using rule 9 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10

    statements   go to state 18
    statement    go to state 13
    if_stmt      go to state 14
    while_stmt   go to state 15
    declaration  go to state 16
    T            go to state 17


State 8

    5 statement: MAIN . LP RP statements

    LP  shift, and go to state 19


State 9

   10 if_stmt: IF . LP expr RP statement
   11        | IF . LP expr RP LB statements RB

    LP  shift, and go to state 20


State 10

   12 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 21


State 11

    0 $accept: program . $end

    $end  shift, and go to state 22


State 12

    1 program: statements .

    $default  reduce using rule 1 (program)


State 13

    2 statements: statement .
    3           | statement . statements

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10

    T_CHAR     [reduce using rule 2 (statements)]
    T_INT      [reduce using rule 2 (statements)]
    T_BOOL     [reduce using rule 2 (statements)]
    T_DOUBLE   [reduce using rule 2 (statements)]
    T_VOID     [reduce using rule 2 (statements)]
    SEMICOLON  [reduce using rule 2 (statements)]
    LB         [reduce using rule 2 (statements)]
    MAIN       [reduce using rule 2 (statements)]
    IF         [reduce using rule 2 (statements)]
    WHILE      [reduce using rule 2 (statements)]
    $default   reduce using rule 2 (statements)

    statements   go to state 23
    statement    go to state 13
    if_stmt      go to state 14
    while_stmt   go to state 15
    declaration  go to state 16
    T            go to state 17


State 14

    7 statement: if_stmt .

    $default  reduce using rule 7 (statement)


State 15

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 16

    8 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 24


State 17

   13 declaration: T . IDENTIFIER LOP_ASSIGN expr
   14            | T . IDLIST

    IDENTIFIER  shift, and go to state 25

    IDLIST  go to state 26


State 18

    4 statements: LB statements . RB

    RB  shift, and go to state 27


State 19

    5 statement: MAIN LP . RP statements

    RP  shift, and go to state 28


State 20

   10 if_stmt: IF LP . expr RP statement
   11        | IF LP . expr RP LB statements RB

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 38


State 21

   12 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 39


State 22

    0 $accept: program $end .

    $default  accept


State 23

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 24

    8 statement: declaration SEMICOLON .

    $default  reduce using rule 8 (statement)


State 25

   13 declaration: T IDENTIFIER . LOP_ASSIGN expr
   15 IDLIST: IDENTIFIER . COMMA IDLIST
   16       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 40
    COMMA       shift, and go to state 41

    $default  reduce using rule 16 (IDLIST)


State 26

   14 declaration: T IDLIST .

    $default  reduce using rule 14 (declaration)


State 27

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 28

    5 statement: MAIN LP RP . statements

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10

    statements   go to state 42
    statement    go to state 13
    if_stmt      go to state 14
    while_stmt   go to state 15
    declaration  go to state 16
    T            go to state 17


State 29

   41 expr: LP . expr RP

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 43


State 30

   42 expr: IDENTIFIER .

    $default  reduce using rule 42 (expr)


State 31

   43 expr: INTEGER .

    $default  reduce using rule 43 (expr)


State 32

   45 expr: CHAR .

    $default  reduce using rule 45 (expr)


State 33

   46 expr: STRING .

    $default  reduce using rule 46 (expr)


State 34

   44 expr: NUMBER .

    $default  reduce using rule 44 (expr)


State 35

   40 expr: MINUS . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 44


State 36

   26 expr: NOT . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 45


State 37

   39 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 46


State 38

   10 if_stmt: IF LP expr . RP statement
   11        | IF LP expr . RP LB statements RB
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    RP           shift, and go to state 47
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    AND          shift, and go to state 55
    OR           shift, and go to state 56
    XOR          shift, and go to state 57
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66
    LOGICAL_AND  shift, and go to state 67
    LOGICAL_OR   shift, and go to state 68


State 39

   12 while_stmt: WHILE LP expr . RP statements
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    RP           shift, and go to state 69
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    AND          shift, and go to state 55
    OR           shift, and go to state 56
    XOR          shift, and go to state 57
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66
    LOGICAL_AND  shift, and go to state 67
    LOGICAL_OR   shift, and go to state 68


State 40

   13 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 70


State 41

   15 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 71

    IDLIST  go to state 72


State 42

    5 statement: MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 43

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr
   41     | LP expr . RP

    RP           shift, and go to state 73
    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    AND          shift, and go to state 55
    OR           shift, and go to state 56
    XOR          shift, and go to state 57
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66
    LOGICAL_AND  shift, and go to state 67
    LOGICAL_OR   shift, and go to state 68


State 44

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr
   40     | MINUS expr .

    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 45

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   26     | NOT expr .
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


State 46

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr
   39     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 47

   10 if_stmt: IF LP expr RP . statement
   11        | IF LP expr RP . LB statements RB

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 74
    MAIN       shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10

    statement    go to state 75
    if_stmt      go to state 14
    while_stmt   go to state 15
    declaration  go to state 16
    T            go to state 17


State 48

   17 expr: expr PLUS . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 76


State 49

   18 expr: expr MINUS . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 77


State 50

   19 expr: expr TIMES . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 78


State 51

   20 expr: expr OVER . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 79


State 52

   21 expr: expr MOD . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 80


State 53

   23 expr: expr PPLUS .

    $default  reduce using rule 23 (expr)


State 54

   22 expr: expr MMINUS .

    $default  reduce using rule 22 (expr)


State 55

   24 expr: expr AND . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 81


State 56

   25 expr: expr OR . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 82


State 57

   27 expr: expr XOR . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 83


State 58

   28 expr: expr SHIFT_LEFT . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 84


State 59

   29 expr: expr SHIFT_RIGHT . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 85


State 60

   30 expr: expr ASSIGN . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 86


State 61

   31 expr: expr EQU . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 87


State 62

   32 expr: expr GTR . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 88


State 63

   33 expr: expr LSS . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 89


State 64

   34 expr: expr GEQ . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 90


State 65

   35 expr: expr LEQ . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 91


State 66

   36 expr: expr NEQ . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 92


State 67

   37 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 93


State 68

   38 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 29
    IDENTIFIER   shift, and go to state 30
    INTEGER      shift, and go to state 31
    CHAR         shift, and go to state 32
    STRING       shift, and go to state 33
    NUMBER       shift, and go to state 34
    MINUS        shift, and go to state 35
    NOT          shift, and go to state 36
    LOGICAL_NOT  shift, and go to state 37

    expr  go to state 94


State 69

   12 while_stmt: WHILE LP expr RP . statements

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10

    statements   go to state 95
    statement    go to state 13
    if_stmt      go to state 14
    while_stmt   go to state 15
    declaration  go to state 16
    T            go to state 17


State 70

   13 declaration: T IDENTIFIER LOP_ASSIGN expr .
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    AND          shift, and go to state 55
    OR           shift, and go to state 56
    XOR          shift, and go to state 57
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66
    LOGICAL_AND  shift, and go to state 67
    LOGICAL_OR   shift, and go to state 68

    $default  reduce using rule 13 (declaration)


State 71

   15 IDLIST: IDENTIFIER . COMMA IDLIST
   16       | IDENTIFIER .

    COMMA  shift, and go to state 41

    $default  reduce using rule 16 (IDLIST)


State 72

   15 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 15 (IDLIST)


State 73

   41 expr: LP expr RP .

    $default  reduce using rule 41 (expr)


State 74

   11 if_stmt: IF LP expr RP LB . statements RB

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10

    statements   go to state 96
    statement    go to state 13
    if_stmt      go to state 14
    while_stmt   go to state 15
    declaration  go to state 16
    T            go to state 17


State 75

   10 if_stmt: IF LP expr RP statement .

    $default  reduce using rule 10 (if_stmt)


State 76

   17 expr: expr . PLUS expr
   17     | expr PLUS expr .
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 50
    OVER    shift, and go to state 51
    MOD     shift, and go to state 52
    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 17 (expr)]
    $default  reduce using rule 17 (expr)


State 77

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   18     | expr MINUS expr .
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 50
    OVER    shift, and go to state 51
    MOD     shift, and go to state 52
    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 18 (expr)]
    $default  reduce using rule 18 (expr)


State 78

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   19     | expr TIMES expr .
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 19 (expr)]
    $default  reduce using rule 19 (expr)


State 79

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   20     | expr OVER expr .
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)


State 80

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   21     | expr MOD expr .
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


State 81

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   24     | expr AND expr .
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66

    ASSIGN    [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


State 82

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   25     | expr OR expr .
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    AND          shift, and go to state 55
    XOR          shift, and go to state 57
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66

    ASSIGN    [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 83

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   27     | expr XOR expr .
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    AND          shift, and go to state 55
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66

    ASSIGN    [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


State 84

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   28     | expr SHIFT_LEFT expr .
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    TIMES   shift, and go to state 50
    OVER    shift, and go to state 51
    MOD     shift, and go to state 52
    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 85

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   29     | expr SHIFT_RIGHT expr .
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49
    TIMES   shift, and go to state 50
    OVER    shift, and go to state 51
    MOD     shift, and go to state 52
    PPLUS   shift, and go to state 53
    MMINUS  shift, and go to state 54
    ASSIGN  shift, and go to state 60

    ASSIGN    [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


State 86

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   30     | expr ASSIGN expr .
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    AND          shift, and go to state 55
    OR           shift, and go to state 56
    XOR          shift, and go to state 57
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66
    LOGICAL_AND  shift, and go to state 67
    LOGICAL_OR   shift, and go to state 68

    PLUS         [reduce using rule 30 (expr)]
    MINUS        [reduce using rule 30 (expr)]
    TIMES        [reduce using rule 30 (expr)]
    OVER         [reduce using rule 30 (expr)]
    MOD          [reduce using rule 30 (expr)]
    PPLUS        [reduce using rule 30 (expr)]
    MMINUS       [reduce using rule 30 (expr)]
    AND          [reduce using rule 30 (expr)]
    OR           [reduce using rule 30 (expr)]
    XOR          [reduce using rule 30 (expr)]
    SHIFT_LEFT   [reduce using rule 30 (expr)]
    SHIFT_RIGHT  [reduce using rule 30 (expr)]
    ASSIGN       [reduce using rule 30 (expr)]
    EQU          [reduce using rule 30 (expr)]
    GTR          [reduce using rule 30 (expr)]
    LSS          [reduce using rule 30 (expr)]
    GEQ          [reduce using rule 30 (expr)]
    LEQ          [reduce using rule 30 (expr)]
    NEQ          [reduce using rule 30 (expr)]
    LOGICAL_AND  [reduce using rule 30 (expr)]
    LOGICAL_OR   [reduce using rule 30 (expr)]
    $default     reduce using rule 30 (expr)


State 87

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   31     | expr EQU expr .
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65

    ASSIGN    [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 88

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   32     | expr GTR expr .
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60

    ASSIGN    [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 89

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   33     | expr LSS expr .
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60

    ASSIGN    [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 90

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   34     | expr GEQ expr .
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60

    ASSIGN    [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 91

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   35     | expr LEQ expr .
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60

    ASSIGN    [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 92

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   36     | expr NEQ expr .
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65

    ASSIGN    [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 93

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   37     | expr LOGICAL_AND expr .
   38     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    AND          shift, and go to state 55
    OR           shift, and go to state 56
    XOR          shift, and go to state 57
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66

    ASSIGN    [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 94

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . TIMES expr
   20     | expr . OVER expr
   21     | expr . MOD expr
   22     | expr . MMINUS
   23     | expr . PPLUS
   24     | expr . AND expr
   25     | expr . OR expr
   27     | expr . XOR expr
   28     | expr . SHIFT_LEFT expr
   29     | expr . SHIFT_RIGHT expr
   30     | expr . ASSIGN expr
   31     | expr . EQU expr
   32     | expr . GTR expr
   33     | expr . LSS expr
   34     | expr . GEQ expr
   35     | expr . LEQ expr
   36     | expr . NEQ expr
   37     | expr . LOGICAL_AND expr
   38     | expr . LOGICAL_OR expr
   38     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    OVER         shift, and go to state 51
    MOD          shift, and go to state 52
    PPLUS        shift, and go to state 53
    MMINUS       shift, and go to state 54
    AND          shift, and go to state 55
    OR           shift, and go to state 56
    XOR          shift, and go to state 57
    SHIFT_LEFT   shift, and go to state 58
    SHIFT_RIGHT  shift, and go to state 59
    ASSIGN       shift, and go to state 60
    EQU          shift, and go to state 61
    GTR          shift, and go to state 62
    LSS          shift, and go to state 63
    GEQ          shift, and go to state 64
    LEQ          shift, and go to state 65
    NEQ          shift, and go to state 66
    LOGICAL_AND  shift, and go to state 67

    ASSIGN    [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 95

   12 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 12 (while_stmt)


State 96

   11 if_stmt: IF LP expr RP LB statements . RB

    RB  shift, and go to state 97


State 97

   11 if_stmt: IF LP expr RP LB statements RB .

    $default  reduce using rule 11 (if_stmt)
