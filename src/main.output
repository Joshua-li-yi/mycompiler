Terminals unused in grammar

   T_STRING
   BOOL
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ
   SHIFT_LEFT
   SHIFT_RIGHT


State 15 conflicts: 12 shift/reduce
State 17 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: T MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | for_stmt
   10          | function_declaration
   11          | function_definition
   12          | function_call
   13          | function_return
   14          | declaration SEMICOLON
   15          | assignment_stmt
   16          | SEMICOLON

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON

   18 else_stmt: ELSE statements

   19 if_stmt: IF LP expr RP statements

   20 if_else_stmt: if_stmt else_stmt

   21 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements
   22         | FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements
   23         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   24         | FOR LP expr SEMICOLON SEMICOLON expr RP statements
   25         | FOR LP expr SEMICOLON expr SEMICOLON RP statements
   26         | FOR LP SEMICOLON SEMICOLON expr RP statements
   27         | FOR LP SEMICOLON expr SEMICOLON RP statements
   28         | FOR LP expr SEMICOLON SEMICOLON RP statements
   29         | FOR LP SEMICOLON SEMICOLON RP statements

   30 while_stmt: WHILE LP expr RP statements

   31 declaration: T IDENTIFIER LOP_ASSIGN expr
   32            | T IDLIST

   33 IDLIST: IDENTIFIER COMMA IDLIST
   34       | IDENTIFIER

   35 IDLIST_DECL: declaration
   36            | declaration COMMA IDLIST_DECL

   37 function_return: RETURN SEMICOLON
   38                | RETURN expr SEMICOLON

   39 function_declaration: T IDENTIFIER LP IDLIST_DECL RP SEMICOLON
   40                     | T IDENTIFIER LP RP SEMICOLON

   41 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements RB
   42                    | T IDENTIFIER LP RP LB statements RB

   43 function_call: IDENTIFIER LP IDLIST RP SEMICOLON
   44              | IDENTIFIER LP RP SEMICOLON

   45 expr: expr PLUS expr
   46     | expr MINUS expr
   47     | expr TIMES expr
   48     | expr DIVIDE expr
   49     | expr MOD expr
   50     | expr MMINUS
   51     | expr PPLUS
   52     | expr AND expr
   53     | expr OR expr
   54     | NOT expr
   55     | expr XOR expr
   56     | expr EQU expr
   57     | expr GTR expr
   58     | expr LSS expr
   59     | expr GEQ expr
   60     | expr LEQ expr
   61     | expr NEQ expr
   62     | expr LOGICAL_AND expr
   63     | expr LOGICAL_OR expr
   64     | LOGICAL_NOT expr
   65     | MINUS expr
   66     | LP expr RP
   67     | IDENTIFIER
   68     | INTEGER
   69     | NUMBER
   70     | CHAR
   71     | STRING

   72 T: T_INT
   73  | T_CHAR
   74  | T_BOOL
   75  | T_DOUBLE
   76  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 73
T_INT (259) 72
T_STRING (260)
T_BOOL (261) 74
T_DOUBLE (262) 75
T_VOID (263) 76
LOP_ASSIGN (264) 17 31
SEMICOLON (265) 14 16 17 21 22 23 24 25 26 27 28 29 37 38 39 40 43
    44
LB (266) 4 41 42
RB (267) 4 41 42
COMMA (268) 33 36
LP (269) 5 19 21 22 23 24 25 26 27 28 29 30 39 40 41 42 43 44 66
RP (270) 5 19 21 22 23 24 25 26 27 28 29 30 39 40 41 42 43 44 66
IDENTIFIER (271) 17 31 33 34 39 40 41 42 43 44 67
INTEGER (272) 68
CHAR (273) 70
BOOL (274)
STRING (275) 71
NUMBER (276) 69
PLUS (277) 45
MINUS (278) 46 65
TIMES (279) 47
DIVIDE (280) 48
MOD (281) 49
PPLUS (282) 51
MMINUS (283) 50
AND (284) 52
OR (285) 53
NOT (286) 54
EQU (287) 56
GTR (288) 57
LSS (289) 58
GEQ (290) 59
LEQ (291) 60
NEQ (292) 61
LOGICAL_AND (293) 62
LOGICAL_OR (294) 63
LOGICAL_NOT (295) 64
UMINUS (296)
FOR (297) 21 22 23 24 25 26 27 28 29
INPUT (298)
OUTPUT (299)
DO (300)
MAIN (301) 5
IF (302) 19
ELSE (303) 18
WHILE (304) 30
RETURN (305) 37 38
EOL (306)
LOP_EQ (307)
XOR (308) 55
SHIFT_LEFT (309)
SHIFT_RIGHT (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3 4, on right: 1 3 4 5 18 19 21 22 23 24 25 26 27 28
    29 30 41 42
statement (59)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 3
assignment_stmt (60)
    on left: 17, on right: 15
else_stmt (61)
    on left: 18, on right: 20
if_stmt (62)
    on left: 19, on right: 7 20
if_else_stmt (63)
    on left: 20, on right: 8
for_stmt (64)
    on left: 21 22 23 24 25 26 27 28 29, on right: 9
while_stmt (65)
    on left: 30, on right: 6
declaration (66)
    on left: 31 32, on right: 14 22 35 36
IDLIST (67)
    on left: 33 34, on right: 32 33 43
IDLIST_DECL (68)
    on left: 35 36, on right: 36 39 41
function_return (69)
    on left: 37 38, on right: 13
function_declaration (70)
    on left: 39 40, on right: 10
function_definition (71)
    on left: 41 42, on right: 11
function_call (72)
    on left: 43 44, on right: 12
expr (73)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 70 71, on right: 17 19 21 22 23 24 25 26 27
    28 30 31 38 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 65 66
T (74)
    on left: 72 73 74 75 76, on right: 5 31 32 39 40 41 42


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    program               go to state 13
    statements            go to state 14
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 1

   73 T: T_CHAR .

    $default  reduce using rule 73 (T)


State 2

   72 T: T_INT .

    $default  reduce using rule 72 (T)


State 3

   74 T: T_BOOL .

    $default  reduce using rule 74 (T)


State 4

   75 T: T_DOUBLE .

    $default  reduce using rule 75 (T)


State 5

   76 T: T_VOID .

    $default  reduce using rule 76 (T)


State 6

   16 statement: SEMICOLON .

    $default  reduce using rule 16 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 27
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 8

   17 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   43 function_call: IDENTIFIER . LP IDLIST RP SEMICOLON
   44              | IDENTIFIER . LP RP SEMICOLON

    LOP_ASSIGN  shift, and go to state 28
    LP          shift, and go to state 29


State 9

   21 for_stmt: FOR . LP expr SEMICOLON expr SEMICOLON expr RP statements
   22         | FOR . LP declaration SEMICOLON expr SEMICOLON expr RP statements
   23         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   24         | FOR . LP expr SEMICOLON SEMICOLON expr RP statements
   25         | FOR . LP expr SEMICOLON expr SEMICOLON RP statements
   26         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   27         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   28         | FOR . LP expr SEMICOLON SEMICOLON RP statements
   29         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  shift, and go to state 30


State 10

   19 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 31


State 11

   30 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 32


State 12

   37 function_return: RETURN . SEMICOLON
   38                | RETURN . expr SEMICOLON

    SEMICOLON    shift, and go to state 33
    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 43


State 13

    0 $accept: program . $end

    $end  shift, and go to state 44


State 14

    1 program: statements .

    $default  reduce using rule 1 (program)


State 15

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    RETURN      [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements            go to state 45
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 16

   15 statement: assignment_stmt .

    $default  reduce using rule 15 (statement)


State 17

    7 statement: if_stmt .
   20 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 46

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 47


State 18

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 19

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 20

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 21

   14 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 22

   13 statement: function_return .

    $default  reduce using rule 13 (statement)


State 23

   10 statement: function_declaration .

    $default  reduce using rule 10 (statement)


State 24

   11 statement: function_definition .

    $default  reduce using rule 11 (statement)


State 25

   12 statement: function_call .

    $default  reduce using rule 12 (statement)


State 26

    5 statement: T . MAIN LP RP statements
   31 declaration: T . IDENTIFIER LOP_ASSIGN expr
   32            | T . IDLIST
   39 function_declaration: T . IDENTIFIER LP IDLIST_DECL RP SEMICOLON
   40                     | T . IDENTIFIER LP RP SEMICOLON
   41 function_definition: T . IDENTIFIER LP IDLIST_DECL RP LB statements RB
   42                    | T . IDENTIFIER LP RP LB statements RB

    IDENTIFIER  shift, and go to state 49
    MAIN        shift, and go to state 50

    IDLIST  go to state 51


State 27

    4 statements: LB statements . RB

    RB  shift, and go to state 52


State 28

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 53


State 29

   43 function_call: IDENTIFIER LP . IDLIST RP SEMICOLON
   44              | IDENTIFIER LP . RP SEMICOLON

    RP          shift, and go to state 54
    IDENTIFIER  shift, and go to state 55

    IDLIST  go to state 56


State 30

   21 for_stmt: FOR LP . expr SEMICOLON expr SEMICOLON expr RP statements
   22         | FOR LP . declaration SEMICOLON expr SEMICOLON expr RP statements
   23         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   24         | FOR LP . expr SEMICOLON SEMICOLON expr RP statements
   25         | FOR LP . expr SEMICOLON expr SEMICOLON RP statements
   26         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   27         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   28         | FOR LP . expr SEMICOLON SEMICOLON RP statements
   29         | FOR LP . SEMICOLON SEMICOLON RP statements

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_BOOL       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_VOID       shift, and go to state 5
    SEMICOLON    shift, and go to state 57
    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    declaration  go to state 58
    expr         go to state 59
    T            go to state 60


State 31

   19 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 61


State 32

   30 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 62


State 33

   37 function_return: RETURN SEMICOLON .

    $default  reduce using rule 37 (function_return)


State 34

   66 expr: LP . expr RP

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 63


State 35

   67 expr: IDENTIFIER .

    $default  reduce using rule 67 (expr)


State 36

   68 expr: INTEGER .

    $default  reduce using rule 68 (expr)


State 37

   70 expr: CHAR .

    $default  reduce using rule 70 (expr)


State 38

   71 expr: STRING .

    $default  reduce using rule 71 (expr)


State 39

   69 expr: NUMBER .

    $default  reduce using rule 69 (expr)


State 40

   65 expr: MINUS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 64


State 41

   54 expr: NOT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 65


State 42

   64 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 66


State 43

   38 function_return: RETURN expr . SEMICOLON
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 67
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 44

    0 $accept: program $end .

    $default  accept


State 45

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 46

   18 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 86
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 47

   20 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 20 (if_else_stmt)


State 48

   14 statement: declaration SEMICOLON .

    $default  reduce using rule 14 (statement)


State 49

   31 declaration: T IDENTIFIER . LOP_ASSIGN expr
   33 IDLIST: IDENTIFIER . COMMA IDLIST
   34       | IDENTIFIER .
   39 function_declaration: T IDENTIFIER . LP IDLIST_DECL RP SEMICOLON
   40                     | T IDENTIFIER . LP RP SEMICOLON
   41 function_definition: T IDENTIFIER . LP IDLIST_DECL RP LB statements RB
   42                    | T IDENTIFIER . LP RP LB statements RB

    LOP_ASSIGN  shift, and go to state 87
    COMMA       shift, and go to state 88
    LP          shift, and go to state 89

    $default  reduce using rule 34 (IDLIST)


State 50

    5 statement: T MAIN . LP RP statements

    LP  shift, and go to state 90


State 51

   32 declaration: T IDLIST .

    $default  reduce using rule 32 (declaration)


State 52

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 53

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 91
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 54

   44 function_call: IDENTIFIER LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 92


State 55

   33 IDLIST: IDENTIFIER . COMMA IDLIST
   34       | IDENTIFIER .

    COMMA  shift, and go to state 88

    COMMA     [reduce using rule 34 (IDLIST)]
    $default  reduce using rule 34 (IDLIST)


State 56

   43 function_call: IDENTIFIER LP IDLIST . RP SEMICOLON

    RP  shift, and go to state 93


State 57

   23 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   26         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   27         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   29         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 94
    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 95


State 58

   22 for_stmt: FOR LP declaration . SEMICOLON expr SEMICOLON expr RP statements

    SEMICOLON  shift, and go to state 96


State 59

   21 for_stmt: FOR LP expr . SEMICOLON expr SEMICOLON expr RP statements
   24         | FOR LP expr . SEMICOLON SEMICOLON expr RP statements
   25         | FOR LP expr . SEMICOLON expr SEMICOLON RP statements
   28         | FOR LP expr . SEMICOLON SEMICOLON RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 97
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 60

   31 declaration: T . IDENTIFIER LOP_ASSIGN expr
   32            | T . IDLIST

    IDENTIFIER  shift, and go to state 98

    IDLIST  go to state 51


State 61

   19 if_stmt: IF LP expr . RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    RP           shift, and go to state 99
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 62

   30 while_stmt: WHILE LP expr . RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    RP           shift, and go to state 100
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 63

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr
   66     | LP expr . RP

    RP           shift, and go to state 101
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 64

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr
   65     | MINUS expr .

    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 65 (expr)


State 65

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   54     | NOT expr .
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 54 (expr)


State 66

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr
   64     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 64 (expr)


State 67

   38 function_return: RETURN expr SEMICOLON .

    $default  reduce using rule 38 (function_return)


State 68

   45 expr: expr PLUS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 102


State 69

   46 expr: expr MINUS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 103


State 70

   47 expr: expr TIMES . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 104


State 71

   48 expr: expr DIVIDE . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 105


State 72

   49 expr: expr MOD . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 106


State 73

   51 expr: expr PPLUS .

    $default  reduce using rule 51 (expr)


State 74

   50 expr: expr MMINUS .

    $default  reduce using rule 50 (expr)


State 75

   52 expr: expr AND . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 107


State 76

   53 expr: expr OR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 108


State 77

   56 expr: expr EQU . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 109


State 78

   57 expr: expr GTR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 110


State 79

   58 expr: expr LSS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 111


State 80

   59 expr: expr GEQ . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 112


State 81

   60 expr: expr LEQ . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 113


State 82

   61 expr: expr NEQ . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 114


State 83

   62 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 115


State 84

   63 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 116


State 85

   55 expr: expr XOR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 117


State 86

   18 else_stmt: ELSE statements .

    $default  reduce using rule 18 (else_stmt)


State 87

   31 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 118


State 88

   33 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 55

    IDLIST  go to state 119


State 89

   39 function_declaration: T IDENTIFIER LP . IDLIST_DECL RP SEMICOLON
   40                     | T IDENTIFIER LP . RP SEMICOLON
   41 function_definition: T IDENTIFIER LP . IDLIST_DECL RP LB statements RB
   42                    | T IDENTIFIER LP . RP LB statements RB

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5
    RP        shift, and go to state 120

    declaration  go to state 121
    IDLIST_DECL  go to state 122
    T            go to state 60


State 90

    5 statement: T MAIN LP . RP statements

    RP  shift, and go to state 123


State 91

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 17 (assignment_stmt)


State 92

   44 function_call: IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 44 (function_call)


State 93

   43 function_call: IDENTIFIER LP IDLIST RP . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 94

   26 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   29         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 34
    RP           shift, and go to state 125
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 126


State 95

   23 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   27         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 127
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 96

   22 for_stmt: FOR LP declaration SEMICOLON . expr SEMICOLON expr RP statements

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 128


State 97

   21 for_stmt: FOR LP expr SEMICOLON . expr SEMICOLON expr RP statements
   24         | FOR LP expr SEMICOLON . SEMICOLON expr RP statements
   25         | FOR LP expr SEMICOLON . expr SEMICOLON RP statements
   28         | FOR LP expr SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 129
    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 130


State 98

   31 declaration: T IDENTIFIER . LOP_ASSIGN expr
   33 IDLIST: IDENTIFIER . COMMA IDLIST
   34       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 87
    COMMA       shift, and go to state 88

    COMMA     [reduce using rule 34 (IDLIST)]
    $default  reduce using rule 34 (IDLIST)


State 99

   19 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 131
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 100

   30 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 132
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 101

   66 expr: LP expr RP .

    $default  reduce using rule 66 (expr)


State 102

   45 expr: expr . PLUS expr
   45     | expr PLUS expr .
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 45 (expr)


State 103

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   46     | expr MINUS expr .
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 46 (expr)


State 104

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   47     | expr TIMES expr .
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 47 (expr)


State 105

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   48     | expr DIVIDE expr .
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 48 (expr)


State 106

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   49     | expr MOD expr .
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 49 (expr)


State 107

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   52     | expr AND expr .
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74
    EQU     shift, and go to state 77
    GTR     shift, and go to state 78
    LSS     shift, and go to state 79
    GEQ     shift, and go to state 80
    LEQ     shift, and go to state 81
    NEQ     shift, and go to state 82

    $default  reduce using rule 52 (expr)


State 108

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   53     | expr OR expr .
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74
    AND     shift, and go to state 75
    EQU     shift, and go to state 77
    GTR     shift, and go to state 78
    LSS     shift, and go to state 79
    GEQ     shift, and go to state 80
    LEQ     shift, and go to state 81
    NEQ     shift, and go to state 82
    XOR     shift, and go to state 85

    $default  reduce using rule 53 (expr)


State 109

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   56     | expr EQU expr .
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74
    GTR     shift, and go to state 78
    LSS     shift, and go to state 79
    GEQ     shift, and go to state 80
    LEQ     shift, and go to state 81

    $default  reduce using rule 56 (expr)


State 110

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   57     | expr GTR expr .
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 57 (expr)


State 111

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   58     | expr LSS expr .
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 58 (expr)


State 112

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   59     | expr GEQ expr .
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 59 (expr)


State 113

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   60     | expr LEQ expr .
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74

    $default  reduce using rule 60 (expr)


State 114

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   61     | expr NEQ expr .
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74
    GTR     shift, and go to state 78
    LSS     shift, and go to state 79
    GEQ     shift, and go to state 80
    LEQ     shift, and go to state 81

    $default  reduce using rule 61 (expr)


State 115

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   62     | expr LOGICAL_AND expr .
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74
    AND     shift, and go to state 75
    OR      shift, and go to state 76
    EQU     shift, and go to state 77
    GTR     shift, and go to state 78
    LSS     shift, and go to state 79
    GEQ     shift, and go to state 80
    LEQ     shift, and go to state 81
    NEQ     shift, and go to state 82
    XOR     shift, and go to state 85

    $default  reduce using rule 62 (expr)


State 116

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr
   63     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    XOR          shift, and go to state 85

    $default  reduce using rule 63 (expr)


State 117

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   55     | expr XOR expr .
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69
    TIMES   shift, and go to state 70
    DIVIDE  shift, and go to state 71
    MOD     shift, and go to state 72
    PPLUS   shift, and go to state 73
    MMINUS  shift, and go to state 74
    AND     shift, and go to state 75
    EQU     shift, and go to state 77
    GTR     shift, and go to state 78
    LSS     shift, and go to state 79
    GEQ     shift, and go to state 80
    LEQ     shift, and go to state 81
    NEQ     shift, and go to state 82

    $default  reduce using rule 55 (expr)


State 118

   31 declaration: T IDENTIFIER LOP_ASSIGN expr .
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85

    $default  reduce using rule 31 (declaration)


State 119

   33 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 33 (IDLIST)


State 120

   40 function_declaration: T IDENTIFIER LP RP . SEMICOLON
   42 function_definition: T IDENTIFIER LP RP . LB statements RB

    SEMICOLON  shift, and go to state 133
    LB         shift, and go to state 134


State 121

   35 IDLIST_DECL: declaration .
   36            | declaration . COMMA IDLIST_DECL

    COMMA  shift, and go to state 135

    $default  reduce using rule 35 (IDLIST_DECL)


State 122

   39 function_declaration: T IDENTIFIER LP IDLIST_DECL . RP SEMICOLON
   41 function_definition: T IDENTIFIER LP IDLIST_DECL . RP LB statements RB

    RP  shift, and go to state 136


State 123

    5 statement: T MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 137
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 124

   43 function_call: IDENTIFIER LP IDLIST RP SEMICOLON .

    $default  reduce using rule 43 (function_call)


State 125

   29 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 138
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 126

   26 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    RP           shift, and go to state 139
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 127

   23 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   27         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 34
    RP           shift, and go to state 140
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 141


State 128

   22 for_stmt: FOR LP declaration SEMICOLON expr . SEMICOLON expr RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 142
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 129

   24 for_stmt: FOR LP expr SEMICOLON SEMICOLON . expr RP statements
   28         | FOR LP expr SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 34
    RP           shift, and go to state 143
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 144


State 130

   21 for_stmt: FOR LP expr SEMICOLON expr . SEMICOLON expr RP statements
   25         | FOR LP expr SEMICOLON expr . SEMICOLON RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 145
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 131

   19 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 19 (if_stmt)


State 132

   30 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 30 (while_stmt)


State 133

   40 function_declaration: T IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 40 (function_declaration)


State 134

   42 function_definition: T IDENTIFIER LP RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 146
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 135

   36 IDLIST_DECL: declaration COMMA . IDLIST_DECL

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    declaration  go to state 121
    IDLIST_DECL  go to state 147
    T            go to state 60


State 136

   39 function_declaration: T IDENTIFIER LP IDLIST_DECL RP . SEMICOLON
   41 function_definition: T IDENTIFIER LP IDLIST_DECL RP . LB statements RB

    SEMICOLON  shift, and go to state 148
    LB         shift, and go to state 149


State 137

    5 statement: T MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 138

   29 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 29 (for_stmt)


State 139

   26 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 150
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 140

   27 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 151
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 141

   23 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    RP           shift, and go to state 152
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 142

   22 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON . expr RP statements

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 153


State 143

   28 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 154
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 144

   24 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr . RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    RP           shift, and go to state 155
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 145

   21 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON . expr RP statements
   25         | FOR LP expr SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 34
    RP           shift, and go to state 156
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 157


State 146

   42 function_definition: T IDENTIFIER LP RP LB statements . RB

    RB  shift, and go to state 158


State 147

   36 IDLIST_DECL: declaration COMMA IDLIST_DECL .

    $default  reduce using rule 36 (IDLIST_DECL)


State 148

   39 function_declaration: T IDENTIFIER LP IDLIST_DECL RP SEMICOLON .

    $default  reduce using rule 39 (function_declaration)


State 149

   41 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 159
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 150

   26 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 26 (for_stmt)


State 151

   27 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 27 (for_stmt)


State 152

   23 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 160
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 153

   22 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr . RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    RP           shift, and go to state 161
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 154

   28 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 28 (for_stmt)


State 155

   24 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 162
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 156

   25 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 163
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 157

   21 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr . RP statements
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . TIMES expr
   48     | expr . DIVIDE expr
   49     | expr . MOD expr
   50     | expr . MMINUS
   51     | expr . PPLUS
   52     | expr . AND expr
   53     | expr . OR expr
   55     | expr . XOR expr
   56     | expr . EQU expr
   57     | expr . GTR expr
   58     | expr . LSS expr
   59     | expr . GEQ expr
   60     | expr . LEQ expr
   61     | expr . NEQ expr
   62     | expr . LOGICAL_AND expr
   63     | expr . LOGICAL_OR expr

    RP           shift, and go to state 164
    PLUS         shift, and go to state 68
    MINUS        shift, and go to state 69
    TIMES        shift, and go to state 70
    DIVIDE       shift, and go to state 71
    MOD          shift, and go to state 72
    PPLUS        shift, and go to state 73
    MMINUS       shift, and go to state 74
    AND          shift, and go to state 75
    OR           shift, and go to state 76
    EQU          shift, and go to state 77
    GTR          shift, and go to state 78
    LSS          shift, and go to state 79
    GEQ          shift, and go to state 80
    LEQ          shift, and go to state 81
    NEQ          shift, and go to state 82
    LOGICAL_AND  shift, and go to state 83
    LOGICAL_OR   shift, and go to state 84
    XOR          shift, and go to state 85


State 158

   42 function_definition: T IDENTIFIER LP RP LB statements RB .

    $default  reduce using rule 42 (function_definition)


State 159

   41 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements . RB

    RB  shift, and go to state 165


State 160

   23 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 23 (for_stmt)


State 161

   22 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 166
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 162

   24 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 24 (for_stmt)


State 163

   25 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 25 (for_stmt)


State 164

   21 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 167
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 165

   41 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements RB .

    $default  reduce using rule 41 (function_definition)


State 166

   22 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 22 (for_stmt)


State 167

   21 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 21 (for_stmt)
