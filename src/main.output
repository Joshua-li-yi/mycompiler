Terminals unused in grammar

   T_STRING
   BOOL
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ
   SHIFT_LEFT
   SHIFT_RIGHT


State 15 conflicts: 12 shift/reduce
State 17 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | for_stmt
   10          | function_declaration
   11          | function_definition
   12          | function_call
   13          | declaration SEMICOLON
   14          | assignment_stmt
   15          | SEMICOLON

   16 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON

   17 else_stmt: ELSE statements

   18 if_stmt: IF LP expr RP statements

   19 if_else_stmt: if_stmt else_stmt

   20 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements
   21         | FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements
   22         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   23         | FOR LP expr SEMICOLON SEMICOLON expr RP statements
   24         | FOR LP expr SEMICOLON expr SEMICOLON RP statements
   25         | FOR LP SEMICOLON SEMICOLON expr RP statements
   26         | FOR LP SEMICOLON expr SEMICOLON RP statements
   27         | FOR LP expr SEMICOLON SEMICOLON RP statements
   28         | FOR LP SEMICOLON SEMICOLON RP statements

   29 while_stmt: WHILE LP expr RP statements

   30 declaration: T IDENTIFIER LOP_ASSIGN expr
   31            | T IDLIST

   32 IDLIST: IDENTIFIER COMMA IDLIST
   33       | IDENTIFIER

   34 IDLIST_DECL: declaration
   35            | declaration COMMA IDLIST_DECL

   36 function_return: RETURN SEMICOLON
   37                | RETURN expr SEMICOLON

   38 function_declaration: T IDENTIFIER LP IDLIST_DECL RP SEMICOLON
   39                     | T IDENTIFIER LP RP SEMICOLON

   40 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements function_return RB
   41                    | T IDENTIFIER LP RP LB statements function_return RB

   42 function_call: IDENTIFIER LP IDLIST RP SEMICOLON
   43              | IDENTIFIER LP RP SEMICOLON

   44 expr: expr PLUS expr
   45     | expr MINUS expr
   46     | expr TIMES expr
   47     | expr DIVIDE expr
   48     | expr MOD expr
   49     | expr MMINUS
   50     | expr PPLUS
   51     | expr AND expr
   52     | expr OR expr
   53     | NOT expr
   54     | expr XOR expr
   55     | expr EQU expr
   56     | expr GTR expr
   57     | expr LSS expr
   58     | expr GEQ expr
   59     | expr LEQ expr
   60     | expr NEQ expr
   61     | expr LOGICAL_AND expr
   62     | expr LOGICAL_OR expr
   63     | LOGICAL_NOT expr
   64     | MINUS expr
   65     | LP expr RP
   66     | IDENTIFIER
   67     | INTEGER
   68     | NUMBER
   69     | CHAR
   70     | STRING

   71 T: T_INT
   72  | T_CHAR
   73  | T_BOOL
   74  | T_DOUBLE
   75  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 72
T_INT (259) 71
T_STRING (260)
T_BOOL (261) 73
T_DOUBLE (262) 74
T_VOID (263) 75
LOP_ASSIGN (264) 16 30
SEMICOLON (265) 13 15 16 20 21 22 23 24 25 26 27 28 36 37 38 39 42
    43
LB (266) 4 40 41
RB (267) 4 40 41
COMMA (268) 32 35
LP (269) 5 18 20 21 22 23 24 25 26 27 28 29 38 39 40 41 42 43 65
RP (270) 5 18 20 21 22 23 24 25 26 27 28 29 38 39 40 41 42 43 65
IDENTIFIER (271) 16 30 32 33 38 39 40 41 42 43 66
INTEGER (272) 67
CHAR (273) 69
BOOL (274)
STRING (275) 70
NUMBER (276) 68
PLUS (277) 44
MINUS (278) 45 64
TIMES (279) 46
DIVIDE (280) 47
MOD (281) 48
PPLUS (282) 50
MMINUS (283) 49
AND (284) 51
OR (285) 52
NOT (286) 53
EQU (287) 55
GTR (288) 56
LSS (289) 57
GEQ (290) 58
LEQ (291) 59
NEQ (292) 60
LOGICAL_AND (293) 61
LOGICAL_OR (294) 62
LOGICAL_NOT (295) 63
UMINUS (296)
FOR (297) 20 21 22 23 24 25 26 27 28
INPUT (298)
OUTPUT (299)
DO (300)
MAIN (301) 5
IF (302) 18
ELSE (303) 17
WHILE (304) 29
RETURN (305) 36 37
EOL (306)
LOP_EQ (307)
XOR (308) 54
SHIFT_LEFT (309)
SHIFT_RIGHT (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3 4, on right: 1 3 4 5 17 18 20 21 22 23 24 25 26 27
    28 29 40 41
statement (59)
    on left: 5 6 7 8 9 10 11 12 13 14 15, on right: 2 3
assignment_stmt (60)
    on left: 16, on right: 14
else_stmt (61)
    on left: 17, on right: 19
if_stmt (62)
    on left: 18, on right: 7 19
if_else_stmt (63)
    on left: 19, on right: 8
for_stmt (64)
    on left: 20 21 22 23 24 25 26 27 28, on right: 9
while_stmt (65)
    on left: 29, on right: 6
declaration (66)
    on left: 30 31, on right: 13 21 34 35
IDLIST (67)
    on left: 32 33, on right: 31 32 42
IDLIST_DECL (68)
    on left: 34 35, on right: 35 38 40
function_return (69)
    on left: 36 37, on right: 40 41
function_declaration (70)
    on left: 38 39, on right: 10
function_definition (71)
    on left: 40 41, on right: 11
function_call (72)
    on left: 42 43, on right: 12
expr (73)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 65 66 67 68 69 70, on right: 16 18 20 21 22 23 24 25 26
    27 29 30 37 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65
T (74)
    on left: 71 72 73 74 75, on right: 30 31 38 39 40 41


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    program               go to state 13
    statements            go to state 14
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 1

   72 T: T_CHAR .

    $default  reduce using rule 72 (T)


State 2

   71 T: T_INT .

    $default  reduce using rule 71 (T)


State 3

   73 T: T_BOOL .

    $default  reduce using rule 73 (T)


State 4

   74 T: T_DOUBLE .

    $default  reduce using rule 74 (T)


State 5

   75 T: T_VOID .

    $default  reduce using rule 75 (T)


State 6

   15 statement: SEMICOLON .

    $default  reduce using rule 15 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 26
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 8

   16 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   42 function_call: IDENTIFIER . LP IDLIST RP SEMICOLON
   43              | IDENTIFIER . LP RP SEMICOLON

    LOP_ASSIGN  shift, and go to state 27
    LP          shift, and go to state 28


State 9

   20 for_stmt: FOR . LP expr SEMICOLON expr SEMICOLON expr RP statements
   21         | FOR . LP declaration SEMICOLON expr SEMICOLON expr RP statements
   22         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   23         | FOR . LP expr SEMICOLON SEMICOLON expr RP statements
   24         | FOR . LP expr SEMICOLON expr SEMICOLON RP statements
   25         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   26         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   27         | FOR . LP expr SEMICOLON SEMICOLON RP statements
   28         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  shift, and go to state 29


State 10

    5 statement: MAIN . LP RP statements

    LP  shift, and go to state 30


State 11

   18 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 31


State 12

   29 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 32


State 13

    0 $accept: program . $end

    $end  shift, and go to state 33


State 14

    1 program: statements .

    $default  reduce using rule 1 (program)


State 15

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    MAIN        [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements            go to state 34
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 16

   14 statement: assignment_stmt .

    $default  reduce using rule 14 (statement)


State 17

    7 statement: if_stmt .
   19 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 35

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 36


State 18

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 19

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 20

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 21

   13 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 37


State 22

   10 statement: function_declaration .

    $default  reduce using rule 10 (statement)


State 23

   11 statement: function_definition .

    $default  reduce using rule 11 (statement)


State 24

   12 statement: function_call .

    $default  reduce using rule 12 (statement)


State 25

   30 declaration: T . IDENTIFIER LOP_ASSIGN expr
   31            | T . IDLIST
   38 function_declaration: T . IDENTIFIER LP IDLIST_DECL RP SEMICOLON
   39                     | T . IDENTIFIER LP RP SEMICOLON
   40 function_definition: T . IDENTIFIER LP IDLIST_DECL RP LB statements function_return RB
   41                    | T . IDENTIFIER LP RP LB statements function_return RB

    IDENTIFIER  shift, and go to state 38

    IDLIST  go to state 39


State 26

    4 statements: LB statements . RB

    RB  shift, and go to state 40


State 27

   16 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 50


State 28

   42 function_call: IDENTIFIER LP . IDLIST RP SEMICOLON
   43              | IDENTIFIER LP . RP SEMICOLON

    RP          shift, and go to state 51
    IDENTIFIER  shift, and go to state 52

    IDLIST  go to state 53


State 29

   20 for_stmt: FOR LP . expr SEMICOLON expr SEMICOLON expr RP statements
   21         | FOR LP . declaration SEMICOLON expr SEMICOLON expr RP statements
   22         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   23         | FOR LP . expr SEMICOLON SEMICOLON expr RP statements
   24         | FOR LP . expr SEMICOLON expr SEMICOLON RP statements
   25         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   26         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   27         | FOR LP . expr SEMICOLON SEMICOLON RP statements
   28         | FOR LP . SEMICOLON SEMICOLON RP statements

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_BOOL       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_VOID       shift, and go to state 5
    SEMICOLON    shift, and go to state 54
    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    declaration  go to state 55
    expr         go to state 56
    T            go to state 57


State 30

    5 statement: MAIN LP . RP statements

    RP  shift, and go to state 58


State 31

   18 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 59


State 32

   29 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 60


State 33

    0 $accept: program $end .

    $default  accept


State 34

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 35

   17 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 61
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 36

   19 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 19 (if_else_stmt)


State 37

   13 statement: declaration SEMICOLON .

    $default  reduce using rule 13 (statement)


State 38

   30 declaration: T IDENTIFIER . LOP_ASSIGN expr
   32 IDLIST: IDENTIFIER . COMMA IDLIST
   33       | IDENTIFIER .
   38 function_declaration: T IDENTIFIER . LP IDLIST_DECL RP SEMICOLON
   39                     | T IDENTIFIER . LP RP SEMICOLON
   40 function_definition: T IDENTIFIER . LP IDLIST_DECL RP LB statements function_return RB
   41                    | T IDENTIFIER . LP RP LB statements function_return RB

    LOP_ASSIGN  shift, and go to state 62
    COMMA       shift, and go to state 63
    LP          shift, and go to state 64

    $default  reduce using rule 33 (IDLIST)


State 39

   31 declaration: T IDLIST .

    $default  reduce using rule 31 (declaration)


State 40

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 41

   65 expr: LP . expr RP

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 65


State 42

   66 expr: IDENTIFIER .

    $default  reduce using rule 66 (expr)


State 43

   67 expr: INTEGER .

    $default  reduce using rule 67 (expr)


State 44

   69 expr: CHAR .

    $default  reduce using rule 69 (expr)


State 45

   70 expr: STRING .

    $default  reduce using rule 70 (expr)


State 46

   68 expr: NUMBER .

    $default  reduce using rule 68 (expr)


State 47

   64 expr: MINUS . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 66


State 48

   53 expr: NOT . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 67


State 49

   63 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 68


State 50

   16 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 69
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 51

   43 function_call: IDENTIFIER LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 88


State 52

   32 IDLIST: IDENTIFIER . COMMA IDLIST
   33       | IDENTIFIER .

    COMMA  shift, and go to state 63

    COMMA     [reduce using rule 33 (IDLIST)]
    $default  reduce using rule 33 (IDLIST)


State 53

   42 function_call: IDENTIFIER LP IDLIST . RP SEMICOLON

    RP  shift, and go to state 89


State 54

   22 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   25         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   26         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   28         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 90
    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 91


State 55

   21 for_stmt: FOR LP declaration . SEMICOLON expr SEMICOLON expr RP statements

    SEMICOLON  shift, and go to state 92


State 56

   20 for_stmt: FOR LP expr . SEMICOLON expr SEMICOLON expr RP statements
   23         | FOR LP expr . SEMICOLON SEMICOLON expr RP statements
   24         | FOR LP expr . SEMICOLON expr SEMICOLON RP statements
   27         | FOR LP expr . SEMICOLON SEMICOLON RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 93
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 57

   30 declaration: T . IDENTIFIER LOP_ASSIGN expr
   31            | T . IDLIST

    IDENTIFIER  shift, and go to state 94

    IDLIST  go to state 39


State 58

    5 statement: MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 95
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 59

   18 if_stmt: IF LP expr . RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    RP           shift, and go to state 96
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 60

   29 while_stmt: WHILE LP expr . RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    RP           shift, and go to state 97
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 61

   17 else_stmt: ELSE statements .

    $default  reduce using rule 17 (else_stmt)


State 62

   30 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 98


State 63

   32 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 52

    IDLIST  go to state 99


State 64

   38 function_declaration: T IDENTIFIER LP . IDLIST_DECL RP SEMICOLON
   39                     | T IDENTIFIER LP . RP SEMICOLON
   40 function_definition: T IDENTIFIER LP . IDLIST_DECL RP LB statements function_return RB
   41                    | T IDENTIFIER LP . RP LB statements function_return RB

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5
    RP        shift, and go to state 100

    declaration  go to state 101
    IDLIST_DECL  go to state 102
    T            go to state 57


State 65

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr
   65     | LP expr . RP

    RP           shift, and go to state 103
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 66

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr
   64     | MINUS expr .

    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 64 (expr)


State 67

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   53     | NOT expr .
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 53 (expr)


State 68

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr
   63     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 63 (expr)


State 69

   16 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 16 (assignment_stmt)


State 70

   44 expr: expr PLUS . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 104


State 71

   45 expr: expr MINUS . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 105


State 72

   46 expr: expr TIMES . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 106


State 73

   47 expr: expr DIVIDE . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 107


State 74

   48 expr: expr MOD . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 108


State 75

   50 expr: expr PPLUS .

    $default  reduce using rule 50 (expr)


State 76

   49 expr: expr MMINUS .

    $default  reduce using rule 49 (expr)


State 77

   51 expr: expr AND . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 109


State 78

   52 expr: expr OR . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 110


State 79

   55 expr: expr EQU . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 111


State 80

   56 expr: expr GTR . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 112


State 81

   57 expr: expr LSS . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 113


State 82

   58 expr: expr GEQ . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 114


State 83

   59 expr: expr LEQ . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 115


State 84

   60 expr: expr NEQ . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 116


State 85

   61 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 117


State 86

   62 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 118


State 87

   54 expr: expr XOR . expr

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 119


State 88

   43 function_call: IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 43 (function_call)


State 89

   42 function_call: IDENTIFIER LP IDLIST RP . SEMICOLON

    SEMICOLON  shift, and go to state 120


State 90

   25 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   28         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 41
    RP           shift, and go to state 121
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 122


State 91

   22 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   26         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 123
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 92

   21 for_stmt: FOR LP declaration SEMICOLON . expr SEMICOLON expr RP statements

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 124


State 93

   20 for_stmt: FOR LP expr SEMICOLON . expr SEMICOLON expr RP statements
   23         | FOR LP expr SEMICOLON . SEMICOLON expr RP statements
   24         | FOR LP expr SEMICOLON . expr SEMICOLON RP statements
   27         | FOR LP expr SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 125
    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 126


State 94

   30 declaration: T IDENTIFIER . LOP_ASSIGN expr
   32 IDLIST: IDENTIFIER . COMMA IDLIST
   33       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 62
    COMMA       shift, and go to state 63

    COMMA     [reduce using rule 33 (IDLIST)]
    $default  reduce using rule 33 (IDLIST)


State 95

    5 statement: MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 96

   18 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 127
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 97

   29 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 128
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 98

   30 declaration: T IDENTIFIER LOP_ASSIGN expr .
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87

    $default  reduce using rule 30 (declaration)


State 99

   32 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 32 (IDLIST)


State 100

   39 function_declaration: T IDENTIFIER LP RP . SEMICOLON
   41 function_definition: T IDENTIFIER LP RP . LB statements function_return RB

    SEMICOLON  shift, and go to state 129
    LB         shift, and go to state 130


State 101

   34 IDLIST_DECL: declaration .
   35            | declaration . COMMA IDLIST_DECL

    COMMA  shift, and go to state 131

    $default  reduce using rule 34 (IDLIST_DECL)


State 102

   38 function_declaration: T IDENTIFIER LP IDLIST_DECL . RP SEMICOLON
   40 function_definition: T IDENTIFIER LP IDLIST_DECL . RP LB statements function_return RB

    RP  shift, and go to state 132


State 103

   65 expr: LP expr RP .

    $default  reduce using rule 65 (expr)


State 104

   44 expr: expr . PLUS expr
   44     | expr PLUS expr .
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 44 (expr)


State 105

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   45     | expr MINUS expr .
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 45 (expr)


State 106

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   46     | expr TIMES expr .
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 46 (expr)


State 107

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   47     | expr DIVIDE expr .
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 47 (expr)


State 108

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   48     | expr MOD expr .
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 48 (expr)


State 109

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   51     | expr AND expr .
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76
    EQU     shift, and go to state 79
    GTR     shift, and go to state 80
    LSS     shift, and go to state 81
    GEQ     shift, and go to state 82
    LEQ     shift, and go to state 83
    NEQ     shift, and go to state 84

    $default  reduce using rule 51 (expr)


State 110

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   52     | expr OR expr .
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76
    AND     shift, and go to state 77
    EQU     shift, and go to state 79
    GTR     shift, and go to state 80
    LSS     shift, and go to state 81
    GEQ     shift, and go to state 82
    LEQ     shift, and go to state 83
    NEQ     shift, and go to state 84
    XOR     shift, and go to state 87

    $default  reduce using rule 52 (expr)


State 111

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   55     | expr EQU expr .
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76
    GTR     shift, and go to state 80
    LSS     shift, and go to state 81
    GEQ     shift, and go to state 82
    LEQ     shift, and go to state 83

    $default  reduce using rule 55 (expr)


State 112

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   56     | expr GTR expr .
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 56 (expr)


State 113

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   57     | expr LSS expr .
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 57 (expr)


State 114

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   58     | expr GEQ expr .
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 58 (expr)


State 115

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   59     | expr LEQ expr .
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76

    $default  reduce using rule 59 (expr)


State 116

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   60     | expr NEQ expr .
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76
    GTR     shift, and go to state 80
    LSS     shift, and go to state 81
    GEQ     shift, and go to state 82
    LEQ     shift, and go to state 83

    $default  reduce using rule 60 (expr)


State 117

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   61     | expr LOGICAL_AND expr .
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76
    AND     shift, and go to state 77
    OR      shift, and go to state 78
    EQU     shift, and go to state 79
    GTR     shift, and go to state 80
    LSS     shift, and go to state 81
    GEQ     shift, and go to state 82
    LEQ     shift, and go to state 83
    NEQ     shift, and go to state 84
    XOR     shift, and go to state 87

    $default  reduce using rule 61 (expr)


State 118

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr
   62     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    XOR          shift, and go to state 87

    $default  reduce using rule 62 (expr)


State 119

   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   54     | expr XOR expr .
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 70
    MINUS   shift, and go to state 71
    TIMES   shift, and go to state 72
    DIVIDE  shift, and go to state 73
    MOD     shift, and go to state 74
    PPLUS   shift, and go to state 75
    MMINUS  shift, and go to state 76
    AND     shift, and go to state 77
    EQU     shift, and go to state 79
    GTR     shift, and go to state 80
    LSS     shift, and go to state 81
    GEQ     shift, and go to state 82
    LEQ     shift, and go to state 83
    NEQ     shift, and go to state 84

    $default  reduce using rule 54 (expr)


State 120

   42 function_call: IDENTIFIER LP IDLIST RP SEMICOLON .

    $default  reduce using rule 42 (function_call)


State 121

   28 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 133
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 122

   25 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    RP           shift, and go to state 134
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 123

   22 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   26         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 41
    RP           shift, and go to state 135
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 136


State 124

   21 for_stmt: FOR LP declaration SEMICOLON expr . SEMICOLON expr RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 137
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 125

   23 for_stmt: FOR LP expr SEMICOLON SEMICOLON . expr RP statements
   27         | FOR LP expr SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 41
    RP           shift, and go to state 138
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 139


State 126

   20 for_stmt: FOR LP expr SEMICOLON expr . SEMICOLON expr RP statements
   24         | FOR LP expr SEMICOLON expr . SEMICOLON RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 140
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 127

   18 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 18 (if_stmt)


State 128

   29 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 29 (while_stmt)


State 129

   39 function_declaration: T IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 39 (function_declaration)


State 130

   41 function_definition: T IDENTIFIER LP RP LB . statements function_return RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 141
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 131

   35 IDLIST_DECL: declaration COMMA . IDLIST_DECL

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    declaration  go to state 101
    IDLIST_DECL  go to state 142
    T            go to state 57


State 132

   38 function_declaration: T IDENTIFIER LP IDLIST_DECL RP . SEMICOLON
   40 function_definition: T IDENTIFIER LP IDLIST_DECL RP . LB statements function_return RB

    SEMICOLON  shift, and go to state 143
    LB         shift, and go to state 144


State 133

   28 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 28 (for_stmt)


State 134

   25 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 145
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 135

   26 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 146
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 136

   22 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    RP           shift, and go to state 147
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 137

   21 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON . expr RP statements

    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 148


State 138

   27 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 149
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 139

   23 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr . RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    RP           shift, and go to state 150
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 140

   20 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON . expr RP statements
   24         | FOR LP expr SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 41
    RP           shift, and go to state 151
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 152


State 141

   41 function_definition: T IDENTIFIER LP RP LB statements . function_return RB

    RETURN  shift, and go to state 153

    function_return  go to state 154


State 142

   35 IDLIST_DECL: declaration COMMA IDLIST_DECL .

    $default  reduce using rule 35 (IDLIST_DECL)


State 143

   38 function_declaration: T IDENTIFIER LP IDLIST_DECL RP SEMICOLON .

    $default  reduce using rule 38 (function_declaration)


State 144

   40 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB . statements function_return RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 155
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 145

   25 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 25 (for_stmt)


State 146

   26 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 26 (for_stmt)


State 147

   22 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 156
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 148

   21 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr . RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    RP           shift, and go to state 157
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 149

   27 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 27 (for_stmt)


State 150

   23 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 158
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 151

   24 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 159
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 152

   20 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr . RP statements
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    RP           shift, and go to state 160
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 153

   36 function_return: RETURN . SEMICOLON
   37                | RETURN . expr SEMICOLON

    SEMICOLON    shift, and go to state 161
    LP           shift, and go to state 41
    IDENTIFIER   shift, and go to state 42
    INTEGER      shift, and go to state 43
    CHAR         shift, and go to state 44
    STRING       shift, and go to state 45
    NUMBER       shift, and go to state 46
    MINUS        shift, and go to state 47
    NOT          shift, and go to state 48
    LOGICAL_NOT  shift, and go to state 49

    expr  go to state 162


State 154

   41 function_definition: T IDENTIFIER LP RP LB statements function_return . RB

    RB  shift, and go to state 163


State 155

   40 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements . function_return RB

    RETURN  shift, and go to state 153

    function_return  go to state 164


State 156

   22 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 22 (for_stmt)


State 157

   21 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 165
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 158

   23 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 23 (for_stmt)


State 159

   24 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 24 (for_stmt)


State 160

   20 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements            go to state 166
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_declaration  go to state 22
    function_definition   go to state 23
    function_call         go to state 24
    T                     go to state 25


State 161

   36 function_return: RETURN SEMICOLON .

    $default  reduce using rule 36 (function_return)


State 162

   37 function_return: RETURN expr . SEMICOLON
   44 expr: expr . PLUS expr
   45     | expr . MINUS expr
   46     | expr . TIMES expr
   47     | expr . DIVIDE expr
   48     | expr . MOD expr
   49     | expr . MMINUS
   50     | expr . PPLUS
   51     | expr . AND expr
   52     | expr . OR expr
   54     | expr . XOR expr
   55     | expr . EQU expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   58     | expr . GEQ expr
   59     | expr . LEQ expr
   60     | expr . NEQ expr
   61     | expr . LOGICAL_AND expr
   62     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 167
    PLUS         shift, and go to state 70
    MINUS        shift, and go to state 71
    TIMES        shift, and go to state 72
    DIVIDE       shift, and go to state 73
    MOD          shift, and go to state 74
    PPLUS        shift, and go to state 75
    MMINUS       shift, and go to state 76
    AND          shift, and go to state 77
    OR           shift, and go to state 78
    EQU          shift, and go to state 79
    GTR          shift, and go to state 80
    LSS          shift, and go to state 81
    GEQ          shift, and go to state 82
    LEQ          shift, and go to state 83
    NEQ          shift, and go to state 84
    LOGICAL_AND  shift, and go to state 85
    LOGICAL_OR   shift, and go to state 86
    XOR          shift, and go to state 87


State 163

   41 function_definition: T IDENTIFIER LP RP LB statements function_return RB .

    $default  reduce using rule 41 (function_definition)


State 164

   40 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements function_return . RB

    RB  shift, and go to state 168


State 165

   21 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 21 (for_stmt)


State 166

   20 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 20 (for_stmt)


State 167

   37 function_return: RETURN expr SEMICOLON .

    $default  reduce using rule 37 (function_return)


State 168

   40 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements function_return RB .

    $default  reduce using rule 40 (function_definition)
