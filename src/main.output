Terminals unused in grammar

   T_STRING
   BOOL
   FOR
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ


State 14 conflicts: 11 shift/reduce
State 16 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 89 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 95 conflicts: 21 shift/reduce
State 96 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | declaration SEMICOLON
   10          | assignment_stmt
   11          | SEMICOLON

   12 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON

   13 else_stmt: ELSE statement
   14          | ELSE LB statements RB

   15 if_stmt: IF LP expr RP statement
   16        | IF LP expr RP LB statements RB

   17 if_else_stmt: if_stmt else_stmt

   18 while_stmt: WHILE LP expr RP statement
   19           | WHILE LP expr RP LB statements RB

   20 declaration: T IDENTIFIER LOP_ASSIGN expr
   21            | T IDLIST

   22 IDLIST: IDENTIFIER COMMA IDLIST
   23       | IDENTIFIER

   24 expr: expr PLUS expr
   25     | expr MINUS expr
   26     | expr TIMES expr
   27     | expr OVER expr
   28     | expr MOD expr
   29     | expr MMINUS
   30     | expr PPLUS
   31     | expr AND expr
   32     | expr OR expr
   33     | NOT expr
   34     | expr XOR expr
   35     | expr SHIFT_LEFT expr
   36     | expr SHIFT_RIGHT expr
   37     | expr ASSIGN expr
   38     | expr EQU expr
   39     | expr GTR expr
   40     | expr LSS expr
   41     | expr GEQ expr
   42     | expr LEQ expr
   43     | expr NEQ expr
   44     | expr LOGICAL_AND expr
   45     | expr LOGICAL_OR expr
   46     | LOGICAL_NOT expr
   47     | MINUS expr
   48     | LP expr RP
   49     | IDENTIFIER
   50     | INTEGER
   51     | NUMBER
   52     | CHAR
   53     | STRING

   54 T: T_INT
   55  | T_CHAR
   56  | T_BOOL
   57  | T_DOUBLE
   58  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 55
T_INT (259) 54
T_STRING (260)
T_BOOL (261) 56
T_DOUBLE (262) 57
T_VOID (263) 58
LOP_ASSIGN (264) 12 20
SEMICOLON (265) 9 11 12
LB (266) 4 14 16 19
RB (267) 4 14 16 19
COMMA (268) 22
LP (269) 5 15 16 18 19 48
RP (270) 5 15 16 18 19 48
IDENTIFIER (271) 12 20 22 23 49
INTEGER (272) 50
CHAR (273) 52
BOOL (274)
STRING (275) 53
NUMBER (276) 51
PLUS (277) 24
MINUS (278) 25 47
TIMES (279) 26
OVER (280) 27
MOD (281) 28
PPLUS (282) 30
MMINUS (283) 29
AND (284) 31
OR (285) 32
XOR (286) 34
NOT (287) 33
SHIFT_LEFT (288) 35
SHIFT_RIGHT (289) 36
ASSIGN (290) 37
EQU (291) 38
GTR (292) 39
LSS (293) 40
GEQ (294) 41
LEQ (295) 42
NEQ (296) 43
LOGICAL_AND (297) 44
LOGICAL_OR (298) 45
LOGICAL_NOT (299) 46
UMINUS (300)
FOR (301)
INPUT (302)
OUTPUT (303)
DO (304)
MAIN (305) 5
IF (306) 15 16
ELSE (307) 13 14
WHILE (308) 18 19
EOL (309)
LOP_EQ (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3 4, on right: 1 3 4 5 14 16 19
statement (59)
    on left: 5 6 7 8 9 10 11, on right: 2 3 13 15 18
assignment_stmt (60)
    on left: 12, on right: 10
else_stmt (61)
    on left: 13 14, on right: 17
if_stmt (62)
    on left: 15 16, on right: 7 17
if_else_stmt (63)
    on left: 17, on right: 8
while_stmt (64)
    on left: 18 19, on right: 6
declaration (65)
    on left: 20 21, on right: 9
IDLIST (66)
    on left: 22 23, on right: 21 22
expr (67)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
    42 43 44 45 46 47 48 49 50 51 52 53, on right: 12 15 16 18 19 20
    24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48
T (68)
    on left: 54 55 56 57 58, on right: 20 21


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    program          go to state 12
    statements       go to state 13
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 1

   55 T: T_CHAR .

    $default  reduce using rule 55 (T)


State 2

   54 T: T_INT .

    $default  reduce using rule 54 (T)


State 3

   56 T: T_BOOL .

    $default  reduce using rule 56 (T)


State 4

   57 T: T_DOUBLE .

    $default  reduce using rule 57 (T)


State 5

   58 T: T_VOID .

    $default  reduce using rule 58 (T)


State 6

   11 statement: SEMICOLON .

    $default  reduce using rule 11 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 21
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 8

   12 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON

    LOP_ASSIGN  shift, and go to state 22


State 9

    5 statement: MAIN . LP RP statements

    LP  shift, and go to state 23


State 10

   15 if_stmt: IF . LP expr RP statement
   16        | IF . LP expr RP LB statements RB

    LP  shift, and go to state 24


State 11

   18 while_stmt: WHILE . LP expr RP statement
   19           | WHILE . LP expr RP LB statements RB

    LP  shift, and go to state 25


State 12

    0 $accept: program . $end

    $end  shift, and go to state 26


State 13

    1 program: statements .

    $default  reduce using rule 1 (program)


State 14

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    MAIN        [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements       go to state 27
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 15

   10 statement: assignment_stmt .

    $default  reduce using rule 10 (statement)


State 16

    7 statement: if_stmt .
   17 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 28

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 29


State 17

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 18

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 19

    9 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 30


State 20

   20 declaration: T . IDENTIFIER LOP_ASSIGN expr
   21            | T . IDLIST

    IDENTIFIER  shift, and go to state 31

    IDLIST  go to state 32


State 21

    4 statements: LB statements . RB

    RB  shift, and go to state 33


State 22

   12 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 43


State 23

    5 statement: MAIN LP . RP statements

    RP  shift, and go to state 44


State 24

   15 if_stmt: IF LP . expr RP statement
   16        | IF LP . expr RP LB statements RB

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 45


State 25

   18 while_stmt: WHILE LP . expr RP statement
   19           | WHILE LP . expr RP LB statements RB

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 46


State 26

    0 $accept: program $end .

    $default  accept


State 27

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 28

   13 else_stmt: ELSE . statement
   14          | ELSE . LB statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 47
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statement        go to state 48
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 29

   17 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 17 (if_else_stmt)


State 30

    9 statement: declaration SEMICOLON .

    $default  reduce using rule 9 (statement)


State 31

   20 declaration: T IDENTIFIER . LOP_ASSIGN expr
   22 IDLIST: IDENTIFIER . COMMA IDLIST
   23       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 49
    COMMA       shift, and go to state 50

    $default  reduce using rule 23 (IDLIST)


State 32

   21 declaration: T IDLIST .

    $default  reduce using rule 21 (declaration)


State 33

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 34

   48 expr: LP . expr RP

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 51


State 35

   49 expr: IDENTIFIER .

    $default  reduce using rule 49 (expr)


State 36

   50 expr: INTEGER .

    $default  reduce using rule 50 (expr)


State 37

   52 expr: CHAR .

    $default  reduce using rule 52 (expr)


State 38

   53 expr: STRING .

    $default  reduce using rule 53 (expr)


State 39

   51 expr: NUMBER .

    $default  reduce using rule 51 (expr)


State 40

   47 expr: MINUS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 52


State 41

   33 expr: NOT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 53


State 42

   46 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 54


State 43

   12 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 55
    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    OR           shift, and go to state 64
    XOR          shift, and go to state 65
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76


State 44

    5 statement: MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 77
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 45

   15 if_stmt: IF LP expr . RP statement
   16        | IF LP expr . RP LB statements RB
   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    RP           shift, and go to state 78
    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    OR           shift, and go to state 64
    XOR          shift, and go to state 65
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76


State 46

   18 while_stmt: WHILE LP expr . RP statement
   19           | WHILE LP expr . RP LB statements RB
   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    RP           shift, and go to state 79
    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    OR           shift, and go to state 64
    XOR          shift, and go to state 65
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76


State 47

   14 else_stmt: ELSE LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 80
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 48

   13 else_stmt: ELSE statement .

    $default  reduce using rule 13 (else_stmt)


State 49

   20 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 81


State 50

   22 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 82

    IDLIST  go to state 83


State 51

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr
   48     | LP expr . RP

    RP           shift, and go to state 84
    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    OR           shift, and go to state 64
    XOR          shift, and go to state 65
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76


State 52

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr
   47     | MINUS expr .

    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 47 (expr)]
    $default  reduce using rule 47 (expr)


State 53

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   33     | NOT expr .
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 54

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr
   46     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 46 (expr)]
    $default  reduce using rule 46 (expr)


State 55

   12 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 12 (assignment_stmt)


State 56

   24 expr: expr PLUS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 85


State 57

   25 expr: expr MINUS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 86


State 58

   26 expr: expr TIMES . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 87


State 59

   27 expr: expr OVER . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 88


State 60

   28 expr: expr MOD . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 89


State 61

   30 expr: expr PPLUS .

    $default  reduce using rule 30 (expr)


State 62

   29 expr: expr MMINUS .

    $default  reduce using rule 29 (expr)


State 63

   31 expr: expr AND . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 90


State 64

   32 expr: expr OR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 91


State 65

   34 expr: expr XOR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 92


State 66

   35 expr: expr SHIFT_LEFT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 93


State 67

   36 expr: expr SHIFT_RIGHT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 94


State 68

   37 expr: expr ASSIGN . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 95


State 69

   38 expr: expr EQU . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 96


State 70

   39 expr: expr GTR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 97


State 71

   40 expr: expr LSS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 98


State 72

   41 expr: expr GEQ . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 99


State 73

   42 expr: expr LEQ . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 100


State 74

   43 expr: expr NEQ . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 101


State 75

   44 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 102


State 76

   45 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 103


State 77

    5 statement: MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 78

   15 if_stmt: IF LP expr RP . statement
   16        | IF LP expr RP . LB statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 104
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statement        go to state 105
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 79

   18 while_stmt: WHILE LP expr RP . statement
   19           | WHILE LP expr RP . LB statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 106
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statement        go to state 107
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 80

   14 else_stmt: ELSE LB statements . RB

    RB  shift, and go to state 108


State 81

   20 declaration: T IDENTIFIER LOP_ASSIGN expr .
   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    OR           shift, and go to state 64
    XOR          shift, and go to state 65
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76

    $default  reduce using rule 20 (declaration)


State 82

   22 IDLIST: IDENTIFIER . COMMA IDLIST
   23       | IDENTIFIER .

    COMMA  shift, and go to state 50

    $default  reduce using rule 23 (IDLIST)


State 83

   22 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 22 (IDLIST)


State 84

   48 expr: LP expr RP .

    $default  reduce using rule 48 (expr)


State 85

   24 expr: expr . PLUS expr
   24     | expr PLUS expr .
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 58
    OVER    shift, and go to state 59
    MOD     shift, and go to state 60
    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


State 86

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   25     | expr MINUS expr .
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 58
    OVER    shift, and go to state 59
    MOD     shift, and go to state 60
    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 87

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   26     | expr TIMES expr .
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


State 88

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   27     | expr OVER expr .
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


State 89

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   28     | expr MOD expr .
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 90

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   31     | expr AND expr .
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74

    ASSIGN    [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 91

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   32     | expr OR expr .
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    XOR          shift, and go to state 65
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74

    ASSIGN    [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 92

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   34     | expr XOR expr .
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74

    ASSIGN    [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 93

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   35     | expr SHIFT_LEFT expr .
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    TIMES   shift, and go to state 58
    OVER    shift, and go to state 59
    MOD     shift, and go to state 60
    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 94

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   36     | expr SHIFT_RIGHT expr .
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    TIMES   shift, and go to state 58
    OVER    shift, and go to state 59
    MOD     shift, and go to state 60
    PPLUS   shift, and go to state 61
    MMINUS  shift, and go to state 62
    ASSIGN  shift, and go to state 68

    ASSIGN    [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 95

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   37     | expr ASSIGN expr .
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    OR           shift, and go to state 64
    XOR          shift, and go to state 65
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75
    LOGICAL_OR   shift, and go to state 76

    PLUS         [reduce using rule 37 (expr)]
    MINUS        [reduce using rule 37 (expr)]
    TIMES        [reduce using rule 37 (expr)]
    OVER         [reduce using rule 37 (expr)]
    MOD          [reduce using rule 37 (expr)]
    PPLUS        [reduce using rule 37 (expr)]
    MMINUS       [reduce using rule 37 (expr)]
    AND          [reduce using rule 37 (expr)]
    OR           [reduce using rule 37 (expr)]
    XOR          [reduce using rule 37 (expr)]
    SHIFT_LEFT   [reduce using rule 37 (expr)]
    SHIFT_RIGHT  [reduce using rule 37 (expr)]
    ASSIGN       [reduce using rule 37 (expr)]
    EQU          [reduce using rule 37 (expr)]
    GTR          [reduce using rule 37 (expr)]
    LSS          [reduce using rule 37 (expr)]
    GEQ          [reduce using rule 37 (expr)]
    LEQ          [reduce using rule 37 (expr)]
    NEQ          [reduce using rule 37 (expr)]
    LOGICAL_AND  [reduce using rule 37 (expr)]
    LOGICAL_OR   [reduce using rule 37 (expr)]
    $default     reduce using rule 37 (expr)


State 96

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   38     | expr EQU expr .
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73

    ASSIGN    [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 97

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   39     | expr GTR expr .
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68

    ASSIGN    [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 98

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   40     | expr LSS expr .
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68

    ASSIGN    [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 99

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   41     | expr GEQ expr .
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68

    ASSIGN    [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


State 100

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   42     | expr LEQ expr .
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68

    ASSIGN    [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


State 101

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   43     | expr NEQ expr .
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73

    ASSIGN    [reduce using rule 43 (expr)]
    $default  reduce using rule 43 (expr)


State 102

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   44     | expr LOGICAL_AND expr .
   45     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    OR           shift, and go to state 64
    XOR          shift, and go to state 65
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74

    ASSIGN    [reduce using rule 44 (expr)]
    $default  reduce using rule 44 (expr)


State 103

   24 expr: expr . PLUS expr
   25     | expr . MINUS expr
   26     | expr . TIMES expr
   27     | expr . OVER expr
   28     | expr . MOD expr
   29     | expr . MMINUS
   30     | expr . PPLUS
   31     | expr . AND expr
   32     | expr . OR expr
   34     | expr . XOR expr
   35     | expr . SHIFT_LEFT expr
   36     | expr . SHIFT_RIGHT expr
   37     | expr . ASSIGN expr
   38     | expr . EQU expr
   39     | expr . GTR expr
   40     | expr . LSS expr
   41     | expr . GEQ expr
   42     | expr . LEQ expr
   43     | expr . NEQ expr
   44     | expr . LOGICAL_AND expr
   45     | expr . LOGICAL_OR expr
   45     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 58
    OVER         shift, and go to state 59
    MOD          shift, and go to state 60
    PPLUS        shift, and go to state 61
    MMINUS       shift, and go to state 62
    AND          shift, and go to state 63
    OR           shift, and go to state 64
    XOR          shift, and go to state 65
    SHIFT_LEFT   shift, and go to state 66
    SHIFT_RIGHT  shift, and go to state 67
    ASSIGN       shift, and go to state 68
    EQU          shift, and go to state 69
    GTR          shift, and go to state 70
    LSS          shift, and go to state 71
    GEQ          shift, and go to state 72
    LEQ          shift, and go to state 73
    NEQ          shift, and go to state 74
    LOGICAL_AND  shift, and go to state 75

    ASSIGN    [reduce using rule 45 (expr)]
    $default  reduce using rule 45 (expr)


State 104

   16 if_stmt: IF LP expr RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 109
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 105

   15 if_stmt: IF LP expr RP statement .

    $default  reduce using rule 15 (if_stmt)


State 106

   19 while_stmt: WHILE LP expr RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 110
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 107

   18 while_stmt: WHILE LP expr RP statement .

    $default  reduce using rule 18 (while_stmt)


State 108

   14 else_stmt: ELSE LB statements RB .

    $default  reduce using rule 14 (else_stmt)


State 109

   16 if_stmt: IF LP expr RP LB statements . RB

    RB  shift, and go to state 111


State 110

   19 while_stmt: WHILE LP expr RP LB statements . RB

    RB  shift, and go to state 112


State 111

   16 if_stmt: IF LP expr RP LB statements RB .

    $default  reduce using rule 16 (if_stmt)


State 112

   19 while_stmt: WHILE LP expr RP LB statements RB .

    $default  reduce using rule 19 (while_stmt)
