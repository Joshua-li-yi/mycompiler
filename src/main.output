Nonterminals useless in grammar

   IDLIST


Terminals unused in grammar

   T_STRING
   LB
   RB
   COMMA
   BOOL
   FOR
   INPUT
   OUTPUT
   ELSE
   DO
   MAIN
   IF
   WHILE
   EOL
   LOP_EQ


Rules useless in grammar

   40 IDLIST: IDLIST COMMA IDENTIFIER
   41       | IDENTIFIER


State 25 conflicts: 1 shift/reduce
State 26 conflicts: 1 shift/reduce
State 27 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 60 conflicts: 21 shift/reduce
State 61 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration SEMICOLON

    6 declaration: T IDENTIFIER LOP_ASSIGN expr
    7            | T IDENTIFIER

    8 expr: expr PLUS expr
    9     | expr MINUS expr
   10     | expr TIMES expr
   11     | expr OVER expr
   12     | expr MOD expr
   13     | expr MMINUS
   14     | expr PPLUS
   15     | expr AND expr
   16     | expr OR expr
   17     | NOT expr
   18     | expr XOR expr
   19     | expr SHIFT_LEFT expr
   20     | expr SHIFT_RIGHT expr
   21     | expr ASSIGN expr
   22     | expr EQU expr
   23     | expr GTR expr
   24     | expr LSS expr
   25     | expr GEQ expr
   26     | expr LEQ expr
   27     | expr NEQ expr
   28     | expr LOGICAL_AND expr
   29     | expr LOGICAL_OR expr
   30     | LOGICAL_NOT expr
   31     | MINUS expr
   32     | LP expr RP
   33     | IDENTIFIER
   34     | INTEGER
   35     | CHAR
   36     | STRING

   37 T: T_INT
   38  | T_CHAR
   39  | T_BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 38
T_INT (259) 37
T_STRING (260)
T_BOOL (261) 39
LOP_ASSIGN (262) 6
SEMICOLON (263) 4 5
LB (264)
RB (265)
COMMA (266)
LP (267) 32
RP (268) 32
IDENTIFIER (269) 6 7 33
INTEGER (270) 34
CHAR (271) 35
BOOL (272)
STRING (273) 36
PLUS (274) 8
MINUS (275) 9 31
TIMES (276) 10
OVER (277) 11
MOD (278) 12
PPLUS (279) 14
MMINUS (280) 13
AND (281) 15
OR (282) 16
XOR (283) 18
NOT (284) 17
SHIFT_LEFT (285) 19
SHIFT_RIGHT (286) 20
ASSIGN (287) 21
EQU (288) 22
GTR (289) 23
LSS (290) 24
GEQ (291) 25
LEQ (292) 26
NEQ (293) 27
LOGICAL_AND (294) 28
LOGICAL_OR (295) 29
LOGICAL_NOT (296) 30
UMINUS (297)
FOR (298)
INPUT (299)
OUTPUT (300)
ELSE (301)
DO (302)
MAIN (303)
IF (304)
WHILE (305)
EOL (306)
LOP_EQ (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
statements (55)
    on left: 2 3, on right: 1 3
statement (56)
    on left: 4 5, on right: 2 3
declaration (57)
    on left: 6 7, on right: 5
expr (58)
    on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
    27 28 29 30 31 32 33 34 35 36, on right: 6 8 9 10 11 12 13 14 15
    16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
T (59)
    on left: 37 38 39, on right: 6 7


State 0

    0 $accept: . program $end

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    SEMICOLON  shift, and go to state 4

    program      go to state 5
    statements   go to state 6
    statement    go to state 7
    declaration  go to state 8
    T            go to state 9


State 1

   38 T: T_CHAR .

    $default  reduce using rule 38 (T)


State 2

   37 T: T_INT .

    $default  reduce using rule 37 (T)


State 3

   39 T: T_BOOL .

    $default  reduce using rule 39 (T)


State 4

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 10


State 6

    1 program: statements .
    3 statements: statements . statement

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    SEMICOLON  shift, and go to state 4

    $default  reduce using rule 1 (program)

    statement    go to state 11
    declaration  go to state 8
    T            go to state 9


State 7

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 8

    5 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 12


State 9

    6 declaration: T . IDENTIFIER LOP_ASSIGN expr
    7            | T . IDENTIFIER

    IDENTIFIER  shift, and go to state 13


State 10

    0 $accept: program $end .

    $default  accept


State 11

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 12

    5 statement: declaration SEMICOLON .

    $default  reduce using rule 5 (statement)


State 13

    6 declaration: T IDENTIFIER . LOP_ASSIGN expr
    7            | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 14

    $default  reduce using rule 7 (declaration)


State 14

    6 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 23


State 15

   32 expr: LP . expr RP

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 24


State 16

   33 expr: IDENTIFIER .

    $default  reduce using rule 33 (expr)


State 17

   34 expr: INTEGER .

    $default  reduce using rule 34 (expr)


State 18

   35 expr: CHAR .

    $default  reduce using rule 35 (expr)


State 19

   36 expr: STRING .

    $default  reduce using rule 36 (expr)


State 20

   31 expr: MINUS . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 25


State 21

   17 expr: NOT . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 26


State 22

   30 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 27


State 23

    6 declaration: T IDENTIFIER LOP_ASSIGN expr .
    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    AND          shift, and go to state 35
    OR           shift, and go to state 36
    XOR          shift, and go to state 37
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    EQU          shift, and go to state 41
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45
    NEQ          shift, and go to state 46
    LOGICAL_AND  shift, and go to state 47
    LOGICAL_OR   shift, and go to state 48

    $default  reduce using rule 6 (declaration)


State 24

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr
   32     | LP expr . RP

    RP           shift, and go to state 49
    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    AND          shift, and go to state 35
    OR           shift, and go to state 36
    XOR          shift, and go to state 37
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    EQU          shift, and go to state 41
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45
    NEQ          shift, and go to state 46
    LOGICAL_AND  shift, and go to state 47
    LOGICAL_OR   shift, and go to state 48


State 25

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr
   31     | MINUS expr .

    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 26

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   17     | NOT expr .
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 17 (expr)]
    $default  reduce using rule 17 (expr)


State 27

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr
   30     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 28

    8 expr: expr PLUS . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 50


State 29

    9 expr: expr MINUS . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 51


State 30

   10 expr: expr TIMES . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 52


State 31

   11 expr: expr OVER . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 53


State 32

   12 expr: expr MOD . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 54


State 33

   14 expr: expr PPLUS .

    $default  reduce using rule 14 (expr)


State 34

   13 expr: expr MMINUS .

    $default  reduce using rule 13 (expr)


State 35

   15 expr: expr AND . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 55


State 36

   16 expr: expr OR . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 56


State 37

   18 expr: expr XOR . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 57


State 38

   19 expr: expr SHIFT_LEFT . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 58


State 39

   20 expr: expr SHIFT_RIGHT . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 59


State 40

   21 expr: expr ASSIGN . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 60


State 41

   22 expr: expr EQU . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 61


State 42

   23 expr: expr GTR . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 62


State 43

   24 expr: expr LSS . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 63


State 44

   25 expr: expr GEQ . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 64


State 45

   26 expr: expr LEQ . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 65


State 46

   27 expr: expr NEQ . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 66


State 47

   28 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 67


State 48

   29 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 15
    IDENTIFIER   shift, and go to state 16
    INTEGER      shift, and go to state 17
    CHAR         shift, and go to state 18
    STRING       shift, and go to state 19
    MINUS        shift, and go to state 20
    NOT          shift, and go to state 21
    LOGICAL_NOT  shift, and go to state 22

    expr  go to state 68


State 49

   32 expr: LP expr RP .

    $default  reduce using rule 32 (expr)


State 50

    8 expr: expr . PLUS expr
    8     | expr PLUS expr .
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 30
    OVER    shift, and go to state 31
    MOD     shift, and go to state 32
    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 8 (expr)]
    $default  reduce using rule 8 (expr)


State 51

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
    9     | expr MINUS expr .
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 30
    OVER    shift, and go to state 31
    MOD     shift, and go to state 32
    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 9 (expr)]
    $default  reduce using rule 9 (expr)


State 52

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   10     | expr TIMES expr .
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 10 (expr)]
    $default  reduce using rule 10 (expr)


State 53

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   11     | expr OVER expr .
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 11 (expr)]
    $default  reduce using rule 11 (expr)


State 54

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   12     | expr MOD expr .
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 12 (expr)]
    $default  reduce using rule 12 (expr)


State 55

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   15     | expr AND expr .
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    EQU          shift, and go to state 41
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45
    NEQ          shift, and go to state 46

    ASSIGN    [reduce using rule 15 (expr)]
    $default  reduce using rule 15 (expr)


State 56

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   16     | expr OR expr .
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    AND          shift, and go to state 35
    XOR          shift, and go to state 37
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    EQU          shift, and go to state 41
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45
    NEQ          shift, and go to state 46

    ASSIGN    [reduce using rule 16 (expr)]
    $default  reduce using rule 16 (expr)


State 57

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   18     | expr XOR expr .
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    AND          shift, and go to state 35
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    EQU          shift, and go to state 41
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45
    NEQ          shift, and go to state 46

    ASSIGN    [reduce using rule 18 (expr)]
    $default  reduce using rule 18 (expr)


State 58

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   19     | expr SHIFT_LEFT expr .
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    OVER    shift, and go to state 31
    MOD     shift, and go to state 32
    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 19 (expr)]
    $default  reduce using rule 19 (expr)


State 59

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   20     | expr SHIFT_RIGHT expr .
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    OVER    shift, and go to state 31
    MOD     shift, and go to state 32
    PPLUS   shift, and go to state 33
    MMINUS  shift, and go to state 34
    ASSIGN  shift, and go to state 40

    ASSIGN    [reduce using rule 20 (expr)]
    $default  reduce using rule 20 (expr)


State 60

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   21     | expr ASSIGN expr .
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    AND          shift, and go to state 35
    OR           shift, and go to state 36
    XOR          shift, and go to state 37
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    EQU          shift, and go to state 41
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45
    NEQ          shift, and go to state 46
    LOGICAL_AND  shift, and go to state 47
    LOGICAL_OR   shift, and go to state 48

    PLUS         [reduce using rule 21 (expr)]
    MINUS        [reduce using rule 21 (expr)]
    TIMES        [reduce using rule 21 (expr)]
    OVER         [reduce using rule 21 (expr)]
    MOD          [reduce using rule 21 (expr)]
    PPLUS        [reduce using rule 21 (expr)]
    MMINUS       [reduce using rule 21 (expr)]
    AND          [reduce using rule 21 (expr)]
    OR           [reduce using rule 21 (expr)]
    XOR          [reduce using rule 21 (expr)]
    SHIFT_LEFT   [reduce using rule 21 (expr)]
    SHIFT_RIGHT  [reduce using rule 21 (expr)]
    ASSIGN       [reduce using rule 21 (expr)]
    EQU          [reduce using rule 21 (expr)]
    GTR          [reduce using rule 21 (expr)]
    LSS          [reduce using rule 21 (expr)]
    GEQ          [reduce using rule 21 (expr)]
    LEQ          [reduce using rule 21 (expr)]
    NEQ          [reduce using rule 21 (expr)]
    LOGICAL_AND  [reduce using rule 21 (expr)]
    LOGICAL_OR   [reduce using rule 21 (expr)]
    $default     reduce using rule 21 (expr)


State 61

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   22     | expr EQU expr .
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45

    ASSIGN    [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)


State 62

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   23     | expr GTR expr .
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40

    ASSIGN    [reduce using rule 23 (expr)]
    $default  reduce using rule 23 (expr)


State 63

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   24     | expr LSS expr .
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40

    ASSIGN    [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


State 64

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   25     | expr GEQ expr .
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40

    ASSIGN    [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 65

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   26     | expr LEQ expr .
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40

    ASSIGN    [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


State 66

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   27     | expr NEQ expr .
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45

    ASSIGN    [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


State 67

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   28     | expr LOGICAL_AND expr .
   29     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    AND          shift, and go to state 35
    OR           shift, and go to state 36
    XOR          shift, and go to state 37
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    EQU          shift, and go to state 41
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45
    NEQ          shift, and go to state 46

    ASSIGN    [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 68

    8 expr: expr . PLUS expr
    9     | expr . MINUS expr
   10     | expr . TIMES expr
   11     | expr . OVER expr
   12     | expr . MOD expr
   13     | expr . MMINUS
   14     | expr . PPLUS
   15     | expr . AND expr
   16     | expr . OR expr
   18     | expr . XOR expr
   19     | expr . SHIFT_LEFT expr
   20     | expr . SHIFT_RIGHT expr
   21     | expr . ASSIGN expr
   22     | expr . EQU expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   25     | expr . GEQ expr
   26     | expr . LEQ expr
   27     | expr . NEQ expr
   28     | expr . LOGICAL_AND expr
   29     | expr . LOGICAL_OR expr
   29     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 28
    MINUS        shift, and go to state 29
    TIMES        shift, and go to state 30
    OVER         shift, and go to state 31
    MOD          shift, and go to state 32
    PPLUS        shift, and go to state 33
    MMINUS       shift, and go to state 34
    AND          shift, and go to state 35
    OR           shift, and go to state 36
    XOR          shift, and go to state 37
    SHIFT_LEFT   shift, and go to state 38
    SHIFT_RIGHT  shift, and go to state 39
    ASSIGN       shift, and go to state 40
    EQU          shift, and go to state 41
    GTR          shift, and go to state 42
    LSS          shift, and go to state 43
    GEQ          shift, and go to state 44
    LEQ          shift, and go to state 45
    NEQ          shift, and go to state 46
    LOGICAL_AND  shift, and go to state 47

    ASSIGN    [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)
