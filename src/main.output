Terminals unused in grammar

   T_STRING
   BOOL
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ
   SHIFT_LEFT
   SHIFT_RIGHT


State 15 conflicts: 12 shift/reduce
State 17 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: T MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | for_stmt
   10          | function_declaration
   11          | function_definition
   12          | function_call
   13          | function_return
   14          | declaration SEMICOLON
   15          | assignment_stmt
   16          | SEMICOLON

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON
   18                | IDENTIFIER PLUS_ASSIGN expr SEMICOLON
   19                | IDENTIFIER MIN_ASSIGN expr SEMICOLON
   20                | IDENTIFIER TIM_ASSIGN expr SEMICOLON
   21                | IDENTIFIER DIV_ASSIGN expr SEMICOLON
   22                | IDENTIFIER MOD_ASSIGN expr SEMICOLON

   23 else_stmt: ELSE statements

   24 if_stmt: IF LP expr RP statements

   25 if_else_stmt: if_stmt else_stmt

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements
   27         | FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements
   28         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP expr SEMICOLON SEMICOLON expr RP statements
   30         | FOR LP expr SEMICOLON expr SEMICOLON RP statements
   31         | FOR LP SEMICOLON SEMICOLON expr RP statements
   32         | FOR LP SEMICOLON expr SEMICOLON RP statements
   33         | FOR LP expr SEMICOLON SEMICOLON RP statements
   34         | FOR LP SEMICOLON SEMICOLON RP statements

   35 while_stmt: WHILE LP expr RP statements

   36 declaration: T IDENTIFIER LOP_ASSIGN expr
   37            | T IDLIST

   38 IDLIST: IDENTIFIER COMMA IDLIST
   39       | IDENTIFIER

   40 IDLIST_DECL: declaration
   41            | declaration COMMA IDLIST_DECL

   42 function_return: RETURN SEMICOLON
   43                | RETURN expr SEMICOLON

   44 function_declaration: T IDENTIFIER LP IDLIST_DECL RP SEMICOLON
   45                     | T IDENTIFIER LP RP SEMICOLON

   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements RB
   47                    | T IDENTIFIER LP RP LB statements RB

   48 function_call: IDENTIFIER LP IDLIST RP SEMICOLON
   49              | IDENTIFIER LP RP SEMICOLON

   50 expr: expr PLUS expr
   51     | expr MINUS expr
   52     | expr TIMES expr
   53     | expr DIVIDE expr
   54     | expr MOD expr
   55     | expr MMINUS
   56     | expr PPLUS
   57     | expr AND expr
   58     | expr OR expr
   59     | NOT expr
   60     | expr XOR expr
   61     | expr EQU expr
   62     | expr GTR expr
   63     | expr LSS expr
   64     | expr GEQ expr
   65     | expr LEQ expr
   66     | expr NEQ expr
   67     | expr LOGICAL_AND expr
   68     | expr LOGICAL_OR expr
   69     | LOGICAL_NOT expr
   70     | MINUS expr
   71     | LP expr RP
   72     | IDENTIFIER
   73     | INTEGER
   74     | NUMBER
   75     | CHAR
   76     | STRING

   77 T: T_INT
   78  | T_CHAR
   79  | T_BOOL
   80  | T_DOUBLE
   81  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 78
T_INT (259) 77
T_STRING (260)
T_BOOL (261) 79
T_DOUBLE (262) 80
T_VOID (263) 81
LOP_ASSIGN (264) 17 36
PLUS_ASSIGN (265) 18
MIN_ASSIGN (266) 19
TIM_ASSIGN (267) 20
DIV_ASSIGN (268) 21
MOD_ASSIGN (269) 22
SEMICOLON (270) 14 16 17 18 19 20 21 22 26 27 28 29 30 31 32 33 34
    42 43 44 45 48 49
LB (271) 4 46 47
RB (272) 4 46 47
COMMA (273) 38 41
LP (274) 5 24 26 27 28 29 30 31 32 33 34 35 44 45 46 47 48 49 71
RP (275) 5 24 26 27 28 29 30 31 32 33 34 35 44 45 46 47 48 49 71
IDENTIFIER (276) 17 18 19 20 21 22 36 38 39 44 45 46 47 48 49 72
INTEGER (277) 73
CHAR (278) 75
BOOL (279)
STRING (280) 76
NUMBER (281) 74
PLUS (282) 50
MINUS (283) 51 70
TIMES (284) 52
DIVIDE (285) 53
MOD (286) 54
PPLUS (287) 56
MMINUS (288) 55
AND (289) 57
OR (290) 58
NOT (291) 59
EQU (292) 61
GTR (293) 62
LSS (294) 63
GEQ (295) 64
LEQ (296) 65
NEQ (297) 66
LOGICAL_AND (298) 67
LOGICAL_OR (299) 68
LOGICAL_NOT (300) 69
UMINUS (301)
FOR (302) 26 27 28 29 30 31 32 33 34
INPUT (303)
OUTPUT (304)
DO (305)
MAIN (306) 5
IF (307) 24
ELSE (308) 23
WHILE (309) 35
RETURN (310) 42 43
EOL (311)
LOP_EQ (312)
XOR (313) 60
SHIFT_LEFT (314)
SHIFT_RIGHT (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3 4, on right: 1 3 4 5 23 24 26 27 28 29 30 31 32 33
    34 35 46 47
statement (64)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 3
assignment_stmt (65)
    on left: 17 18 19 20 21 22, on right: 15
else_stmt (66)
    on left: 23, on right: 25
if_stmt (67)
    on left: 24, on right: 7 25
if_else_stmt (68)
    on left: 25, on right: 8
for_stmt (69)
    on left: 26 27 28 29 30 31 32 33 34, on right: 9
while_stmt (70)
    on left: 35, on right: 6
declaration (71)
    on left: 36 37, on right: 14 27 40 41
IDLIST (72)
    on left: 38 39, on right: 37 38 48
IDLIST_DECL (73)
    on left: 40 41, on right: 41 44 46
function_return (74)
    on left: 42 43, on right: 13
function_declaration (75)
    on left: 44 45, on right: 10
function_definition (76)
    on left: 46 47, on right: 11
function_call (77)
    on left: 48 49, on right: 12
expr (78)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68 69 70 71 72 73 74 75 76, on right: 17 18 19 20 21 22 24 26 27
    28 29 30 31 32 33 35 36 43 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 65 66 67 68 69 70 71
T (79)
    on left: 77 78 79 80 81, on right: 5 36 37 44 45 46 47


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    program               go to state 13
    statements            go to state 14
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 1

   78 T: T_CHAR .

    $default  reduce using rule 78 (T)


State 2

   77 T: T_INT .

    $default  reduce using rule 77 (T)


State 3

   79 T: T_BOOL .

    $default  reduce using rule 79 (T)


State 4

   80 T: T_DOUBLE .

    $default  reduce using rule 80 (T)


State 5

   81 T: T_VOID .

    $default  reduce using rule 81 (T)


State 6

   16 statement: SEMICOLON .

    $default  reduce using rule 16 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 27
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 8

   17 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   18                | IDENTIFIER . PLUS_ASSIGN expr SEMICOLON
   19                | IDENTIFIER . MIN_ASSIGN expr SEMICOLON
   20                | IDENTIFIER . TIM_ASSIGN expr SEMICOLON
   21                | IDENTIFIER . DIV_ASSIGN expr SEMICOLON
   22                | IDENTIFIER . MOD_ASSIGN expr SEMICOLON
   48 function_call: IDENTIFIER . LP IDLIST RP SEMICOLON
   49              | IDENTIFIER . LP RP SEMICOLON

    LOP_ASSIGN   shift, and go to state 28
    PLUS_ASSIGN  shift, and go to state 29
    MIN_ASSIGN   shift, and go to state 30
    TIM_ASSIGN   shift, and go to state 31
    DIV_ASSIGN   shift, and go to state 32
    MOD_ASSIGN   shift, and go to state 33
    LP           shift, and go to state 34


State 9

   26 for_stmt: FOR . LP expr SEMICOLON expr SEMICOLON expr RP statements
   27         | FOR . LP declaration SEMICOLON expr SEMICOLON expr RP statements
   28         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR . LP expr SEMICOLON SEMICOLON expr RP statements
   30         | FOR . LP expr SEMICOLON expr SEMICOLON RP statements
   31         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   32         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   33         | FOR . LP expr SEMICOLON SEMICOLON RP statements
   34         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  shift, and go to state 35


State 10

   24 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 36


State 11

   35 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 37


State 12

   42 function_return: RETURN . SEMICOLON
   43                | RETURN . expr SEMICOLON

    SEMICOLON    shift, and go to state 38
    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 48


State 13

    0 $accept: program . $end

    $end  shift, and go to state 49


State 14

    1 program: statements .

    $default  reduce using rule 1 (program)


State 15

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    RETURN      [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements            go to state 50
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 16

   15 statement: assignment_stmt .

    $default  reduce using rule 15 (statement)


State 17

    7 statement: if_stmt .
   25 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 51

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 52


State 18

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 19

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 20

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 21

   14 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 22

   13 statement: function_return .

    $default  reduce using rule 13 (statement)


State 23

   10 statement: function_declaration .

    $default  reduce using rule 10 (statement)


State 24

   11 statement: function_definition .

    $default  reduce using rule 11 (statement)


State 25

   12 statement: function_call .

    $default  reduce using rule 12 (statement)


State 26

    5 statement: T . MAIN LP RP statements
   36 declaration: T . IDENTIFIER LOP_ASSIGN expr
   37            | T . IDLIST
   44 function_declaration: T . IDENTIFIER LP IDLIST_DECL RP SEMICOLON
   45                     | T . IDENTIFIER LP RP SEMICOLON
   46 function_definition: T . IDENTIFIER LP IDLIST_DECL RP LB statements RB
   47                    | T . IDENTIFIER LP RP LB statements RB

    IDENTIFIER  shift, and go to state 54
    MAIN        shift, and go to state 55

    IDLIST  go to state 56


State 27

    4 statements: LB statements . RB

    RB  shift, and go to state 57


State 28

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 58


State 29

   18 assignment_stmt: IDENTIFIER PLUS_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 59


State 30

   19 assignment_stmt: IDENTIFIER MIN_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 60


State 31

   20 assignment_stmt: IDENTIFIER TIM_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 61


State 32

   21 assignment_stmt: IDENTIFIER DIV_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 62


State 33

   22 assignment_stmt: IDENTIFIER MOD_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 63


State 34

   48 function_call: IDENTIFIER LP . IDLIST RP SEMICOLON
   49              | IDENTIFIER LP . RP SEMICOLON

    RP          shift, and go to state 64
    IDENTIFIER  shift, and go to state 65

    IDLIST  go to state 66


State 35

   26 for_stmt: FOR LP . expr SEMICOLON expr SEMICOLON expr RP statements
   27         | FOR LP . declaration SEMICOLON expr SEMICOLON expr RP statements
   28         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP . expr SEMICOLON SEMICOLON expr RP statements
   30         | FOR LP . expr SEMICOLON expr SEMICOLON RP statements
   31         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   32         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   33         | FOR LP . expr SEMICOLON SEMICOLON RP statements
   34         | FOR LP . SEMICOLON SEMICOLON RP statements

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_BOOL       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_VOID       shift, and go to state 5
    SEMICOLON    shift, and go to state 67
    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    declaration  go to state 68
    expr         go to state 69
    T            go to state 70


State 36

   24 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 71


State 37

   35 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 72


State 38

   42 function_return: RETURN SEMICOLON .

    $default  reduce using rule 42 (function_return)


State 39

   71 expr: LP . expr RP

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 73


State 40

   72 expr: IDENTIFIER .

    $default  reduce using rule 72 (expr)


State 41

   73 expr: INTEGER .

    $default  reduce using rule 73 (expr)


State 42

   75 expr: CHAR .

    $default  reduce using rule 75 (expr)


State 43

   76 expr: STRING .

    $default  reduce using rule 76 (expr)


State 44

   74 expr: NUMBER .

    $default  reduce using rule 74 (expr)


State 45

   70 expr: MINUS . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 74


State 46

   59 expr: NOT . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 75


State 47

   69 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 76


State 48

   43 function_return: RETURN expr . SEMICOLON
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 77
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 49

    0 $accept: program $end .

    $default  accept


State 50

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 51

   23 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 96
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 52

   25 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 25 (if_else_stmt)


State 53

   14 statement: declaration SEMICOLON .

    $default  reduce using rule 14 (statement)


State 54

   36 declaration: T IDENTIFIER . LOP_ASSIGN expr
   38 IDLIST: IDENTIFIER . COMMA IDLIST
   39       | IDENTIFIER .
   44 function_declaration: T IDENTIFIER . LP IDLIST_DECL RP SEMICOLON
   45                     | T IDENTIFIER . LP RP SEMICOLON
   46 function_definition: T IDENTIFIER . LP IDLIST_DECL RP LB statements RB
   47                    | T IDENTIFIER . LP RP LB statements RB

    LOP_ASSIGN  shift, and go to state 97
    COMMA       shift, and go to state 98
    LP          shift, and go to state 99

    $default  reduce using rule 39 (IDLIST)


State 55

    5 statement: T MAIN . LP RP statements

    LP  shift, and go to state 100


State 56

   37 declaration: T IDLIST .

    $default  reduce using rule 37 (declaration)


State 57

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 58

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 101
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 59

   18 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr . SEMICOLON
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 102
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 60

   19 assignment_stmt: IDENTIFIER MIN_ASSIGN expr . SEMICOLON
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 103
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 61

   20 assignment_stmt: IDENTIFIER TIM_ASSIGN expr . SEMICOLON
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 104
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 62

   21 assignment_stmt: IDENTIFIER DIV_ASSIGN expr . SEMICOLON
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 105
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 63

   22 assignment_stmt: IDENTIFIER MOD_ASSIGN expr . SEMICOLON
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 106
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 64

   49 function_call: IDENTIFIER LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 65

   38 IDLIST: IDENTIFIER . COMMA IDLIST
   39       | IDENTIFIER .

    COMMA  shift, and go to state 98

    COMMA     [reduce using rule 39 (IDLIST)]
    $default  reduce using rule 39 (IDLIST)


State 66

   48 function_call: IDENTIFIER LP IDLIST . RP SEMICOLON

    RP  shift, and go to state 108


State 67

   28 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   31         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   32         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   34         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 109
    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 110


State 68

   27 for_stmt: FOR LP declaration . SEMICOLON expr SEMICOLON expr RP statements

    SEMICOLON  shift, and go to state 111


State 69

   26 for_stmt: FOR LP expr . SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP expr . SEMICOLON SEMICOLON expr RP statements
   30         | FOR LP expr . SEMICOLON expr SEMICOLON RP statements
   33         | FOR LP expr . SEMICOLON SEMICOLON RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 112
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 70

   36 declaration: T . IDENTIFIER LOP_ASSIGN expr
   37            | T . IDLIST

    IDENTIFIER  shift, and go to state 113

    IDLIST  go to state 56


State 71

   24 if_stmt: IF LP expr . RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    RP           shift, and go to state 114
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 72

   35 while_stmt: WHILE LP expr . RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    RP           shift, and go to state 115
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 73

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr
   71     | LP expr . RP

    RP           shift, and go to state 116
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 74

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr
   70     | MINUS expr .

    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 70 (expr)


State 75

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   59     | NOT expr .
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 59 (expr)


State 76

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr
   69     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 69 (expr)


State 77

   43 function_return: RETURN expr SEMICOLON .

    $default  reduce using rule 43 (function_return)


State 78

   50 expr: expr PLUS . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 117


State 79

   51 expr: expr MINUS . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 118


State 80

   52 expr: expr TIMES . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 119


State 81

   53 expr: expr DIVIDE . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 120


State 82

   54 expr: expr MOD . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 121


State 83

   56 expr: expr PPLUS .

    $default  reduce using rule 56 (expr)


State 84

   55 expr: expr MMINUS .

    $default  reduce using rule 55 (expr)


State 85

   57 expr: expr AND . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 122


State 86

   58 expr: expr OR . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 123


State 87

   61 expr: expr EQU . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 124


State 88

   62 expr: expr GTR . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 125


State 89

   63 expr: expr LSS . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 126


State 90

   64 expr: expr GEQ . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 127


State 91

   65 expr: expr LEQ . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 128


State 92

   66 expr: expr NEQ . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 129


State 93

   67 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 130


State 94

   68 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 131


State 95

   60 expr: expr XOR . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 132


State 96

   23 else_stmt: ELSE statements .

    $default  reduce using rule 23 (else_stmt)


State 97

   36 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 133


State 98

   38 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 65

    IDLIST  go to state 134


State 99

   44 function_declaration: T IDENTIFIER LP . IDLIST_DECL RP SEMICOLON
   45                     | T IDENTIFIER LP . RP SEMICOLON
   46 function_definition: T IDENTIFIER LP . IDLIST_DECL RP LB statements RB
   47                    | T IDENTIFIER LP . RP LB statements RB

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5
    RP        shift, and go to state 135

    declaration  go to state 136
    IDLIST_DECL  go to state 137
    T            go to state 70


State 100

    5 statement: T MAIN LP . RP statements

    RP  shift, and go to state 138


State 101

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 17 (assignment_stmt)


State 102

   18 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr SEMICOLON .

    $default  reduce using rule 18 (assignment_stmt)


State 103

   19 assignment_stmt: IDENTIFIER MIN_ASSIGN expr SEMICOLON .

    $default  reduce using rule 19 (assignment_stmt)


State 104

   20 assignment_stmt: IDENTIFIER TIM_ASSIGN expr SEMICOLON .

    $default  reduce using rule 20 (assignment_stmt)


State 105

   21 assignment_stmt: IDENTIFIER DIV_ASSIGN expr SEMICOLON .

    $default  reduce using rule 21 (assignment_stmt)


State 106

   22 assignment_stmt: IDENTIFIER MOD_ASSIGN expr SEMICOLON .

    $default  reduce using rule 22 (assignment_stmt)


State 107

   49 function_call: IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 49 (function_call)


State 108

   48 function_call: IDENTIFIER LP IDLIST RP . SEMICOLON

    SEMICOLON  shift, and go to state 139


State 109

   31 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   34         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 39
    RP           shift, and go to state 140
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 141


State 110

   28 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   32         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 142
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 111

   27 for_stmt: FOR LP declaration SEMICOLON . expr SEMICOLON expr RP statements

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 143


State 112

   26 for_stmt: FOR LP expr SEMICOLON . expr SEMICOLON expr RP statements
   29         | FOR LP expr SEMICOLON . SEMICOLON expr RP statements
   30         | FOR LP expr SEMICOLON . expr SEMICOLON RP statements
   33         | FOR LP expr SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 144
    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 145


State 113

   36 declaration: T IDENTIFIER . LOP_ASSIGN expr
   38 IDLIST: IDENTIFIER . COMMA IDLIST
   39       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 97
    COMMA       shift, and go to state 98

    COMMA     [reduce using rule 39 (IDLIST)]
    $default  reduce using rule 39 (IDLIST)


State 114

   24 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 146
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 115

   35 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 147
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 116

   71 expr: LP expr RP .

    $default  reduce using rule 71 (expr)


State 117

   50 expr: expr . PLUS expr
   50     | expr PLUS expr .
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 50 (expr)


State 118

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   51     | expr MINUS expr .
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 51 (expr)


State 119

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   52     | expr TIMES expr .
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 52 (expr)


State 120

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   53     | expr DIVIDE expr .
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 53 (expr)


State 121

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   54     | expr MOD expr .
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 54 (expr)


State 122

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   57     | expr AND expr .
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84
    EQU     shift, and go to state 87
    GTR     shift, and go to state 88
    LSS     shift, and go to state 89
    GEQ     shift, and go to state 90
    LEQ     shift, and go to state 91
    NEQ     shift, and go to state 92

    $default  reduce using rule 57 (expr)


State 123

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   58     | expr OR expr .
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84
    AND     shift, and go to state 85
    EQU     shift, and go to state 87
    GTR     shift, and go to state 88
    LSS     shift, and go to state 89
    GEQ     shift, and go to state 90
    LEQ     shift, and go to state 91
    NEQ     shift, and go to state 92
    XOR     shift, and go to state 95

    $default  reduce using rule 58 (expr)


State 124

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   61     | expr EQU expr .
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84
    GTR     shift, and go to state 88
    LSS     shift, and go to state 89
    GEQ     shift, and go to state 90
    LEQ     shift, and go to state 91

    $default  reduce using rule 61 (expr)


State 125

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   62     | expr GTR expr .
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 62 (expr)


State 126

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   63     | expr LSS expr .
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 63 (expr)


State 127

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   64     | expr GEQ expr .
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 64 (expr)


State 128

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   65     | expr LEQ expr .
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84

    $default  reduce using rule 65 (expr)


State 129

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   66     | expr NEQ expr .
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84
    GTR     shift, and go to state 88
    LSS     shift, and go to state 89
    GEQ     shift, and go to state 90
    LEQ     shift, and go to state 91

    $default  reduce using rule 66 (expr)


State 130

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   67     | expr LOGICAL_AND expr .
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84
    AND     shift, and go to state 85
    OR      shift, and go to state 86
    EQU     shift, and go to state 87
    GTR     shift, and go to state 88
    LSS     shift, and go to state 89
    GEQ     shift, and go to state 90
    LEQ     shift, and go to state 91
    NEQ     shift, and go to state 92
    XOR     shift, and go to state 95

    $default  reduce using rule 67 (expr)


State 131

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr
   68     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    XOR          shift, and go to state 95

    $default  reduce using rule 68 (expr)


State 132

   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   60     | expr XOR expr .
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 78
    MINUS   shift, and go to state 79
    TIMES   shift, and go to state 80
    DIVIDE  shift, and go to state 81
    MOD     shift, and go to state 82
    PPLUS   shift, and go to state 83
    MMINUS  shift, and go to state 84
    AND     shift, and go to state 85
    EQU     shift, and go to state 87
    GTR     shift, and go to state 88
    LSS     shift, and go to state 89
    GEQ     shift, and go to state 90
    LEQ     shift, and go to state 91
    NEQ     shift, and go to state 92

    $default  reduce using rule 60 (expr)


State 133

   36 declaration: T IDENTIFIER LOP_ASSIGN expr .
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95

    $default  reduce using rule 36 (declaration)


State 134

   38 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 38 (IDLIST)


State 135

   45 function_declaration: T IDENTIFIER LP RP . SEMICOLON
   47 function_definition: T IDENTIFIER LP RP . LB statements RB

    SEMICOLON  shift, and go to state 148
    LB         shift, and go to state 149


State 136

   40 IDLIST_DECL: declaration .
   41            | declaration . COMMA IDLIST_DECL

    COMMA  shift, and go to state 150

    $default  reduce using rule 40 (IDLIST_DECL)


State 137

   44 function_declaration: T IDENTIFIER LP IDLIST_DECL . RP SEMICOLON
   46 function_definition: T IDENTIFIER LP IDLIST_DECL . RP LB statements RB

    RP  shift, and go to state 151


State 138

    5 statement: T MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 152
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 139

   48 function_call: IDENTIFIER LP IDLIST RP SEMICOLON .

    $default  reduce using rule 48 (function_call)


State 140

   34 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 153
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 141

   31 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    RP           shift, and go to state 154
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 142

   28 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   32         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 39
    RP           shift, and go to state 155
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 156


State 143

   27 for_stmt: FOR LP declaration SEMICOLON expr . SEMICOLON expr RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 157
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 144

   29 for_stmt: FOR LP expr SEMICOLON SEMICOLON . expr RP statements
   33         | FOR LP expr SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 39
    RP           shift, and go to state 158
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 159


State 145

   26 for_stmt: FOR LP expr SEMICOLON expr . SEMICOLON expr RP statements
   30         | FOR LP expr SEMICOLON expr . SEMICOLON RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 160
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 146

   24 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 24 (if_stmt)


State 147

   35 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 35 (while_stmt)


State 148

   45 function_declaration: T IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 45 (function_declaration)


State 149

   47 function_definition: T IDENTIFIER LP RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 161
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 150

   41 IDLIST_DECL: declaration COMMA . IDLIST_DECL

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    declaration  go to state 136
    IDLIST_DECL  go to state 162
    T            go to state 70


State 151

   44 function_declaration: T IDENTIFIER LP IDLIST_DECL RP . SEMICOLON
   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP . LB statements RB

    SEMICOLON  shift, and go to state 163
    LB         shift, and go to state 164


State 152

    5 statement: T MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 153

   34 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 34 (for_stmt)


State 154

   31 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 165
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 155

   32 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 166
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 156

   28 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    RP           shift, and go to state 167
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 157

   27 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON . expr RP statements

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 168


State 158

   33 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 169
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 159

   29 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr . RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    RP           shift, and go to state 170
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 160

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON . expr RP statements
   30         | FOR LP expr SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 39
    RP           shift, and go to state 171
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 172


State 161

   47 function_definition: T IDENTIFIER LP RP LB statements . RB

    RB  shift, and go to state 173


State 162

   41 IDLIST_DECL: declaration COMMA IDLIST_DECL .

    $default  reduce using rule 41 (IDLIST_DECL)


State 163

   44 function_declaration: T IDENTIFIER LP IDLIST_DECL RP SEMICOLON .

    $default  reduce using rule 44 (function_declaration)


State 164

   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 174
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 165

   31 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 31 (for_stmt)


State 166

   32 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 32 (for_stmt)


State 167

   28 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 175
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 168

   27 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr . RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    RP           shift, and go to state 176
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 169

   33 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 33 (for_stmt)


State 170

   29 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 177
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 171

   30 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 178
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 172

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr . RP statements
   50 expr: expr . PLUS expr
   51     | expr . MINUS expr
   52     | expr . TIMES expr
   53     | expr . DIVIDE expr
   54     | expr . MOD expr
   55     | expr . MMINUS
   56     | expr . PPLUS
   57     | expr . AND expr
   58     | expr . OR expr
   60     | expr . XOR expr
   61     | expr . EQU expr
   62     | expr . GTR expr
   63     | expr . LSS expr
   64     | expr . GEQ expr
   65     | expr . LEQ expr
   66     | expr . NEQ expr
   67     | expr . LOGICAL_AND expr
   68     | expr . LOGICAL_OR expr

    RP           shift, and go to state 179
    PLUS         shift, and go to state 78
    MINUS        shift, and go to state 79
    TIMES        shift, and go to state 80
    DIVIDE       shift, and go to state 81
    MOD          shift, and go to state 82
    PPLUS        shift, and go to state 83
    MMINUS       shift, and go to state 84
    AND          shift, and go to state 85
    OR           shift, and go to state 86
    EQU          shift, and go to state 87
    GTR          shift, and go to state 88
    LSS          shift, and go to state 89
    GEQ          shift, and go to state 90
    LEQ          shift, and go to state 91
    NEQ          shift, and go to state 92
    LOGICAL_AND  shift, and go to state 93
    LOGICAL_OR   shift, and go to state 94
    XOR          shift, and go to state 95


State 173

   47 function_definition: T IDENTIFIER LP RP LB statements RB .

    $default  reduce using rule 47 (function_definition)


State 174

   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements . RB

    RB  shift, and go to state 180


State 175

   28 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 28 (for_stmt)


State 176

   27 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 181
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 177

   29 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 29 (for_stmt)


State 178

   30 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 30 (for_stmt)


State 179

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 182
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 180

   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements RB .

    $default  reduce using rule 46 (function_definition)


State 181

   27 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 27 (for_stmt)


State 182

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 26 (for_stmt)
