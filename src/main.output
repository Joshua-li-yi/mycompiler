Terminals unused in grammar

   T_STRING
   BOOL
   FOR
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ


State 14 conflicts: 11 shift/reduce
State 16 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce
State 89 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 21 shift/reduce
State 94 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | declaration SEMICOLON
   10          | assignment_stmt
   11          | SEMICOLON

   12 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON

   13 else_stmt: ELSE statements

   14 if_stmt: IF LP expr RP statements

   15 if_else_stmt: if_stmt else_stmt

   16 while_stmt: WHILE LP expr RP statements

   17 declaration: T IDENTIFIER LOP_ASSIGN expr
   18            | T IDLIST

   19 IDLIST: IDENTIFIER COMMA IDLIST
   20       | IDENTIFIER

   21 expr: expr PLUS expr
   22     | expr MINUS expr
   23     | expr TIMES expr
   24     | expr OVER expr
   25     | expr MOD expr
   26     | expr MMINUS
   27     | expr PPLUS
   28     | expr AND expr
   29     | expr OR expr
   30     | NOT expr
   31     | expr XOR expr
   32     | expr SHIFT_LEFT expr
   33     | expr SHIFT_RIGHT expr
   34     | expr ASSIGN expr
   35     | expr EQU expr
   36     | expr GTR expr
   37     | expr LSS expr
   38     | expr GEQ expr
   39     | expr LEQ expr
   40     | expr NEQ expr
   41     | expr LOGICAL_AND expr
   42     | expr LOGICAL_OR expr
   43     | LOGICAL_NOT expr
   44     | MINUS expr
   45     | LP expr RP
   46     | IDENTIFIER
   47     | INTEGER
   48     | NUMBER
   49     | CHAR
   50     | STRING

   51 T: T_INT
   52  | T_CHAR
   53  | T_BOOL
   54  | T_DOUBLE
   55  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 52
T_INT (259) 51
T_STRING (260)
T_BOOL (261) 53
T_DOUBLE (262) 54
T_VOID (263) 55
LOP_ASSIGN (264) 12 17
SEMICOLON (265) 9 11 12
LB (266) 4
RB (267) 4
COMMA (268) 19
LP (269) 5 14 16 45
RP (270) 5 14 16 45
IDENTIFIER (271) 12 17 19 20 46
INTEGER (272) 47
CHAR (273) 49
BOOL (274)
STRING (275) 50
NUMBER (276) 48
PLUS (277) 21
MINUS (278) 22 44
TIMES (279) 23
OVER (280) 24
MOD (281) 25
PPLUS (282) 27
MMINUS (283) 26
AND (284) 28
OR (285) 29
XOR (286) 31
NOT (287) 30
SHIFT_LEFT (288) 32
SHIFT_RIGHT (289) 33
ASSIGN (290) 34
EQU (291) 35
GTR (292) 36
LSS (293) 37
GEQ (294) 38
LEQ (295) 39
NEQ (296) 40
LOGICAL_AND (297) 41
LOGICAL_OR (298) 42
LOGICAL_NOT (299) 43
UMINUS (300)
FOR (301)
INPUT (302)
OUTPUT (303)
DO (304)
MAIN (305) 5
IF (306) 14
ELSE (307) 13
WHILE (308) 16
EOL (309)
LOP_EQ (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3 4, on right: 1 3 4 5 13 14 16
statement (59)
    on left: 5 6 7 8 9 10 11, on right: 2 3
assignment_stmt (60)
    on left: 12, on right: 10
else_stmt (61)
    on left: 13, on right: 15
if_stmt (62)
    on left: 14, on right: 7 15
if_else_stmt (63)
    on left: 15, on right: 8
while_stmt (64)
    on left: 16, on right: 6
declaration (65)
    on left: 17 18, on right: 9
IDLIST (66)
    on left: 19 20, on right: 18 19
expr (67)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
    39 40 41 42 43 44 45 46 47 48 49 50, on right: 12 14 16 17 21 22
    23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
    44 45
T (68)
    on left: 51 52 53 54 55, on right: 17 18


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    program          go to state 12
    statements       go to state 13
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 1

   52 T: T_CHAR .

    $default  reduce using rule 52 (T)


State 2

   51 T: T_INT .

    $default  reduce using rule 51 (T)


State 3

   53 T: T_BOOL .

    $default  reduce using rule 53 (T)


State 4

   54 T: T_DOUBLE .

    $default  reduce using rule 54 (T)


State 5

   55 T: T_VOID .

    $default  reduce using rule 55 (T)


State 6

   11 statement: SEMICOLON .

    $default  reduce using rule 11 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 21
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 8

   12 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON

    LOP_ASSIGN  shift, and go to state 22


State 9

    5 statement: MAIN . LP RP statements

    LP  shift, and go to state 23


State 10

   14 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 24


State 11

   16 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 25


State 12

    0 $accept: program . $end

    $end  shift, and go to state 26


State 13

    1 program: statements .

    $default  reduce using rule 1 (program)


State 14

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    MAIN        [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements       go to state 27
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 15

   10 statement: assignment_stmt .

    $default  reduce using rule 10 (statement)


State 16

    7 statement: if_stmt .
   15 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 28

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 29


State 17

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 18

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 19

    9 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 30


State 20

   17 declaration: T . IDENTIFIER LOP_ASSIGN expr
   18            | T . IDLIST

    IDENTIFIER  shift, and go to state 31

    IDLIST  go to state 32


State 21

    4 statements: LB statements . RB

    RB  shift, and go to state 33


State 22

   12 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 43


State 23

    5 statement: MAIN LP . RP statements

    RP  shift, and go to state 44


State 24

   14 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 45


State 25

   16 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 46


State 26

    0 $accept: program $end .

    $default  accept


State 27

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 28

   13 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 47
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 29

   15 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 15 (if_else_stmt)


State 30

    9 statement: declaration SEMICOLON .

    $default  reduce using rule 9 (statement)


State 31

   17 declaration: T IDENTIFIER . LOP_ASSIGN expr
   19 IDLIST: IDENTIFIER . COMMA IDLIST
   20       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 48
    COMMA       shift, and go to state 49

    $default  reduce using rule 20 (IDLIST)


State 32

   18 declaration: T IDLIST .

    $default  reduce using rule 18 (declaration)


State 33

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 34

   45 expr: LP . expr RP

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 50


State 35

   46 expr: IDENTIFIER .

    $default  reduce using rule 46 (expr)


State 36

   47 expr: INTEGER .

    $default  reduce using rule 47 (expr)


State 37

   49 expr: CHAR .

    $default  reduce using rule 49 (expr)


State 38

   50 expr: STRING .

    $default  reduce using rule 50 (expr)


State 39

   48 expr: NUMBER .

    $default  reduce using rule 48 (expr)


State 40

   44 expr: MINUS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 51


State 41

   30 expr: NOT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 52


State 42

   43 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 53


State 43

   12 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 54
    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    OR           shift, and go to state 63
    XOR          shift, and go to state 64
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    LOGICAL_OR   shift, and go to state 75


State 44

    5 statement: MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 76
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 45

   14 if_stmt: IF LP expr . RP statements
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    RP           shift, and go to state 77
    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    OR           shift, and go to state 63
    XOR          shift, and go to state 64
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    LOGICAL_OR   shift, and go to state 75


State 46

   16 while_stmt: WHILE LP expr . RP statements
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    RP           shift, and go to state 78
    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    OR           shift, and go to state 63
    XOR          shift, and go to state 64
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    LOGICAL_OR   shift, and go to state 75


State 47

   13 else_stmt: ELSE statements .

    $default  reduce using rule 13 (else_stmt)


State 48

   17 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 79


State 49

   19 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 80

    IDLIST  go to state 81


State 50

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr
   45     | LP expr . RP

    RP           shift, and go to state 82
    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    OR           shift, and go to state 63
    XOR          shift, and go to state 64
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    LOGICAL_OR   shift, and go to state 75


State 51

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr
   44     | MINUS expr .

    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 44 (expr)]
    $default  reduce using rule 44 (expr)


State 52

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   30     | NOT expr .
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 53

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr
   43     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 43 (expr)]
    $default  reduce using rule 43 (expr)


State 54

   12 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 12 (assignment_stmt)


State 55

   21 expr: expr PLUS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 83


State 56

   22 expr: expr MINUS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 84


State 57

   23 expr: expr TIMES . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 85


State 58

   24 expr: expr OVER . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 86


State 59

   25 expr: expr MOD . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 87


State 60

   27 expr: expr PPLUS .

    $default  reduce using rule 27 (expr)


State 61

   26 expr: expr MMINUS .

    $default  reduce using rule 26 (expr)


State 62

   28 expr: expr AND . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 88


State 63

   29 expr: expr OR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 89


State 64

   31 expr: expr XOR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 90


State 65

   32 expr: expr SHIFT_LEFT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 91


State 66

   33 expr: expr SHIFT_RIGHT . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 92


State 67

   34 expr: expr ASSIGN . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 93


State 68

   35 expr: expr EQU . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 94


State 69

   36 expr: expr GTR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 95


State 70

   37 expr: expr LSS . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 96


State 71

   38 expr: expr GEQ . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 97


State 72

   39 expr: expr LEQ . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 98


State 73

   40 expr: expr NEQ . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 99


State 74

   41 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 100


State 75

   42 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 34
    IDENTIFIER   shift, and go to state 35
    INTEGER      shift, and go to state 36
    CHAR         shift, and go to state 37
    STRING       shift, and go to state 38
    NUMBER       shift, and go to state 39
    MINUS        shift, and go to state 40
    NOT          shift, and go to state 41
    LOGICAL_NOT  shift, and go to state 42

    expr  go to state 101


State 76

    5 statement: MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 77

   14 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 102
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 78

   16 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    MAIN        shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11

    statements       go to state 103
    statement        go to state 14
    assignment_stmt  go to state 15
    if_stmt          go to state 16
    if_else_stmt     go to state 17
    while_stmt       go to state 18
    declaration      go to state 19
    T                go to state 20


State 79

   17 declaration: T IDENTIFIER LOP_ASSIGN expr .
   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    OR           shift, and go to state 63
    XOR          shift, and go to state 64
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    LOGICAL_OR   shift, and go to state 75

    $default  reduce using rule 17 (declaration)


State 80

   19 IDLIST: IDENTIFIER . COMMA IDLIST
   20       | IDENTIFIER .

    COMMA  shift, and go to state 49

    $default  reduce using rule 20 (IDLIST)


State 81

   19 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 19 (IDLIST)


State 82

   45 expr: LP expr RP .

    $default  reduce using rule 45 (expr)


State 83

   21 expr: expr . PLUS expr
   21     | expr PLUS expr .
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 57
    OVER    shift, and go to state 58
    MOD     shift, and go to state 59
    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


State 84

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   22     | expr MINUS expr .
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 57
    OVER    shift, and go to state 58
    MOD     shift, and go to state 59
    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)


State 85

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   23     | expr TIMES expr .
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 23 (expr)]
    $default  reduce using rule 23 (expr)


State 86

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   24     | expr OVER expr .
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


State 87

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   25     | expr MOD expr .
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 88

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   28     | expr AND expr .
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73

    ASSIGN    [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 89

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   29     | expr OR expr .
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    XOR          shift, and go to state 64
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73

    ASSIGN    [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


State 90

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   31     | expr XOR expr .
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73

    ASSIGN    [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 91

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   32     | expr SHIFT_LEFT expr .
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    OVER    shift, and go to state 58
    MOD     shift, and go to state 59
    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 92

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   33     | expr SHIFT_RIGHT expr .
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    OVER    shift, and go to state 58
    MOD     shift, and go to state 59
    PPLUS   shift, and go to state 60
    MMINUS  shift, and go to state 61
    ASSIGN  shift, and go to state 67

    ASSIGN    [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 93

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   34     | expr ASSIGN expr .
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    OR           shift, and go to state 63
    XOR          shift, and go to state 64
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    LOGICAL_OR   shift, and go to state 75

    PLUS         [reduce using rule 34 (expr)]
    MINUS        [reduce using rule 34 (expr)]
    TIMES        [reduce using rule 34 (expr)]
    OVER         [reduce using rule 34 (expr)]
    MOD          [reduce using rule 34 (expr)]
    PPLUS        [reduce using rule 34 (expr)]
    MMINUS       [reduce using rule 34 (expr)]
    AND          [reduce using rule 34 (expr)]
    OR           [reduce using rule 34 (expr)]
    XOR          [reduce using rule 34 (expr)]
    SHIFT_LEFT   [reduce using rule 34 (expr)]
    SHIFT_RIGHT  [reduce using rule 34 (expr)]
    ASSIGN       [reduce using rule 34 (expr)]
    EQU          [reduce using rule 34 (expr)]
    GTR          [reduce using rule 34 (expr)]
    LSS          [reduce using rule 34 (expr)]
    GEQ          [reduce using rule 34 (expr)]
    LEQ          [reduce using rule 34 (expr)]
    NEQ          [reduce using rule 34 (expr)]
    LOGICAL_AND  [reduce using rule 34 (expr)]
    LOGICAL_OR   [reduce using rule 34 (expr)]
    $default     reduce using rule 34 (expr)


State 94

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   35     | expr EQU expr .
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72

    ASSIGN    [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 95

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   36     | expr GTR expr .
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67

    ASSIGN    [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 96

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   37     | expr LSS expr .
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67

    ASSIGN    [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 97

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   38     | expr GEQ expr .
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67

    ASSIGN    [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 98

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   39     | expr LEQ expr .
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67

    ASSIGN    [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 99

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   40     | expr NEQ expr .
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72

    ASSIGN    [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 100

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   41     | expr LOGICAL_AND expr .
   42     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    OR           shift, and go to state 63
    XOR          shift, and go to state 64
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73

    ASSIGN    [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


State 101

   21 expr: expr . PLUS expr
   22     | expr . MINUS expr
   23     | expr . TIMES expr
   24     | expr . OVER expr
   25     | expr . MOD expr
   26     | expr . MMINUS
   27     | expr . PPLUS
   28     | expr . AND expr
   29     | expr . OR expr
   31     | expr . XOR expr
   32     | expr . SHIFT_LEFT expr
   33     | expr . SHIFT_RIGHT expr
   34     | expr . ASSIGN expr
   35     | expr . EQU expr
   36     | expr . GTR expr
   37     | expr . LSS expr
   38     | expr . GEQ expr
   39     | expr . LEQ expr
   40     | expr . NEQ expr
   41     | expr . LOGICAL_AND expr
   42     | expr . LOGICAL_OR expr
   42     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 55
    MINUS        shift, and go to state 56
    TIMES        shift, and go to state 57
    OVER         shift, and go to state 58
    MOD          shift, and go to state 59
    PPLUS        shift, and go to state 60
    MMINUS       shift, and go to state 61
    AND          shift, and go to state 62
    OR           shift, and go to state 63
    XOR          shift, and go to state 64
    SHIFT_LEFT   shift, and go to state 65
    SHIFT_RIGHT  shift, and go to state 66
    ASSIGN       shift, and go to state 67
    EQU          shift, and go to state 68
    GTR          shift, and go to state 69
    LSS          shift, and go to state 70
    GEQ          shift, and go to state 71
    LEQ          shift, and go to state 72
    NEQ          shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74

    ASSIGN    [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


State 102

   14 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 14 (if_stmt)


State 103

   16 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 16 (while_stmt)
