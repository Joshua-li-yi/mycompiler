Terminals unused in grammar

   T_STRING
   BOOL
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ
   SHIFT_LEFT
   SHIFT_RIGHT


State 17 conflicts: 14 shift/reduce
State 21 conflicts: 1 shift/reduce
State 189 conflicts: 2 reduce/reduce
State 219 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: T MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | for_stmt
   10          | function_declaration
   11          | function_definition
   12          | function_call
   13          | function_return
   14          | scanf_function
   15          | printf_function
   16          | declaration SEMICOLON
   17          | assignment_stmt
   18          | SEMICOLON

   19 scanf_function: SCANF LP function_call_idlist RP SEMICOLON
   20               | SCANF LP RP SEMICOLON

   21 printf_function: PRINTF LP function_call_idlist RP SEMICOLON
   22                | PRINTF LP RP SEMICOLON

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER PLUS_ASSIGN expr SEMICOLON
   25                | IDENTIFIER MIN_ASSIGN expr SEMICOLON
   26                | IDENTIFIER TIM_ASSIGN expr SEMICOLON
   27                | IDENTIFIER DIV_ASSIGN expr SEMICOLON
   28                | IDENTIFIER MOD_ASSIGN expr SEMICOLON

   29 else_stmt: ELSE statements

   30 if_stmt: IF LP expr RP statements

   31 if_else_stmt: if_stmt else_stmt

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements
   33         | FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements
   34         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR LP expr SEMICOLON SEMICOLON expr RP statements
   36         | FOR LP expr SEMICOLON expr SEMICOLON RP statements
   37         | FOR LP SEMICOLON SEMICOLON expr RP statements
   38         | FOR LP SEMICOLON expr SEMICOLON RP statements
   39         | FOR LP expr SEMICOLON SEMICOLON RP statements
   40         | FOR LP SEMICOLON SEMICOLON RP statements

   41 while_stmt: WHILE LP expr RP statements

   42 declaration: T IDENTIFIER LOP_ASSIGN expr
   43            | T IDLIST

   44 IDLIST: IDENTIFIER COMMA IDLIST
   45       | IDENTIFIER

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr
   47                        | T IDENTIFIER
   48                        | T

   49 function_declaration_idlist: function_declaration_id
   50                            | function_declaration_id COMMA function_declaration_idlist

   51 function_return: RETURN SEMICOLON
   52                | RETURN expr SEMICOLON

   53 function_definition_id: T IDENTIFIER LOP_ASSIGN expr
   54                       | T IDENTIFIER

   55 function_definition_idlist: function_definition_id
   56                           | function_definition_id COMMA function_definition_idlist

   57 function_declaration: T IDENTIFIER LP function_declaration_idlist RP SEMICOLON
   58                     | T IDENTIFIER LP RP SEMICOLON

   59 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements RB
   60                    | T IDENTIFIER LP RP LB statements RB

   61 function_call_id: expr
   62                 | AND IDENTIFIER
   63                 | TIMES IDENTIFIER

   64 function_call_idlist: function_call_id
   65                     | function_call_id COMMA function_call_idlist

   66 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON
   67              | IDENTIFIER LP RP SEMICOLON

   68 expr: expr PLUS expr
   69     | expr MINUS expr
   70     | expr TIMES expr
   71     | expr DIVIDE expr
   72     | expr MOD expr
   73     | expr MMINUS
   74     | expr PPLUS
   75     | expr AND expr
   76     | expr OR expr
   77     | NOT expr
   78     | expr XOR expr
   79     | expr EQU expr
   80     | expr GTR expr
   81     | expr LSS expr
   82     | expr GEQ expr
   83     | expr LEQ expr
   84     | expr NEQ expr
   85     | expr LOGICAL_AND expr
   86     | expr LOGICAL_OR expr
   87     | LOGICAL_NOT expr
   88     | MINUS expr
   89     | LP expr RP
   90     | IDENTIFIER
   91     | INTEGER
   92     | NUMBER
   93     | CHAR
   94     | STRING

   95 T: T_INT
   96  | T_CHAR
   97  | T_BOOL
   98  | T_DOUBLE
   99  | T_VOID
  100  | T_INT TIMES
  101  | T_INT AND
  102  | T_CHAR TIMES
  103  | T_CHAR AND
  104  | T_BOOL TIMES
  105  | T_BOOL AND
  106  | T_DOUBLE TIMES
  107  | T_DOUBLE AND


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 96 102 103
T_INT (259) 95 100 101
T_STRING (260)
T_BOOL (261) 97 104 105
T_DOUBLE (262) 98 106 107
T_VOID (263) 99
LOP_ASSIGN (264) 23 42 46 53
PLUS_ASSIGN (265) 24
MIN_ASSIGN (266) 25
TIM_ASSIGN (267) 26
DIV_ASSIGN (268) 27
MOD_ASSIGN (269) 28
SEMICOLON (270) 16 18 19 20 21 22 23 24 25 26 27 28 32 33 34 35 36
    37 38 39 40 51 52 57 58 66 67
LB (271) 4 59 60
RB (272) 4 59 60
COMMA (273) 44 50 56 65
LP (274) 5 19 20 21 22 30 32 33 34 35 36 37 38 39 40 41 57 58 59 60
    66 67 89
RP (275) 5 19 20 21 22 30 32 33 34 35 36 37 38 39 40 41 57 58 59 60
    66 67 89
IDENTIFIER (276) 23 24 25 26 27 28 42 44 45 46 47 53 54 57 58 59 60
    62 63 66 67 90
INTEGER (277) 91
CHAR (278) 93
BOOL (279)
STRING (280) 94
NUMBER (281) 92
PLUS (282) 68
MINUS (283) 69 88
TIMES (284) 63 70 100 102 104 106
DIVIDE (285) 71
MOD (286) 72
PPLUS (287) 74
MMINUS (288) 73
AND (289) 62 75 101 103 105 107
OR (290) 76
NOT (291) 77
EQU (292) 79
GTR (293) 80
LSS (294) 81
GEQ (295) 82
LEQ (296) 83
NEQ (297) 84
LOGICAL_AND (298) 85
LOGICAL_OR (299) 86
LOGICAL_NOT (300) 87
UMINUS (301)
FOR (302) 32 33 34 35 36 37 38 39 40
INPUT (303)
OUTPUT (304)
DO (305)
MAIN (306) 5
IF (307) 30
ELSE (308) 29
WHILE (309) 41
RETURN (310) 51 52
SCANF (311) 19 20
PRINTF (312) 21 22
EOL (313)
LOP_EQ (314)
XOR (315) 78
SHIFT_LEFT (316)
SHIFT_RIGHT (317)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
program (64)
    on left: 1, on right: 0
statements (65)
    on left: 2 3 4, on right: 1 3 4 5 29 30 32 33 34 35 36 37 38 39
    40 41 59 60
statement (66)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2 3
scanf_function (67)
    on left: 19 20, on right: 14
printf_function (68)
    on left: 21 22, on right: 15
assignment_stmt (69)
    on left: 23 24 25 26 27 28, on right: 17
else_stmt (70)
    on left: 29, on right: 31
if_stmt (71)
    on left: 30, on right: 7 31
if_else_stmt (72)
    on left: 31, on right: 8
for_stmt (73)
    on left: 32 33 34 35 36 37 38 39 40, on right: 9
while_stmt (74)
    on left: 41, on right: 6
declaration (75)
    on left: 42 43, on right: 16 33
IDLIST (76)
    on left: 44 45, on right: 43 44
function_declaration_id (77)
    on left: 46 47 48, on right: 49 50
function_declaration_idlist (78)
    on left: 49 50, on right: 50 57
function_return (79)
    on left: 51 52, on right: 13
function_definition_id (80)
    on left: 53 54, on right: 55 56
function_definition_idlist (81)
    on left: 55 56, on right: 56 59
function_declaration (82)
    on left: 57 58, on right: 10
function_definition (83)
    on left: 59 60, on right: 11
function_call_id (84)
    on left: 61 62 63, on right: 64 65
function_call_idlist (85)
    on left: 64 65, on right: 19 21 65 66
function_call (86)
    on left: 66 67, on right: 12
expr (87)
    on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
    86 87 88 89 90 91 92 93 94, on right: 23 24 25 26 27 28 30 32 33
    34 35 36 37 38 39 41 42 46 52 53 61 68 69 70 71 72 73 74 75 76
    77 78 79 80 81 82 83 84 85 86 87 88 89
T (88)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106 107, on right:
    5 42 43 46 47 48 53 54 57 58 59 60


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    program               go to state 15
    statements            go to state 16
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 1

   96 T: T_CHAR .
  102  | T_CHAR . TIMES
  103  | T_CHAR . AND

    TIMES  shift, and go to state 31
    AND    shift, and go to state 32

    $default  reduce using rule 96 (T)


State 2

   95 T: T_INT .
  100  | T_INT . TIMES
  101  | T_INT . AND

    TIMES  shift, and go to state 33
    AND    shift, and go to state 34

    $default  reduce using rule 95 (T)


State 3

   97 T: T_BOOL .
  104  | T_BOOL . TIMES
  105  | T_BOOL . AND

    TIMES  shift, and go to state 35
    AND    shift, and go to state 36

    $default  reduce using rule 97 (T)


State 4

   98 T: T_DOUBLE .
  106  | T_DOUBLE . TIMES
  107  | T_DOUBLE . AND

    TIMES  shift, and go to state 37
    AND    shift, and go to state 38

    $default  reduce using rule 98 (T)


State 5

   99 T: T_VOID .

    $default  reduce using rule 99 (T)


State 6

   18 statement: SEMICOLON .

    $default  reduce using rule 18 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 39
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 8

   23 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER . PLUS_ASSIGN expr SEMICOLON
   25                | IDENTIFIER . MIN_ASSIGN expr SEMICOLON
   26                | IDENTIFIER . TIM_ASSIGN expr SEMICOLON
   27                | IDENTIFIER . DIV_ASSIGN expr SEMICOLON
   28                | IDENTIFIER . MOD_ASSIGN expr SEMICOLON
   66 function_call: IDENTIFIER . LP function_call_idlist RP SEMICOLON
   67              | IDENTIFIER . LP RP SEMICOLON

    LOP_ASSIGN   shift, and go to state 40
    PLUS_ASSIGN  shift, and go to state 41
    MIN_ASSIGN   shift, and go to state 42
    TIM_ASSIGN   shift, and go to state 43
    DIV_ASSIGN   shift, and go to state 44
    MOD_ASSIGN   shift, and go to state 45
    LP           shift, and go to state 46


State 9

   32 for_stmt: FOR . LP expr SEMICOLON expr SEMICOLON expr RP statements
   33         | FOR . LP declaration SEMICOLON expr SEMICOLON expr RP statements
   34         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR . LP expr SEMICOLON SEMICOLON expr RP statements
   36         | FOR . LP expr SEMICOLON expr SEMICOLON RP statements
   37         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   38         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   39         | FOR . LP expr SEMICOLON SEMICOLON RP statements
   40         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  shift, and go to state 47


State 10

   30 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 48


State 11

   41 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 49


State 12

   51 function_return: RETURN . SEMICOLON
   52                | RETURN . expr SEMICOLON

    SEMICOLON    shift, and go to state 50
    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 60


State 13

   19 scanf_function: SCANF . LP function_call_idlist RP SEMICOLON
   20               | SCANF . LP RP SEMICOLON

    LP  shift, and go to state 61


State 14

   21 printf_function: PRINTF . LP function_call_idlist RP SEMICOLON
   22                | PRINTF . LP RP SEMICOLON

    LP  shift, and go to state 62


State 15

    0 $accept: program . $end

    $end  shift, and go to state 63


State 16

    1 program: statements .

    $default  reduce using rule 1 (program)


State 17

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    RETURN      [reduce using rule 2 (statements)]
    SCANF       [reduce using rule 2 (statements)]
    PRINTF      [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements            go to state 64
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 18

   14 statement: scanf_function .

    $default  reduce using rule 14 (statement)


State 19

   15 statement: printf_function .

    $default  reduce using rule 15 (statement)


State 20

   17 statement: assignment_stmt .

    $default  reduce using rule 17 (statement)


State 21

    7 statement: if_stmt .
   31 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 65

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 66


State 22

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 23

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 24

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 25

   16 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 26

   13 statement: function_return .

    $default  reduce using rule 13 (statement)


State 27

   10 statement: function_declaration .

    $default  reduce using rule 10 (statement)


State 28

   11 statement: function_definition .

    $default  reduce using rule 11 (statement)


State 29

   12 statement: function_call .

    $default  reduce using rule 12 (statement)


State 30

    5 statement: T . MAIN LP RP statements
   42 declaration: T . IDENTIFIER LOP_ASSIGN expr
   43            | T . IDLIST
   57 function_declaration: T . IDENTIFIER LP function_declaration_idlist RP SEMICOLON
   58                     | T . IDENTIFIER LP RP SEMICOLON
   59 function_definition: T . IDENTIFIER LP function_definition_idlist RP LB statements RB
   60                    | T . IDENTIFIER LP RP LB statements RB

    IDENTIFIER  shift, and go to state 68
    MAIN        shift, and go to state 69

    IDLIST  go to state 70


State 31

  102 T: T_CHAR TIMES .

    $default  reduce using rule 102 (T)


State 32

  103 T: T_CHAR AND .

    $default  reduce using rule 103 (T)


State 33

  100 T: T_INT TIMES .

    $default  reduce using rule 100 (T)


State 34

  101 T: T_INT AND .

    $default  reduce using rule 101 (T)


State 35

  104 T: T_BOOL TIMES .

    $default  reduce using rule 104 (T)


State 36

  105 T: T_BOOL AND .

    $default  reduce using rule 105 (T)


State 37

  106 T: T_DOUBLE TIMES .

    $default  reduce using rule 106 (T)


State 38

  107 T: T_DOUBLE AND .

    $default  reduce using rule 107 (T)


State 39

    4 statements: LB statements . RB

    RB  shift, and go to state 71


State 40

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 72


State 41

   24 assignment_stmt: IDENTIFIER PLUS_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 73


State 42

   25 assignment_stmt: IDENTIFIER MIN_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 74


State 43

   26 assignment_stmt: IDENTIFIER TIM_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 75


State 44

   27 assignment_stmt: IDENTIFIER DIV_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 76


State 45

   28 assignment_stmt: IDENTIFIER MOD_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 77


State 46

   66 function_call: IDENTIFIER LP . function_call_idlist RP SEMICOLON
   67              | IDENTIFIER LP . RP SEMICOLON

    LP           shift, and go to state 51
    RP           shift, and go to state 78
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 79
    AND          shift, and go to state 80
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    function_call_id      go to state 81
    function_call_idlist  go to state 82
    expr                  go to state 83


State 47

   32 for_stmt: FOR LP . expr SEMICOLON expr SEMICOLON expr RP statements
   33         | FOR LP . declaration SEMICOLON expr SEMICOLON expr RP statements
   34         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR LP . expr SEMICOLON SEMICOLON expr RP statements
   36         | FOR LP . expr SEMICOLON expr SEMICOLON RP statements
   37         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   38         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   39         | FOR LP . expr SEMICOLON SEMICOLON RP statements
   40         | FOR LP . SEMICOLON SEMICOLON RP statements

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_BOOL       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_VOID       shift, and go to state 5
    SEMICOLON    shift, and go to state 84
    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    declaration  go to state 85
    expr         go to state 86
    T            go to state 87


State 48

   30 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 88


State 49

   41 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 89


State 50

   51 function_return: RETURN SEMICOLON .

    $default  reduce using rule 51 (function_return)


State 51

   89 expr: LP . expr RP

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 90


State 52

   90 expr: IDENTIFIER .

    $default  reduce using rule 90 (expr)


State 53

   91 expr: INTEGER .

    $default  reduce using rule 91 (expr)


State 54

   93 expr: CHAR .

    $default  reduce using rule 93 (expr)


State 55

   94 expr: STRING .

    $default  reduce using rule 94 (expr)


State 56

   92 expr: NUMBER .

    $default  reduce using rule 92 (expr)


State 57

   88 expr: MINUS . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 91


State 58

   77 expr: NOT . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 92


State 59

   87 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 93


State 60

   52 function_return: RETURN expr . SEMICOLON
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 94
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 61

   19 scanf_function: SCANF LP . function_call_idlist RP SEMICOLON
   20               | SCANF LP . RP SEMICOLON

    LP           shift, and go to state 51
    RP           shift, and go to state 113
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 79
    AND          shift, and go to state 80
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    function_call_id      go to state 81
    function_call_idlist  go to state 114
    expr                  go to state 83


State 62

   21 printf_function: PRINTF LP . function_call_idlist RP SEMICOLON
   22                | PRINTF LP . RP SEMICOLON

    LP           shift, and go to state 51
    RP           shift, and go to state 115
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 79
    AND          shift, and go to state 80
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    function_call_id      go to state 81
    function_call_idlist  go to state 116
    expr                  go to state 83


State 63

    0 $accept: program $end .

    $default  accept


State 64

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 65

   29 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 117
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 66

   31 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 31 (if_else_stmt)


State 67

   16 statement: declaration SEMICOLON .

    $default  reduce using rule 16 (statement)


State 68

   42 declaration: T IDENTIFIER . LOP_ASSIGN expr
   44 IDLIST: IDENTIFIER . COMMA IDLIST
   45       | IDENTIFIER .
   57 function_declaration: T IDENTIFIER . LP function_declaration_idlist RP SEMICOLON
   58                     | T IDENTIFIER . LP RP SEMICOLON
   59 function_definition: T IDENTIFIER . LP function_definition_idlist RP LB statements RB
   60                    | T IDENTIFIER . LP RP LB statements RB

    LOP_ASSIGN  shift, and go to state 118
    COMMA       shift, and go to state 119
    LP          shift, and go to state 120

    $default  reduce using rule 45 (IDLIST)


State 69

    5 statement: T MAIN . LP RP statements

    LP  shift, and go to state 121


State 70

   43 declaration: T IDLIST .

    $default  reduce using rule 43 (declaration)


State 71

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 72

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 122
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 73

   24 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr . SEMICOLON
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 123
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 74

   25 assignment_stmt: IDENTIFIER MIN_ASSIGN expr . SEMICOLON
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 124
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 75

   26 assignment_stmt: IDENTIFIER TIM_ASSIGN expr . SEMICOLON
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 125
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 76

   27 assignment_stmt: IDENTIFIER DIV_ASSIGN expr . SEMICOLON
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 126
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 77

   28 assignment_stmt: IDENTIFIER MOD_ASSIGN expr . SEMICOLON
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 127
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 78

   67 function_call: IDENTIFIER LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 128


State 79

   63 function_call_id: TIMES . IDENTIFIER

    IDENTIFIER  shift, and go to state 129


State 80

   62 function_call_id: AND . IDENTIFIER

    IDENTIFIER  shift, and go to state 130


State 81

   64 function_call_idlist: function_call_id .
   65                     | function_call_id . COMMA function_call_idlist

    COMMA  shift, and go to state 131

    $default  reduce using rule 64 (function_call_idlist)


State 82

   66 function_call: IDENTIFIER LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 132


State 83

   61 function_call_id: expr .
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112

    $default  reduce using rule 61 (function_call_id)


State 84

   34 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   37         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   38         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   40         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 133
    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 134


State 85

   33 for_stmt: FOR LP declaration . SEMICOLON expr SEMICOLON expr RP statements

    SEMICOLON  shift, and go to state 135


State 86

   32 for_stmt: FOR LP expr . SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR LP expr . SEMICOLON SEMICOLON expr RP statements
   36         | FOR LP expr . SEMICOLON expr SEMICOLON RP statements
   39         | FOR LP expr . SEMICOLON SEMICOLON RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 136
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 87

   42 declaration: T . IDENTIFIER LOP_ASSIGN expr
   43            | T . IDLIST

    IDENTIFIER  shift, and go to state 137

    IDLIST  go to state 70


State 88

   30 if_stmt: IF LP expr . RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 138
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 89

   41 while_stmt: WHILE LP expr . RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 139
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 90

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr
   89     | LP expr . RP

    RP           shift, and go to state 140
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 91

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr
   88     | MINUS expr .

    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 88 (expr)


State 92

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   77     | NOT expr .
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 77 (expr)


State 93

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr
   87     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 87 (expr)


State 94

   52 function_return: RETURN expr SEMICOLON .

    $default  reduce using rule 52 (function_return)


State 95

   68 expr: expr PLUS . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 141


State 96

   69 expr: expr MINUS . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 142


State 97

   70 expr: expr TIMES . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 143


State 98

   71 expr: expr DIVIDE . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 144


State 99

   72 expr: expr MOD . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 145


State 100

   74 expr: expr PPLUS .

    $default  reduce using rule 74 (expr)


State 101

   73 expr: expr MMINUS .

    $default  reduce using rule 73 (expr)


State 102

   75 expr: expr AND . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 146


State 103

   76 expr: expr OR . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 147


State 104

   79 expr: expr EQU . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 148


State 105

   80 expr: expr GTR . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 149


State 106

   81 expr: expr LSS . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 150


State 107

   82 expr: expr GEQ . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 151


State 108

   83 expr: expr LEQ . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 152


State 109

   84 expr: expr NEQ . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 153


State 110

   85 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 154


State 111

   86 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 155


State 112

   78 expr: expr XOR . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 156


State 113

   20 scanf_function: SCANF LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 157


State 114

   19 scanf_function: SCANF LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 158


State 115

   22 printf_function: PRINTF LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 159


State 116

   21 printf_function: PRINTF LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 160


State 117

   29 else_stmt: ELSE statements .

    $default  reduce using rule 29 (else_stmt)


State 118

   42 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 161


State 119

   44 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 162

    IDLIST  go to state 163


State 120

   57 function_declaration: T IDENTIFIER LP . function_declaration_idlist RP SEMICOLON
   58                     | T IDENTIFIER LP . RP SEMICOLON
   59 function_definition: T IDENTIFIER LP . function_definition_idlist RP LB statements RB
   60                    | T IDENTIFIER LP . RP LB statements RB

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5
    RP        shift, and go to state 164

    function_declaration_id      go to state 165
    function_declaration_idlist  go to state 166
    function_definition_id       go to state 167
    function_definition_idlist   go to state 168
    T                            go to state 169


State 121

    5 statement: T MAIN LP . RP statements

    RP  shift, and go to state 170


State 122

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 23 (assignment_stmt)


State 123

   24 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr SEMICOLON .

    $default  reduce using rule 24 (assignment_stmt)


State 124

   25 assignment_stmt: IDENTIFIER MIN_ASSIGN expr SEMICOLON .

    $default  reduce using rule 25 (assignment_stmt)


State 125

   26 assignment_stmt: IDENTIFIER TIM_ASSIGN expr SEMICOLON .

    $default  reduce using rule 26 (assignment_stmt)


State 126

   27 assignment_stmt: IDENTIFIER DIV_ASSIGN expr SEMICOLON .

    $default  reduce using rule 27 (assignment_stmt)


State 127

   28 assignment_stmt: IDENTIFIER MOD_ASSIGN expr SEMICOLON .

    $default  reduce using rule 28 (assignment_stmt)


State 128

   67 function_call: IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 67 (function_call)


State 129

   63 function_call_id: TIMES IDENTIFIER .

    $default  reduce using rule 63 (function_call_id)


State 130

   62 function_call_id: AND IDENTIFIER .

    $default  reduce using rule 62 (function_call_id)


State 131

   65 function_call_idlist: function_call_id COMMA . function_call_idlist

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    TIMES        shift, and go to state 79
    AND          shift, and go to state 80
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    function_call_id      go to state 81
    function_call_idlist  go to state 171
    expr                  go to state 83


State 132

   66 function_call: IDENTIFIER LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 172


State 133

   37 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   40         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 51
    RP           shift, and go to state 173
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 174


State 134

   34 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   38         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 175
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 135

   33 for_stmt: FOR LP declaration SEMICOLON . expr SEMICOLON expr RP statements

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 176


State 136

   32 for_stmt: FOR LP expr SEMICOLON . expr SEMICOLON expr RP statements
   35         | FOR LP expr SEMICOLON . SEMICOLON expr RP statements
   36         | FOR LP expr SEMICOLON . expr SEMICOLON RP statements
   39         | FOR LP expr SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 177
    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 178


State 137

   42 declaration: T IDENTIFIER . LOP_ASSIGN expr
   44 IDLIST: IDENTIFIER . COMMA IDLIST
   45       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 118
    COMMA       shift, and go to state 119

    $default  reduce using rule 45 (IDLIST)


State 138

   30 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 179
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 139

   41 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 180
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 140

   89 expr: LP expr RP .

    $default  reduce using rule 89 (expr)


State 141

   68 expr: expr . PLUS expr
   68     | expr PLUS expr .
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 68 (expr)


State 142

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   69     | expr MINUS expr .
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 69 (expr)


State 143

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   70     | expr TIMES expr .
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 70 (expr)


State 144

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   71     | expr DIVIDE expr .
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 71 (expr)


State 145

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   72     | expr MOD expr .
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 72 (expr)


State 146

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   75     | expr AND expr .
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101
    EQU     shift, and go to state 104
    GTR     shift, and go to state 105
    LSS     shift, and go to state 106
    GEQ     shift, and go to state 107
    LEQ     shift, and go to state 108
    NEQ     shift, and go to state 109

    $default  reduce using rule 75 (expr)


State 147

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   76     | expr OR expr .
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101
    AND     shift, and go to state 102
    EQU     shift, and go to state 104
    GTR     shift, and go to state 105
    LSS     shift, and go to state 106
    GEQ     shift, and go to state 107
    LEQ     shift, and go to state 108
    NEQ     shift, and go to state 109
    XOR     shift, and go to state 112

    $default  reduce using rule 76 (expr)


State 148

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   79     | expr EQU expr .
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101
    GTR     shift, and go to state 105
    LSS     shift, and go to state 106
    GEQ     shift, and go to state 107
    LEQ     shift, and go to state 108

    $default  reduce using rule 79 (expr)


State 149

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   80     | expr GTR expr .
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 80 (expr)


State 150

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   81     | expr LSS expr .
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 81 (expr)


State 151

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   82     | expr GEQ expr .
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 82 (expr)


State 152

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   83     | expr LEQ expr .
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101

    $default  reduce using rule 83 (expr)


State 153

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   84     | expr NEQ expr .
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101
    GTR     shift, and go to state 105
    LSS     shift, and go to state 106
    GEQ     shift, and go to state 107
    LEQ     shift, and go to state 108

    $default  reduce using rule 84 (expr)


State 154

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   85     | expr LOGICAL_AND expr .
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101
    AND     shift, and go to state 102
    OR      shift, and go to state 103
    EQU     shift, and go to state 104
    GTR     shift, and go to state 105
    LSS     shift, and go to state 106
    GEQ     shift, and go to state 107
    LEQ     shift, and go to state 108
    NEQ     shift, and go to state 109
    XOR     shift, and go to state 112

    $default  reduce using rule 85 (expr)


State 155

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr
   86     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    XOR          shift, and go to state 112

    $default  reduce using rule 86 (expr)


State 156

   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   78     | expr XOR expr .
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 95
    MINUS   shift, and go to state 96
    TIMES   shift, and go to state 97
    DIVIDE  shift, and go to state 98
    MOD     shift, and go to state 99
    PPLUS   shift, and go to state 100
    MMINUS  shift, and go to state 101
    AND     shift, and go to state 102
    EQU     shift, and go to state 104
    GTR     shift, and go to state 105
    LSS     shift, and go to state 106
    GEQ     shift, and go to state 107
    LEQ     shift, and go to state 108
    NEQ     shift, and go to state 109

    $default  reduce using rule 78 (expr)


State 157

   20 scanf_function: SCANF LP RP SEMICOLON .

    $default  reduce using rule 20 (scanf_function)


State 158

   19 scanf_function: SCANF LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 181


State 159

   22 printf_function: PRINTF LP RP SEMICOLON .

    $default  reduce using rule 22 (printf_function)


State 160

   21 printf_function: PRINTF LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 182


State 161

   42 declaration: T IDENTIFIER LOP_ASSIGN expr .
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112

    $default  reduce using rule 42 (declaration)


State 162

   44 IDLIST: IDENTIFIER . COMMA IDLIST
   45       | IDENTIFIER .

    COMMA  shift, and go to state 119

    $default  reduce using rule 45 (IDLIST)


State 163

   44 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 44 (IDLIST)


State 164

   58 function_declaration: T IDENTIFIER LP RP . SEMICOLON
   60 function_definition: T IDENTIFIER LP RP . LB statements RB

    SEMICOLON  shift, and go to state 183
    LB         shift, and go to state 184


State 165

   49 function_declaration_idlist: function_declaration_id .
   50                            | function_declaration_id . COMMA function_declaration_idlist

    COMMA  shift, and go to state 185

    $default  reduce using rule 49 (function_declaration_idlist)


State 166

   57 function_declaration: T IDENTIFIER LP function_declaration_idlist . RP SEMICOLON

    RP  shift, and go to state 186


State 167

   55 function_definition_idlist: function_definition_id .
   56                           | function_definition_id . COMMA function_definition_idlist

    COMMA  shift, and go to state 187

    $default  reduce using rule 55 (function_definition_idlist)


State 168

   59 function_definition: T IDENTIFIER LP function_definition_idlist . RP LB statements RB

    RP  shift, and go to state 188


State 169

   46 function_declaration_id: T . IDENTIFIER LOP_ASSIGN expr
   47                        | T . IDENTIFIER
   48                        | T .
   53 function_definition_id: T . IDENTIFIER LOP_ASSIGN expr
   54                       | T . IDENTIFIER

    IDENTIFIER  shift, and go to state 189

    $default  reduce using rule 48 (function_declaration_id)


State 170

    5 statement: T MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 190
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 171

   65 function_call_idlist: function_call_id COMMA function_call_idlist .

    $default  reduce using rule 65 (function_call_idlist)


State 172

   66 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 66 (function_call)


State 173

   40 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 191
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 174

   37 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 192
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 175

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   38         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 51
    RP           shift, and go to state 193
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 194


State 176

   33 for_stmt: FOR LP declaration SEMICOLON expr . SEMICOLON expr RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 195
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 177

   35 for_stmt: FOR LP expr SEMICOLON SEMICOLON . expr RP statements
   39         | FOR LP expr SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 51
    RP           shift, and go to state 196
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 197


State 178

   32 for_stmt: FOR LP expr SEMICOLON expr . SEMICOLON expr RP statements
   36         | FOR LP expr SEMICOLON expr . SEMICOLON RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 198
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 179

   30 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 30 (if_stmt)


State 180

   41 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 41 (while_stmt)


State 181

   19 scanf_function: SCANF LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 19 (scanf_function)


State 182

   21 printf_function: PRINTF LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 21 (printf_function)


State 183

   58 function_declaration: T IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 58 (function_declaration)


State 184

   60 function_definition: T IDENTIFIER LP RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 199
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 185

   50 function_declaration_idlist: function_declaration_id COMMA . function_declaration_idlist

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    function_declaration_id      go to state 165
    function_declaration_idlist  go to state 200
    T                            go to state 201


State 186

   57 function_declaration: T IDENTIFIER LP function_declaration_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 202


State 187

   56 function_definition_idlist: function_definition_id COMMA . function_definition_idlist

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    function_definition_id      go to state 167
    function_definition_idlist  go to state 203
    T                           go to state 204


State 188

   59 function_definition: T IDENTIFIER LP function_definition_idlist RP . LB statements RB

    LB  shift, and go to state 205


State 189

   46 function_declaration_id: T IDENTIFIER . LOP_ASSIGN expr
   47                        | T IDENTIFIER .
   53 function_definition_id: T IDENTIFIER . LOP_ASSIGN expr
   54                       | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 206

    COMMA     reduce using rule 47 (function_declaration_id)
    COMMA     [reduce using rule 54 (function_definition_id)]
    RP        reduce using rule 47 (function_declaration_id)
    RP        [reduce using rule 54 (function_definition_id)]
    $default  reduce using rule 47 (function_declaration_id)


State 190

    5 statement: T MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 191

   40 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 40 (for_stmt)


State 192

   37 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 207
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 193

   38 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 208
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 194

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 209
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 195

   33 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON . expr RP statements

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 210


State 196

   39 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 211
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 197

   35 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr . RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 212
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 198

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON . expr RP statements
   36         | FOR LP expr SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 51
    RP           shift, and go to state 213
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 214


State 199

   60 function_definition: T IDENTIFIER LP RP LB statements . RB

    RB  shift, and go to state 215


State 200

   50 function_declaration_idlist: function_declaration_id COMMA function_declaration_idlist .

    $default  reduce using rule 50 (function_declaration_idlist)


State 201

   46 function_declaration_id: T . IDENTIFIER LOP_ASSIGN expr
   47                        | T . IDENTIFIER
   48                        | T .

    IDENTIFIER  shift, and go to state 216

    $default  reduce using rule 48 (function_declaration_id)


State 202

   57 function_declaration: T IDENTIFIER LP function_declaration_idlist RP SEMICOLON .

    $default  reduce using rule 57 (function_declaration)


State 203

   56 function_definition_idlist: function_definition_id COMMA function_definition_idlist .

    $default  reduce using rule 56 (function_definition_idlist)


State 204

   53 function_definition_id: T . IDENTIFIER LOP_ASSIGN expr
   54                       | T . IDENTIFIER

    IDENTIFIER  shift, and go to state 217


State 205

   59 function_definition: T IDENTIFIER LP function_definition_idlist RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 218
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 206

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN . expr
   53 function_definition_id: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 219


State 207

   37 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 37 (for_stmt)


State 208

   38 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 38 (for_stmt)


State 209

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 220
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 210

   33 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr . RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 221
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 211

   39 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 39 (for_stmt)


State 212

   35 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 222
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 213

   36 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 223
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 214

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr . RP statements
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 224
    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112


State 215

   60 function_definition: T IDENTIFIER LP RP LB statements RB .

    $default  reduce using rule 60 (function_definition)


State 216

   46 function_declaration_id: T IDENTIFIER . LOP_ASSIGN expr
   47                        | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 225

    $default  reduce using rule 47 (function_declaration_id)


State 217

   53 function_definition_id: T IDENTIFIER . LOP_ASSIGN expr
   54                       | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 226

    $default  reduce using rule 54 (function_definition_id)


State 218

   59 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements . RB

    RB  shift, and go to state 227


State 219

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr .
   53 function_definition_id: T IDENTIFIER LOP_ASSIGN expr .
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112

    COMMA     reduce using rule 46 (function_declaration_id)
    COMMA     [reduce using rule 53 (function_definition_id)]
    RP        reduce using rule 46 (function_declaration_id)
    RP        [reduce using rule 53 (function_definition_id)]
    $default  reduce using rule 46 (function_declaration_id)


State 220

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 34 (for_stmt)


State 221

   33 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 228
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 222

   35 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 35 (for_stmt)


State 223

   36 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 36 (for_stmt)


State 224

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 229
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 225

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 230


State 226

   53 function_definition_id: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 51
    IDENTIFIER   shift, and go to state 52
    INTEGER      shift, and go to state 53
    CHAR         shift, and go to state 54
    STRING       shift, and go to state 55
    NUMBER       shift, and go to state 56
    MINUS        shift, and go to state 57
    NOT          shift, and go to state 58
    LOGICAL_NOT  shift, and go to state 59

    expr  go to state 231


State 227

   59 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements RB .

    $default  reduce using rule 59 (function_definition)


State 228

   33 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 33 (for_stmt)


State 229

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 32 (for_stmt)


State 230

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr .
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112

    $default  reduce using rule 46 (function_declaration_id)


State 231

   53 function_definition_id: T IDENTIFIER LOP_ASSIGN expr .
   68 expr: expr . PLUS expr
   69     | expr . MINUS expr
   70     | expr . TIMES expr
   71     | expr . DIVIDE expr
   72     | expr . MOD expr
   73     | expr . MMINUS
   74     | expr . PPLUS
   75     | expr . AND expr
   76     | expr . OR expr
   78     | expr . XOR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 95
    MINUS        shift, and go to state 96
    TIMES        shift, and go to state 97
    DIVIDE       shift, and go to state 98
    MOD          shift, and go to state 99
    PPLUS        shift, and go to state 100
    MMINUS       shift, and go to state 101
    AND          shift, and go to state 102
    OR           shift, and go to state 103
    EQU          shift, and go to state 104
    GTR          shift, and go to state 105
    LSS          shift, and go to state 106
    GEQ          shift, and go to state 107
    LEQ          shift, and go to state 108
    NEQ          shift, and go to state 109
    LOGICAL_AND  shift, and go to state 110
    LOGICAL_OR   shift, and go to state 111
    XOR          shift, and go to state 112

    $default  reduce using rule 53 (function_definition_id)
