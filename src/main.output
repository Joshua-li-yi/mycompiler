Terminals unused in grammar

   T_STRING
   BOOL
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ


State 15 conflicts: 12 shift/reduce
State 17 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 59 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 21 shift/reduce
State 104 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce
State 110 conflicts: 1 shift/reduce
State 111 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | for_stmt
   10          | declaration SEMICOLON
   11          | assignment_stmt
   12          | SEMICOLON

   13 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON

   14 else_stmt: ELSE statements

   15 if_stmt: IF LP expr RP statements

   16 if_else_stmt: if_stmt else_stmt

   17 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements
   18         | FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements
   19         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   20         | FOR LP expr SEMICOLON SEMICOLON expr RP statements
   21         | FOR LP expr SEMICOLON expr SEMICOLON RP statements
   22         | FOR LP SEMICOLON SEMICOLON expr RP statements
   23         | FOR LP SEMICOLON expr SEMICOLON RP statements
   24         | FOR LP expr SEMICOLON SEMICOLON RP statements
   25         | FOR LP SEMICOLON SEMICOLON RP statements

   26 while_stmt: WHILE LP expr RP statements

   27 declaration: T IDENTIFIER LOP_ASSIGN expr
   28            | T IDLIST

   29 IDLIST: IDENTIFIER COMMA IDLIST
   30       | IDENTIFIER

   31 expr: expr PLUS expr
   32     | expr MINUS expr
   33     | expr TIMES expr
   34     | expr OVER expr
   35     | expr MOD expr
   36     | expr MMINUS
   37     | expr PPLUS
   38     | expr AND expr
   39     | expr OR expr
   40     | NOT expr
   41     | expr XOR expr
   42     | expr SHIFT_LEFT expr
   43     | expr SHIFT_RIGHT expr
   44     | expr ASSIGN expr
   45     | expr EQU expr
   46     | expr GTR expr
   47     | expr LSS expr
   48     | expr GEQ expr
   49     | expr LEQ expr
   50     | expr NEQ expr
   51     | expr LOGICAL_AND expr
   52     | expr LOGICAL_OR expr
   53     | LOGICAL_NOT expr
   54     | MINUS expr
   55     | LP expr RP
   56     | IDENTIFIER
   57     | INTEGER
   58     | NUMBER
   59     | CHAR
   60     | STRING

   61 T: T_INT
   62  | T_CHAR
   63  | T_BOOL
   64  | T_DOUBLE
   65  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 62
T_INT (259) 61
T_STRING (260)
T_BOOL (261) 63
T_DOUBLE (262) 64
T_VOID (263) 65
LOP_ASSIGN (264) 13 27
SEMICOLON (265) 10 12 13 17 18 19 20 21 22 23 24 25
LB (266) 4
RB (267) 4
COMMA (268) 29
LP (269) 5 15 17 18 19 20 21 22 23 24 25 26 55
RP (270) 5 15 17 18 19 20 21 22 23 24 25 26 55
IDENTIFIER (271) 13 27 29 30 56
INTEGER (272) 57
CHAR (273) 59
BOOL (274)
STRING (275) 60
NUMBER (276) 58
PLUS (277) 31
MINUS (278) 32 54
TIMES (279) 33
OVER (280) 34
MOD (281) 35
PPLUS (282) 37
MMINUS (283) 36
AND (284) 38
OR (285) 39
XOR (286) 41
NOT (287) 40
SHIFT_LEFT (288) 42
SHIFT_RIGHT (289) 43
ASSIGN (290) 44
EQU (291) 45
GTR (292) 46
LSS (293) 47
GEQ (294) 48
LEQ (295) 49
NEQ (296) 50
LOGICAL_AND (297) 51
LOGICAL_OR (298) 52
LOGICAL_NOT (299) 53
UMINUS (300)
FOR (301) 17 18 19 20 21 22 23 24 25
INPUT (302)
OUTPUT (303)
DO (304)
MAIN (305) 5
IF (306) 15
ELSE (307) 14
WHILE (308) 26
EOL (309)
LOP_EQ (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3 4, on right: 1 3 4 5 14 15 17 18 19 20 21 22 23 24
    25 26
statement (59)
    on left: 5 6 7 8 9 10 11 12, on right: 2 3
assignment_stmt (60)
    on left: 13, on right: 11
else_stmt (61)
    on left: 14, on right: 16
if_stmt (62)
    on left: 15, on right: 7 16
if_else_stmt (63)
    on left: 16, on right: 8
for_stmt (64)
    on left: 17 18 19 20 21 22 23 24 25, on right: 9
while_stmt (65)
    on left: 26, on right: 6
declaration (66)
    on left: 27 28, on right: 10 18
IDLIST (67)
    on left: 29 30, on right: 28 29
expr (68)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49 50 51 52 53 54 55 56 57 58 59 60, on right: 13 15 17 18 19 20
    21 22 23 24 26 27 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49 50 51 52 53 54 55
T (69)
    on left: 61 62 63 64 65, on right: 27 28


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    program          go to state 13
    statements       go to state 14
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 1

   62 T: T_CHAR .

    $default  reduce using rule 62 (T)


State 2

   61 T: T_INT .

    $default  reduce using rule 61 (T)


State 3

   63 T: T_BOOL .

    $default  reduce using rule 63 (T)


State 4

   64 T: T_DOUBLE .

    $default  reduce using rule 64 (T)


State 5

   65 T: T_VOID .

    $default  reduce using rule 65 (T)


State 6

   12 statement: SEMICOLON .

    $default  reduce using rule 12 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 23
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 8

   13 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON

    LOP_ASSIGN  shift, and go to state 24


State 9

   17 for_stmt: FOR . LP expr SEMICOLON expr SEMICOLON expr RP statements
   18         | FOR . LP declaration SEMICOLON expr SEMICOLON expr RP statements
   19         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   20         | FOR . LP expr SEMICOLON SEMICOLON expr RP statements
   21         | FOR . LP expr SEMICOLON expr SEMICOLON RP statements
   22         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   23         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   24         | FOR . LP expr SEMICOLON SEMICOLON RP statements
   25         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  shift, and go to state 25


State 10

    5 statement: MAIN . LP RP statements

    LP  shift, and go to state 26


State 11

   15 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 27


State 12

   26 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 28


State 13

    0 $accept: program . $end

    $end  shift, and go to state 29


State 14

    1 program: statements .

    $default  reduce using rule 1 (program)


State 15

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    MAIN        [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements       go to state 30
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 16

   11 statement: assignment_stmt .

    $default  reduce using rule 11 (statement)


State 17

    7 statement: if_stmt .
   16 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 31

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 32


State 18

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 19

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 20

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 21

   10 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 22

   27 declaration: T . IDENTIFIER LOP_ASSIGN expr
   28            | T . IDLIST

    IDENTIFIER  shift, and go to state 34

    IDLIST  go to state 35


State 23

    4 statements: LB statements . RB

    RB  shift, and go to state 36


State 24

   13 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 46


State 25

   17 for_stmt: FOR LP . expr SEMICOLON expr SEMICOLON expr RP statements
   18         | FOR LP . declaration SEMICOLON expr SEMICOLON expr RP statements
   19         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   20         | FOR LP . expr SEMICOLON SEMICOLON expr RP statements
   21         | FOR LP . expr SEMICOLON expr SEMICOLON RP statements
   22         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   23         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   24         | FOR LP . expr SEMICOLON SEMICOLON RP statements
   25         | FOR LP . SEMICOLON SEMICOLON RP statements

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_BOOL       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_VOID       shift, and go to state 5
    SEMICOLON    shift, and go to state 47
    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    declaration  go to state 48
    expr         go to state 49
    T            go to state 22


State 26

    5 statement: MAIN LP . RP statements

    RP  shift, and go to state 50


State 27

   15 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 51


State 28

   26 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 52


State 29

    0 $accept: program $end .

    $default  accept


State 30

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 31

   14 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 53
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 32

   16 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 16 (if_else_stmt)


State 33

   10 statement: declaration SEMICOLON .

    $default  reduce using rule 10 (statement)


State 34

   27 declaration: T IDENTIFIER . LOP_ASSIGN expr
   29 IDLIST: IDENTIFIER . COMMA IDLIST
   30       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 54
    COMMA       shift, and go to state 55

    $default  reduce using rule 30 (IDLIST)


State 35

   28 declaration: T IDLIST .

    $default  reduce using rule 28 (declaration)


State 36

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 37

   55 expr: LP . expr RP

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 56


State 38

   56 expr: IDENTIFIER .

    $default  reduce using rule 56 (expr)


State 39

   57 expr: INTEGER .

    $default  reduce using rule 57 (expr)


State 40

   59 expr: CHAR .

    $default  reduce using rule 59 (expr)


State 41

   60 expr: STRING .

    $default  reduce using rule 60 (expr)


State 42

   58 expr: NUMBER .

    $default  reduce using rule 58 (expr)


State 43

   54 expr: MINUS . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 57


State 44

   40 expr: NOT . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 58


State 45

   53 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 59


State 46

   13 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 47

   19 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   22         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   23         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   25         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 82
    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 83


State 48

   18 for_stmt: FOR LP declaration . SEMICOLON expr SEMICOLON expr RP statements

    SEMICOLON  shift, and go to state 84


State 49

   17 for_stmt: FOR LP expr . SEMICOLON expr SEMICOLON expr RP statements
   20         | FOR LP expr . SEMICOLON SEMICOLON expr RP statements
   21         | FOR LP expr . SEMICOLON expr SEMICOLON RP statements
   24         | FOR LP expr . SEMICOLON SEMICOLON RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 85
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 50

    5 statement: MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 86
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 51

   15 if_stmt: IF LP expr . RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    RP           shift, and go to state 87
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 52

   26 while_stmt: WHILE LP expr . RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    RP           shift, and go to state 88
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 53

   14 else_stmt: ELSE statements .

    $default  reduce using rule 14 (else_stmt)


State 54

   27 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 89


State 55

   29 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 90

    IDLIST  go to state 91


State 56

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr
   55     | LP expr . RP

    RP           shift, and go to state 92
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 57

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr
   54     | MINUS expr .

    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 54 (expr)]
    $default  reduce using rule 54 (expr)


State 58

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   40     | NOT expr .
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 59

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr
   53     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 53 (expr)]
    $default  reduce using rule 53 (expr)


State 60

   13 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 13 (assignment_stmt)


State 61

   31 expr: expr PLUS . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 93


State 62

   32 expr: expr MINUS . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 94


State 63

   33 expr: expr TIMES . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 95


State 64

   34 expr: expr OVER . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 96


State 65

   35 expr: expr MOD . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 97


State 66

   37 expr: expr PPLUS .

    $default  reduce using rule 37 (expr)


State 67

   36 expr: expr MMINUS .

    $default  reduce using rule 36 (expr)


State 68

   38 expr: expr AND . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 98


State 69

   39 expr: expr OR . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 99


State 70

   41 expr: expr XOR . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 100


State 71

   42 expr: expr SHIFT_LEFT . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 101


State 72

   43 expr: expr SHIFT_RIGHT . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 102


State 73

   44 expr: expr ASSIGN . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 103


State 74

   45 expr: expr EQU . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 104


State 75

   46 expr: expr GTR . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 105


State 76

   47 expr: expr LSS . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 106


State 77

   48 expr: expr GEQ . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 107


State 78

   49 expr: expr LEQ . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 108


State 79

   50 expr: expr NEQ . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 109


State 80

   51 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 110


State 81

   52 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 111


State 82

   22 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   25         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 37
    RP           shift, and go to state 112
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 113


State 83

   19 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   23         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 114
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 84

   18 for_stmt: FOR LP declaration SEMICOLON . expr SEMICOLON expr RP statements

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 115


State 85

   17 for_stmt: FOR LP expr SEMICOLON . expr SEMICOLON expr RP statements
   20         | FOR LP expr SEMICOLON . SEMICOLON expr RP statements
   21         | FOR LP expr SEMICOLON . expr SEMICOLON RP statements
   24         | FOR LP expr SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 116
    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 117


State 86

    5 statement: MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 87

   15 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 118
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 88

   26 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 119
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 89

   27 declaration: T IDENTIFIER LOP_ASSIGN expr .
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81

    $default  reduce using rule 27 (declaration)


State 90

   29 IDLIST: IDENTIFIER . COMMA IDLIST
   30       | IDENTIFIER .

    COMMA  shift, and go to state 55

    $default  reduce using rule 30 (IDLIST)


State 91

   29 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 29 (IDLIST)


State 92

   55 expr: LP expr RP .

    $default  reduce using rule 55 (expr)


State 93

   31 expr: expr . PLUS expr
   31     | expr PLUS expr .
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 63
    OVER    shift, and go to state 64
    MOD     shift, and go to state 65
    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 94

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   32     | expr MINUS expr .
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 63
    OVER    shift, and go to state 64
    MOD     shift, and go to state 65
    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 95

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   33     | expr TIMES expr .
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 96

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   34     | expr OVER expr .
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 97

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   35     | expr MOD expr .
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)


State 98

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   38     | expr AND expr .
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79

    ASSIGN    [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 99

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   39     | expr OR expr .
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79

    ASSIGN    [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 100

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   41     | expr XOR expr .
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79

    ASSIGN    [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


State 101

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   42     | expr SHIFT_LEFT expr .
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 61
    MINUS   shift, and go to state 62
    TIMES   shift, and go to state 63
    OVER    shift, and go to state 64
    MOD     shift, and go to state 65
    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


State 102

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   43     | expr SHIFT_RIGHT expr .
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 61
    MINUS   shift, and go to state 62
    TIMES   shift, and go to state 63
    OVER    shift, and go to state 64
    MOD     shift, and go to state 65
    PPLUS   shift, and go to state 66
    MMINUS  shift, and go to state 67
    ASSIGN  shift, and go to state 73

    ASSIGN    [reduce using rule 43 (expr)]
    $default  reduce using rule 43 (expr)


State 103

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   44     | expr ASSIGN expr .
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81

    PLUS         [reduce using rule 44 (expr)]
    MINUS        [reduce using rule 44 (expr)]
    TIMES        [reduce using rule 44 (expr)]
    OVER         [reduce using rule 44 (expr)]
    MOD          [reduce using rule 44 (expr)]
    PPLUS        [reduce using rule 44 (expr)]
    MMINUS       [reduce using rule 44 (expr)]
    AND          [reduce using rule 44 (expr)]
    OR           [reduce using rule 44 (expr)]
    XOR          [reduce using rule 44 (expr)]
    SHIFT_LEFT   [reduce using rule 44 (expr)]
    SHIFT_RIGHT  [reduce using rule 44 (expr)]
    ASSIGN       [reduce using rule 44 (expr)]
    EQU          [reduce using rule 44 (expr)]
    GTR          [reduce using rule 44 (expr)]
    LSS          [reduce using rule 44 (expr)]
    GEQ          [reduce using rule 44 (expr)]
    LEQ          [reduce using rule 44 (expr)]
    NEQ          [reduce using rule 44 (expr)]
    LOGICAL_AND  [reduce using rule 44 (expr)]
    LOGICAL_OR   [reduce using rule 44 (expr)]
    $default     reduce using rule 44 (expr)


State 104

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   45     | expr EQU expr .
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78

    ASSIGN    [reduce using rule 45 (expr)]
    $default  reduce using rule 45 (expr)


State 105

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   46     | expr GTR expr .
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73

    ASSIGN    [reduce using rule 46 (expr)]
    $default  reduce using rule 46 (expr)


State 106

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   47     | expr LSS expr .
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73

    ASSIGN    [reduce using rule 47 (expr)]
    $default  reduce using rule 47 (expr)


State 107

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   48     | expr GEQ expr .
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73

    ASSIGN    [reduce using rule 48 (expr)]
    $default  reduce using rule 48 (expr)


State 108

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   49     | expr LEQ expr .
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73

    ASSIGN    [reduce using rule 49 (expr)]
    $default  reduce using rule 49 (expr)


State 109

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   50     | expr NEQ expr .
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78

    ASSIGN    [reduce using rule 50 (expr)]
    $default  reduce using rule 50 (expr)


State 110

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   51     | expr LOGICAL_AND expr .
   52     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79

    ASSIGN    [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)


State 111

   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr
   52     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80

    ASSIGN    [reduce using rule 52 (expr)]
    $default  reduce using rule 52 (expr)


State 112

   25 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 120
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 113

   22 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    RP           shift, and go to state 121
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 114

   19 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   23         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 37
    RP           shift, and go to state 122
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 123


State 115

   18 for_stmt: FOR LP declaration SEMICOLON expr . SEMICOLON expr RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 124
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 116

   20 for_stmt: FOR LP expr SEMICOLON SEMICOLON . expr RP statements
   24         | FOR LP expr SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 37
    RP           shift, and go to state 125
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 126


State 117

   17 for_stmt: FOR LP expr SEMICOLON expr . SEMICOLON expr RP statements
   21         | FOR LP expr SEMICOLON expr . SEMICOLON RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 127
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 118

   15 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 15 (if_stmt)


State 119

   26 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 26 (while_stmt)


State 120

   25 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 25 (for_stmt)


State 121

   22 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 128
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 122

   23 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 129
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 123

   19 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    RP           shift, and go to state 130
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 124

   18 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON . expr RP statements

    LP           shift, and go to state 37
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 131


State 125

   24 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 132
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 126

   20 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr . RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    RP           shift, and go to state 133
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 127

   17 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON . expr RP statements
   21         | FOR LP expr SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 37
    RP           shift, and go to state 134
    IDENTIFIER   shift, and go to state 38
    INTEGER      shift, and go to state 39
    CHAR         shift, and go to state 40
    STRING       shift, and go to state 41
    NUMBER       shift, and go to state 42
    MINUS        shift, and go to state 43
    NOT          shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45

    expr  go to state 135


State 128

   22 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 22 (for_stmt)


State 129

   23 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 23 (for_stmt)


State 130

   19 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 136
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 131

   18 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr . RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    RP           shift, and go to state 137
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 132

   24 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 24 (for_stmt)


State 133

   20 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 138
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 134

   21 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 139
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 135

   17 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr . RP statements
   31 expr: expr . PLUS expr
   32     | expr . MINUS expr
   33     | expr . TIMES expr
   34     | expr . OVER expr
   35     | expr . MOD expr
   36     | expr . MMINUS
   37     | expr . PPLUS
   38     | expr . AND expr
   39     | expr . OR expr
   41     | expr . XOR expr
   42     | expr . SHIFT_LEFT expr
   43     | expr . SHIFT_RIGHT expr
   44     | expr . ASSIGN expr
   45     | expr . EQU expr
   46     | expr . GTR expr
   47     | expr . LSS expr
   48     | expr . GEQ expr
   49     | expr . LEQ expr
   50     | expr . NEQ expr
   51     | expr . LOGICAL_AND expr
   52     | expr . LOGICAL_OR expr

    RP           shift, and go to state 140
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    TIMES        shift, and go to state 63
    OVER         shift, and go to state 64
    MOD          shift, and go to state 65
    PPLUS        shift, and go to state 66
    MMINUS       shift, and go to state 67
    AND          shift, and go to state 68
    OR           shift, and go to state 69
    XOR          shift, and go to state 70
    SHIFT_LEFT   shift, and go to state 71
    SHIFT_RIGHT  shift, and go to state 72
    ASSIGN       shift, and go to state 73
    EQU          shift, and go to state 74
    GTR          shift, and go to state 75
    LSS          shift, and go to state 76
    GEQ          shift, and go to state 77
    LEQ          shift, and go to state 78
    NEQ          shift, and go to state 79
    LOGICAL_AND  shift, and go to state 80
    LOGICAL_OR   shift, and go to state 81


State 136

   19 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 19 (for_stmt)


State 137

   18 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 141
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 138

   20 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 20 (for_stmt)


State 139

   21 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 21 (for_stmt)


State 140

   17 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    MAIN        shift, and go to state 10
    IF          shift, and go to state 11
    WHILE       shift, and go to state 12

    statements       go to state 142
    statement        go to state 15
    assignment_stmt  go to state 16
    if_stmt          go to state 17
    if_else_stmt     go to state 18
    for_stmt         go to state 19
    while_stmt       go to state 20
    declaration      go to state 21
    T                go to state 22


State 141

   18 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 18 (for_stmt)


State 142

   17 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 17 (for_stmt)
