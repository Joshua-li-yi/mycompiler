Terminals unused in grammar

   T_STRING
   BOOL
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ
   SHIFT_LEFT
   SHIFT_RIGHT


State 15 conflicts: 12 shift/reduce
State 17 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 140 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: T MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | for_stmt
   10          | function_declaration
   11          | function_definition
   12          | function_call
   13          | function_return
   14          | declaration SEMICOLON
   15          | assignment_stmt
   16          | SEMICOLON

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON
   18                | IDENTIFIER PLUS_ASSIGN expr SEMICOLON
   19                | IDENTIFIER MIN_ASSIGN expr SEMICOLON
   20                | IDENTIFIER TIM_ASSIGN expr SEMICOLON
   21                | IDENTIFIER DIV_ASSIGN expr SEMICOLON
   22                | IDENTIFIER MOD_ASSIGN expr SEMICOLON

   23 else_stmt: ELSE statements

   24 if_stmt: IF LP expr RP statements

   25 if_else_stmt: if_stmt else_stmt

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements
   27         | FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements
   28         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP expr SEMICOLON SEMICOLON expr RP statements
   30         | FOR LP expr SEMICOLON expr SEMICOLON RP statements
   31         | FOR LP SEMICOLON SEMICOLON expr RP statements
   32         | FOR LP SEMICOLON expr SEMICOLON RP statements
   33         | FOR LP expr SEMICOLON SEMICOLON RP statements
   34         | FOR LP SEMICOLON SEMICOLON RP statements

   35 while_stmt: WHILE LP expr RP statements

   36 declaration: T IDENTIFIER LOP_ASSIGN expr
   37            | T IDLIST

   38 IDLIST: IDENTIFIER COMMA IDLIST
   39       | IDENTIFIER

   40 IDLIST_DECL: declaration
   41            | declaration COMMA IDLIST_DECL

   42 function_return: RETURN SEMICOLON
   43                | RETURN expr SEMICOLON

   44 function_declaration: T IDENTIFIER LP IDLIST_DECL RP SEMICOLON
   45                     | T IDENTIFIER LP RP SEMICOLON

   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements RB
   47                    | T IDENTIFIER LP RP LB statements RB

   48 function_call_id: expr
   49                 | AND IDENTIFIER
   50                 | TIMES IDENTIFIER

   51 function_call_idlist: function_call_id
   52                     | function_call_id COMMA function_call_idlist

   53 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON
   54              | IDENTIFIER LP RP SEMICOLON

   55 expr: expr PLUS expr
   56     | expr MINUS expr
   57     | expr TIMES expr
   58     | expr DIVIDE expr
   59     | expr MOD expr
   60     | expr MMINUS
   61     | expr PPLUS
   62     | expr AND expr
   63     | expr OR expr
   64     | NOT expr
   65     | expr XOR expr
   66     | expr EQU expr
   67     | expr GTR expr
   68     | expr LSS expr
   69     | expr GEQ expr
   70     | expr LEQ expr
   71     | expr NEQ expr
   72     | expr LOGICAL_AND expr
   73     | expr LOGICAL_OR expr
   74     | LOGICAL_NOT expr
   75     | MINUS expr
   76     | LP expr RP
   77     | IDENTIFIER
   78     | INTEGER
   79     | NUMBER
   80     | CHAR
   81     | STRING

   82 T: T_INT
   83  | T_CHAR
   84  | T_BOOL
   85  | T_DOUBLE
   86  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 83
T_INT (259) 82
T_STRING (260)
T_BOOL (261) 84
T_DOUBLE (262) 85
T_VOID (263) 86
LOP_ASSIGN (264) 17 36
PLUS_ASSIGN (265) 18
MIN_ASSIGN (266) 19
TIM_ASSIGN (267) 20
DIV_ASSIGN (268) 21
MOD_ASSIGN (269) 22
SEMICOLON (270) 14 16 17 18 19 20 21 22 26 27 28 29 30 31 32 33 34
    42 43 44 45 53 54
LB (271) 4 46 47
RB (272) 4 46 47
COMMA (273) 38 41 52
LP (274) 5 24 26 27 28 29 30 31 32 33 34 35 44 45 46 47 53 54 76
RP (275) 5 24 26 27 28 29 30 31 32 33 34 35 44 45 46 47 53 54 76
IDENTIFIER (276) 17 18 19 20 21 22 36 38 39 44 45 46 47 49 50 53 54
    77
INTEGER (277) 78
CHAR (278) 80
BOOL (279)
STRING (280) 81
NUMBER (281) 79
PLUS (282) 55
MINUS (283) 56 75
TIMES (284) 50 57
DIVIDE (285) 58
MOD (286) 59
PPLUS (287) 61
MMINUS (288) 60
AND (289) 49 62
OR (290) 63
NOT (291) 64
EQU (292) 66
GTR (293) 67
LSS (294) 68
GEQ (295) 69
LEQ (296) 70
NEQ (297) 71
LOGICAL_AND (298) 72
LOGICAL_OR (299) 73
LOGICAL_NOT (300) 74
UMINUS (301)
FOR (302) 26 27 28 29 30 31 32 33 34
INPUT (303)
OUTPUT (304)
DO (305)
MAIN (306) 5
IF (307) 24
ELSE (308) 23
WHILE (309) 35
RETURN (310) 42 43
EOL (311)
LOP_EQ (312)
XOR (313) 65
SHIFT_LEFT (314)
SHIFT_RIGHT (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3 4, on right: 1 3 4 5 23 24 26 27 28 29 30 31 32 33
    34 35 46 47
statement (64)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16, on right: 2 3
assignment_stmt (65)
    on left: 17 18 19 20 21 22, on right: 15
else_stmt (66)
    on left: 23, on right: 25
if_stmt (67)
    on left: 24, on right: 7 25
if_else_stmt (68)
    on left: 25, on right: 8
for_stmt (69)
    on left: 26 27 28 29 30 31 32 33 34, on right: 9
while_stmt (70)
    on left: 35, on right: 6
declaration (71)
    on left: 36 37, on right: 14 27 40 41
IDLIST (72)
    on left: 38 39, on right: 37 38
IDLIST_DECL (73)
    on left: 40 41, on right: 41 44 46
function_return (74)
    on left: 42 43, on right: 13
function_declaration (75)
    on left: 44 45, on right: 10
function_definition (76)
    on left: 46 47, on right: 11
function_call_id (77)
    on left: 48 49 50, on right: 51 52
function_call_idlist (78)
    on left: 51 52, on right: 52 53
function_call (79)
    on left: 53 54, on right: 12
expr (80)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
    73 74 75 76 77 78 79 80 81, on right: 17 18 19 20 21 22 24 26 27
    28 29 30 31 32 33 35 36 43 48 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69 70 71 72 73 74 75 76
T (81)
    on left: 82 83 84 85 86, on right: 5 36 37 44 45 46 47


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    program               go to state 13
    statements            go to state 14
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 1

   83 T: T_CHAR .

    $default  reduce using rule 83 (T)


State 2

   82 T: T_INT .

    $default  reduce using rule 82 (T)


State 3

   84 T: T_BOOL .

    $default  reduce using rule 84 (T)


State 4

   85 T: T_DOUBLE .

    $default  reduce using rule 85 (T)


State 5

   86 T: T_VOID .

    $default  reduce using rule 86 (T)


State 6

   16 statement: SEMICOLON .

    $default  reduce using rule 16 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 27
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 8

   17 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   18                | IDENTIFIER . PLUS_ASSIGN expr SEMICOLON
   19                | IDENTIFIER . MIN_ASSIGN expr SEMICOLON
   20                | IDENTIFIER . TIM_ASSIGN expr SEMICOLON
   21                | IDENTIFIER . DIV_ASSIGN expr SEMICOLON
   22                | IDENTIFIER . MOD_ASSIGN expr SEMICOLON
   53 function_call: IDENTIFIER . LP function_call_idlist RP SEMICOLON
   54              | IDENTIFIER . LP RP SEMICOLON

    LOP_ASSIGN   shift, and go to state 28
    PLUS_ASSIGN  shift, and go to state 29
    MIN_ASSIGN   shift, and go to state 30
    TIM_ASSIGN   shift, and go to state 31
    DIV_ASSIGN   shift, and go to state 32
    MOD_ASSIGN   shift, and go to state 33
    LP           shift, and go to state 34


State 9

   26 for_stmt: FOR . LP expr SEMICOLON expr SEMICOLON expr RP statements
   27         | FOR . LP declaration SEMICOLON expr SEMICOLON expr RP statements
   28         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR . LP expr SEMICOLON SEMICOLON expr RP statements
   30         | FOR . LP expr SEMICOLON expr SEMICOLON RP statements
   31         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   32         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   33         | FOR . LP expr SEMICOLON SEMICOLON RP statements
   34         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  shift, and go to state 35


State 10

   24 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 36


State 11

   35 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 37


State 12

   42 function_return: RETURN . SEMICOLON
   43                | RETURN . expr SEMICOLON

    SEMICOLON    shift, and go to state 38
    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 48


State 13

    0 $accept: program . $end

    $end  shift, and go to state 49


State 14

    1 program: statements .

    $default  reduce using rule 1 (program)


State 15

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    RETURN      [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements            go to state 50
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 16

   15 statement: assignment_stmt .

    $default  reduce using rule 15 (statement)


State 17

    7 statement: if_stmt .
   25 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 51

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 52


State 18

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 19

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 20

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 21

   14 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 22

   13 statement: function_return .

    $default  reduce using rule 13 (statement)


State 23

   10 statement: function_declaration .

    $default  reduce using rule 10 (statement)


State 24

   11 statement: function_definition .

    $default  reduce using rule 11 (statement)


State 25

   12 statement: function_call .

    $default  reduce using rule 12 (statement)


State 26

    5 statement: T . MAIN LP RP statements
   36 declaration: T . IDENTIFIER LOP_ASSIGN expr
   37            | T . IDLIST
   44 function_declaration: T . IDENTIFIER LP IDLIST_DECL RP SEMICOLON
   45                     | T . IDENTIFIER LP RP SEMICOLON
   46 function_definition: T . IDENTIFIER LP IDLIST_DECL RP LB statements RB
   47                    | T . IDENTIFIER LP RP LB statements RB

    IDENTIFIER  shift, and go to state 54
    MAIN        shift, and go to state 55

    IDLIST  go to state 56


State 27

    4 statements: LB statements . RB

    RB  shift, and go to state 57


State 28

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 58


State 29

   18 assignment_stmt: IDENTIFIER PLUS_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 59


State 30

   19 assignment_stmt: IDENTIFIER MIN_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 60


State 31

   20 assignment_stmt: IDENTIFIER TIM_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 61


State 32

   21 assignment_stmt: IDENTIFIER DIV_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 62


State 33

   22 assignment_stmt: IDENTIFIER MOD_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 63


State 34

   53 function_call: IDENTIFIER LP . function_call_idlist RP SEMICOLON
   54              | IDENTIFIER LP . RP SEMICOLON

    LP           shift, and go to state 39
    RP           shift, and go to state 64
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 65
    AND          shift, and go to state 66
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    function_call_id      go to state 67
    function_call_idlist  go to state 68
    expr                  go to state 69


State 35

   26 for_stmt: FOR LP . expr SEMICOLON expr SEMICOLON expr RP statements
   27         | FOR LP . declaration SEMICOLON expr SEMICOLON expr RP statements
   28         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP . expr SEMICOLON SEMICOLON expr RP statements
   30         | FOR LP . expr SEMICOLON expr SEMICOLON RP statements
   31         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   32         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   33         | FOR LP . expr SEMICOLON SEMICOLON RP statements
   34         | FOR LP . SEMICOLON SEMICOLON RP statements

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_BOOL       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_VOID       shift, and go to state 5
    SEMICOLON    shift, and go to state 70
    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    declaration  go to state 71
    expr         go to state 72
    T            go to state 73


State 36

   24 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 74


State 37

   35 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 75


State 38

   42 function_return: RETURN SEMICOLON .

    $default  reduce using rule 42 (function_return)


State 39

   76 expr: LP . expr RP

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 76


State 40

   77 expr: IDENTIFIER .

    $default  reduce using rule 77 (expr)


State 41

   78 expr: INTEGER .

    $default  reduce using rule 78 (expr)


State 42

   80 expr: CHAR .

    $default  reduce using rule 80 (expr)


State 43

   81 expr: STRING .

    $default  reduce using rule 81 (expr)


State 44

   79 expr: NUMBER .

    $default  reduce using rule 79 (expr)


State 45

   75 expr: MINUS . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 77


State 46

   64 expr: NOT . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 78


State 47

   74 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 79


State 48

   43 function_return: RETURN expr . SEMICOLON
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 80
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 49

    0 $accept: program $end .

    $default  accept


State 50

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 51

   23 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 99
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 52

   25 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 25 (if_else_stmt)


State 53

   14 statement: declaration SEMICOLON .

    $default  reduce using rule 14 (statement)


State 54

   36 declaration: T IDENTIFIER . LOP_ASSIGN expr
   38 IDLIST: IDENTIFIER . COMMA IDLIST
   39       | IDENTIFIER .
   44 function_declaration: T IDENTIFIER . LP IDLIST_DECL RP SEMICOLON
   45                     | T IDENTIFIER . LP RP SEMICOLON
   46 function_definition: T IDENTIFIER . LP IDLIST_DECL RP LB statements RB
   47                    | T IDENTIFIER . LP RP LB statements RB

    LOP_ASSIGN  shift, and go to state 100
    COMMA       shift, and go to state 101
    LP          shift, and go to state 102

    $default  reduce using rule 39 (IDLIST)


State 55

    5 statement: T MAIN . LP RP statements

    LP  shift, and go to state 103


State 56

   37 declaration: T IDLIST .

    $default  reduce using rule 37 (declaration)


State 57

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 58

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 104
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 59

   18 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr . SEMICOLON
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 105
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 60

   19 assignment_stmt: IDENTIFIER MIN_ASSIGN expr . SEMICOLON
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 106
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 61

   20 assignment_stmt: IDENTIFIER TIM_ASSIGN expr . SEMICOLON
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 107
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 62

   21 assignment_stmt: IDENTIFIER DIV_ASSIGN expr . SEMICOLON
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 108
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 63

   22 assignment_stmt: IDENTIFIER MOD_ASSIGN expr . SEMICOLON
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 109
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 64

   54 function_call: IDENTIFIER LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 65

   50 function_call_id: TIMES . IDENTIFIER

    IDENTIFIER  shift, and go to state 111


State 66

   49 function_call_id: AND . IDENTIFIER

    IDENTIFIER  shift, and go to state 112


State 67

   51 function_call_idlist: function_call_id .
   52                     | function_call_id . COMMA function_call_idlist

    COMMA  shift, and go to state 113

    $default  reduce using rule 51 (function_call_idlist)


State 68

   53 function_call: IDENTIFIER LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 114


State 69

   48 function_call_id: expr .
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98

    $default  reduce using rule 48 (function_call_id)


State 70

   28 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   31         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   32         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   34         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 115
    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 116


State 71

   27 for_stmt: FOR LP declaration . SEMICOLON expr SEMICOLON expr RP statements

    SEMICOLON  shift, and go to state 117


State 72

   26 for_stmt: FOR LP expr . SEMICOLON expr SEMICOLON expr RP statements
   29         | FOR LP expr . SEMICOLON SEMICOLON expr RP statements
   30         | FOR LP expr . SEMICOLON expr SEMICOLON RP statements
   33         | FOR LP expr . SEMICOLON SEMICOLON RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 118
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 73

   36 declaration: T . IDENTIFIER LOP_ASSIGN expr
   37            | T . IDLIST

    IDENTIFIER  shift, and go to state 119

    IDLIST  go to state 56


State 74

   24 if_stmt: IF LP expr . RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    RP           shift, and go to state 120
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 75

   35 while_stmt: WHILE LP expr . RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    RP           shift, and go to state 121
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 76

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr
   76     | LP expr . RP

    RP           shift, and go to state 122
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 77

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr
   75     | MINUS expr .

    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 75 (expr)


State 78

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   64     | NOT expr .
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 64 (expr)


State 79

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr
   74     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 74 (expr)


State 80

   43 function_return: RETURN expr SEMICOLON .

    $default  reduce using rule 43 (function_return)


State 81

   55 expr: expr PLUS . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 123


State 82

   56 expr: expr MINUS . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 124


State 83

   57 expr: expr TIMES . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 125


State 84

   58 expr: expr DIVIDE . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 126


State 85

   59 expr: expr MOD . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 127


State 86

   61 expr: expr PPLUS .

    $default  reduce using rule 61 (expr)


State 87

   60 expr: expr MMINUS .

    $default  reduce using rule 60 (expr)


State 88

   62 expr: expr AND . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 128


State 89

   63 expr: expr OR . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 129


State 90

   66 expr: expr EQU . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 130


State 91

   67 expr: expr GTR . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 131


State 92

   68 expr: expr LSS . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 132


State 93

   69 expr: expr GEQ . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 133


State 94

   70 expr: expr LEQ . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 134


State 95

   71 expr: expr NEQ . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 135


State 96

   72 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 136


State 97

   73 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 137


State 98

   65 expr: expr XOR . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 138


State 99

   23 else_stmt: ELSE statements .

    $default  reduce using rule 23 (else_stmt)


State 100

   36 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 139


State 101

   38 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 140

    IDLIST  go to state 141


State 102

   44 function_declaration: T IDENTIFIER LP . IDLIST_DECL RP SEMICOLON
   45                     | T IDENTIFIER LP . RP SEMICOLON
   46 function_definition: T IDENTIFIER LP . IDLIST_DECL RP LB statements RB
   47                    | T IDENTIFIER LP . RP LB statements RB

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5
    RP        shift, and go to state 142

    declaration  go to state 143
    IDLIST_DECL  go to state 144
    T            go to state 73


State 103

    5 statement: T MAIN LP . RP statements

    RP  shift, and go to state 145


State 104

   17 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 17 (assignment_stmt)


State 105

   18 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr SEMICOLON .

    $default  reduce using rule 18 (assignment_stmt)


State 106

   19 assignment_stmt: IDENTIFIER MIN_ASSIGN expr SEMICOLON .

    $default  reduce using rule 19 (assignment_stmt)


State 107

   20 assignment_stmt: IDENTIFIER TIM_ASSIGN expr SEMICOLON .

    $default  reduce using rule 20 (assignment_stmt)


State 108

   21 assignment_stmt: IDENTIFIER DIV_ASSIGN expr SEMICOLON .

    $default  reduce using rule 21 (assignment_stmt)


State 109

   22 assignment_stmt: IDENTIFIER MOD_ASSIGN expr SEMICOLON .

    $default  reduce using rule 22 (assignment_stmt)


State 110

   54 function_call: IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 54 (function_call)


State 111

   50 function_call_id: TIMES IDENTIFIER .

    $default  reduce using rule 50 (function_call_id)


State 112

   49 function_call_id: AND IDENTIFIER .

    $default  reduce using rule 49 (function_call_id)


State 113

   52 function_call_idlist: function_call_id COMMA . function_call_idlist

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 65
    AND          shift, and go to state 66
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    function_call_id      go to state 67
    function_call_idlist  go to state 146
    expr                  go to state 69


State 114

   53 function_call: IDENTIFIER LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 147


State 115

   31 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   34         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 39
    RP           shift, and go to state 148
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 149


State 116

   28 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   32         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 150
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 117

   27 for_stmt: FOR LP declaration SEMICOLON . expr SEMICOLON expr RP statements

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 151


State 118

   26 for_stmt: FOR LP expr SEMICOLON . expr SEMICOLON expr RP statements
   29         | FOR LP expr SEMICOLON . SEMICOLON expr RP statements
   30         | FOR LP expr SEMICOLON . expr SEMICOLON RP statements
   33         | FOR LP expr SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 152
    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 153


State 119

   36 declaration: T IDENTIFIER . LOP_ASSIGN expr
   38 IDLIST: IDENTIFIER . COMMA IDLIST
   39       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 100
    COMMA       shift, and go to state 101

    COMMA     [reduce using rule 39 (IDLIST)]
    $default  reduce using rule 39 (IDLIST)


State 120

   24 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 154
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 121

   35 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 155
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 122

   76 expr: LP expr RP .

    $default  reduce using rule 76 (expr)


State 123

   55 expr: expr . PLUS expr
   55     | expr PLUS expr .
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 55 (expr)


State 124

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   56     | expr MINUS expr .
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 56 (expr)


State 125

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   57     | expr TIMES expr .
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 57 (expr)


State 126

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   58     | expr DIVIDE expr .
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 58 (expr)


State 127

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   59     | expr MOD expr .
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 59 (expr)


State 128

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   62     | expr AND expr .
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87
    EQU     shift, and go to state 90
    GTR     shift, and go to state 91
    LSS     shift, and go to state 92
    GEQ     shift, and go to state 93
    LEQ     shift, and go to state 94
    NEQ     shift, and go to state 95

    $default  reduce using rule 62 (expr)


State 129

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   63     | expr OR expr .
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87
    AND     shift, and go to state 88
    EQU     shift, and go to state 90
    GTR     shift, and go to state 91
    LSS     shift, and go to state 92
    GEQ     shift, and go to state 93
    LEQ     shift, and go to state 94
    NEQ     shift, and go to state 95
    XOR     shift, and go to state 98

    $default  reduce using rule 63 (expr)


State 130

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   66     | expr EQU expr .
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87
    GTR     shift, and go to state 91
    LSS     shift, and go to state 92
    GEQ     shift, and go to state 93
    LEQ     shift, and go to state 94

    $default  reduce using rule 66 (expr)


State 131

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   67     | expr GTR expr .
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 67 (expr)


State 132

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   68     | expr LSS expr .
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 68 (expr)


State 133

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   69     | expr GEQ expr .
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 69 (expr)


State 134

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   70     | expr LEQ expr .
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87

    $default  reduce using rule 70 (expr)


State 135

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   71     | expr NEQ expr .
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87
    GTR     shift, and go to state 91
    LSS     shift, and go to state 92
    GEQ     shift, and go to state 93
    LEQ     shift, and go to state 94

    $default  reduce using rule 71 (expr)


State 136

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   72     | expr LOGICAL_AND expr .
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87
    AND     shift, and go to state 88
    OR      shift, and go to state 89
    EQU     shift, and go to state 90
    GTR     shift, and go to state 91
    LSS     shift, and go to state 92
    GEQ     shift, and go to state 93
    LEQ     shift, and go to state 94
    NEQ     shift, and go to state 95
    XOR     shift, and go to state 98

    $default  reduce using rule 72 (expr)


State 137

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr
   73     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    XOR          shift, and go to state 98

    $default  reduce using rule 73 (expr)


State 138

   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   65     | expr XOR expr .
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 81
    MINUS   shift, and go to state 82
    TIMES   shift, and go to state 83
    DIVIDE  shift, and go to state 84
    MOD     shift, and go to state 85
    PPLUS   shift, and go to state 86
    MMINUS  shift, and go to state 87
    AND     shift, and go to state 88
    EQU     shift, and go to state 90
    GTR     shift, and go to state 91
    LSS     shift, and go to state 92
    GEQ     shift, and go to state 93
    LEQ     shift, and go to state 94
    NEQ     shift, and go to state 95

    $default  reduce using rule 65 (expr)


State 139

   36 declaration: T IDENTIFIER LOP_ASSIGN expr .
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98

    $default  reduce using rule 36 (declaration)


State 140

   38 IDLIST: IDENTIFIER . COMMA IDLIST
   39       | IDENTIFIER .

    COMMA  shift, and go to state 101

    COMMA     [reduce using rule 39 (IDLIST)]
    $default  reduce using rule 39 (IDLIST)


State 141

   38 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 38 (IDLIST)


State 142

   45 function_declaration: T IDENTIFIER LP RP . SEMICOLON
   47 function_definition: T IDENTIFIER LP RP . LB statements RB

    SEMICOLON  shift, and go to state 156
    LB         shift, and go to state 157


State 143

   40 IDLIST_DECL: declaration .
   41            | declaration . COMMA IDLIST_DECL

    COMMA  shift, and go to state 158

    $default  reduce using rule 40 (IDLIST_DECL)


State 144

   44 function_declaration: T IDENTIFIER LP IDLIST_DECL . RP SEMICOLON
   46 function_definition: T IDENTIFIER LP IDLIST_DECL . RP LB statements RB

    RP  shift, and go to state 159


State 145

    5 statement: T MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 160
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 146

   52 function_call_idlist: function_call_id COMMA function_call_idlist .

    $default  reduce using rule 52 (function_call_idlist)


State 147

   53 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 53 (function_call)


State 148

   34 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 161
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 149

   31 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    RP           shift, and go to state 162
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 150

   28 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   32         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 39
    RP           shift, and go to state 163
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 164


State 151

   27 for_stmt: FOR LP declaration SEMICOLON expr . SEMICOLON expr RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 165
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 152

   29 for_stmt: FOR LP expr SEMICOLON SEMICOLON . expr RP statements
   33         | FOR LP expr SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 39
    RP           shift, and go to state 166
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 167


State 153

   26 for_stmt: FOR LP expr SEMICOLON expr . SEMICOLON expr RP statements
   30         | FOR LP expr SEMICOLON expr . SEMICOLON RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 168
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 154

   24 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 24 (if_stmt)


State 155

   35 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 35 (while_stmt)


State 156

   45 function_declaration: T IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 45 (function_declaration)


State 157

   47 function_definition: T IDENTIFIER LP RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 169
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 158

   41 IDLIST_DECL: declaration COMMA . IDLIST_DECL

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    declaration  go to state 143
    IDLIST_DECL  go to state 170
    T            go to state 73


State 159

   44 function_declaration: T IDENTIFIER LP IDLIST_DECL RP . SEMICOLON
   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP . LB statements RB

    SEMICOLON  shift, and go to state 171
    LB         shift, and go to state 172


State 160

    5 statement: T MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 161

   34 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 34 (for_stmt)


State 162

   31 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 173
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 163

   32 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 174
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 164

   28 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    RP           shift, and go to state 175
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 165

   27 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON . expr RP statements

    LP           shift, and go to state 39
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 176


State 166

   33 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 177
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 167

   29 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr . RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    RP           shift, and go to state 178
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 168

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON . expr RP statements
   30         | FOR LP expr SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 39
    RP           shift, and go to state 179
    IDENTIFIER   shift, and go to state 40
    INTEGER      shift, and go to state 41
    CHAR         shift, and go to state 42
    STRING       shift, and go to state 43
    NUMBER       shift, and go to state 44
    MINUS        shift, and go to state 45
    NOT          shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47

    expr  go to state 180


State 169

   47 function_definition: T IDENTIFIER LP RP LB statements . RB

    RB  shift, and go to state 181


State 170

   41 IDLIST_DECL: declaration COMMA IDLIST_DECL .

    $default  reduce using rule 41 (IDLIST_DECL)


State 171

   44 function_declaration: T IDENTIFIER LP IDLIST_DECL RP SEMICOLON .

    $default  reduce using rule 44 (function_declaration)


State 172

   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 182
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 173

   31 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 31 (for_stmt)


State 174

   32 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 32 (for_stmt)


State 175

   28 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 183
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 176

   27 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr . RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    RP           shift, and go to state 184
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 177

   33 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 33 (for_stmt)


State 178

   29 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 185
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 179

   30 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 186
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 180

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr . RP statements
   55 expr: expr . PLUS expr
   56     | expr . MINUS expr
   57     | expr . TIMES expr
   58     | expr . DIVIDE expr
   59     | expr . MOD expr
   60     | expr . MMINUS
   61     | expr . PPLUS
   62     | expr . AND expr
   63     | expr . OR expr
   65     | expr . XOR expr
   66     | expr . EQU expr
   67     | expr . GTR expr
   68     | expr . LSS expr
   69     | expr . GEQ expr
   70     | expr . LEQ expr
   71     | expr . NEQ expr
   72     | expr . LOGICAL_AND expr
   73     | expr . LOGICAL_OR expr

    RP           shift, and go to state 187
    PLUS         shift, and go to state 81
    MINUS        shift, and go to state 82
    TIMES        shift, and go to state 83
    DIVIDE       shift, and go to state 84
    MOD          shift, and go to state 85
    PPLUS        shift, and go to state 86
    MMINUS       shift, and go to state 87
    AND          shift, and go to state 88
    OR           shift, and go to state 89
    EQU          shift, and go to state 90
    GTR          shift, and go to state 91
    LSS          shift, and go to state 92
    GEQ          shift, and go to state 93
    LEQ          shift, and go to state 94
    NEQ          shift, and go to state 95
    LOGICAL_AND  shift, and go to state 96
    LOGICAL_OR   shift, and go to state 97
    XOR          shift, and go to state 98


State 181

   47 function_definition: T IDENTIFIER LP RP LB statements RB .

    $default  reduce using rule 47 (function_definition)


State 182

   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements . RB

    RB  shift, and go to state 188


State 183

   28 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 28 (for_stmt)


State 184

   27 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 189
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 185

   29 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 29 (for_stmt)


State 186

   30 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 30 (for_stmt)


State 187

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12

    statements            go to state 190
    statement             go to state 15
    assignment_stmt       go to state 16
    if_stmt               go to state 17
    if_else_stmt          go to state 18
    for_stmt              go to state 19
    while_stmt            go to state 20
    declaration           go to state 21
    function_return       go to state 22
    function_declaration  go to state 23
    function_definition   go to state 24
    function_call         go to state 25
    T                     go to state 26


State 188

   46 function_definition: T IDENTIFIER LP IDLIST_DECL RP LB statements RB .

    $default  reduce using rule 46 (function_definition)


State 189

   27 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 27 (for_stmt)


State 190

   26 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 26 (for_stmt)
