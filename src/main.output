Terminals unused in grammar

   T_STRING
   BOOL
   FOR
   INPUT
   OUTPUT
   ELSE
   DO
   IF
   EOL
   LOP_EQ


State 38 conflicts: 8 shift/reduce
State 40 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 42 conflicts: 1 shift/reduce
State 69 conflicts: 8 shift/reduce
State 70 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 80 conflicts: 21 shift/reduce
State 81 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 87 conflicts: 1 shift/reduce
State 88 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement
    4           | LB statements RB

    5 statement: MAIN LP RP statements
    6          | while_stmt
    7          | declaration SEMICOLON
    8          | SEMICOLON

    9 while_stmt: WHILE LP expr RP statements

   10 declaration: T IDENTIFIER LOP_ASSIGN expr
   11            | T IDLIST

   12 IDLIST: IDENTIFIER COMMA IDLIST
   13       | IDENTIFIER

   14 expr: expr PLUS expr
   15     | expr MINUS expr
   16     | expr TIMES expr
   17     | expr OVER expr
   18     | expr MOD expr
   19     | expr MMINUS
   20     | expr PPLUS
   21     | expr AND expr
   22     | expr OR expr
   23     | NOT expr
   24     | expr XOR expr
   25     | expr SHIFT_LEFT expr
   26     | expr SHIFT_RIGHT expr
   27     | expr ASSIGN expr
   28     | expr EQU expr
   29     | expr GTR expr
   30     | expr LSS expr
   31     | expr GEQ expr
   32     | expr LEQ expr
   33     | expr NEQ expr
   34     | expr LOGICAL_AND expr
   35     | expr LOGICAL_OR expr
   36     | LOGICAL_NOT expr
   37     | MINUS expr
   38     | LP expr RP
   39     | IDENTIFIER
   40     | INTEGER
   41     | NUMBER
   42     | CHAR
   43     | STRING

   44 T: T_INT
   45  | T_CHAR
   46  | T_BOOL
   47  | T_DOUBLE
   48  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 45
T_INT (259) 44
T_STRING (260)
T_BOOL (261) 46
T_DOUBLE (262) 47
T_VOID (263) 48
LOP_ASSIGN (264) 10
SEMICOLON (265) 7 8
LB (266) 4
RB (267) 4
COMMA (268) 12
LP (269) 5 9 38
RP (270) 5 9 38
IDENTIFIER (271) 10 12 13 39
INTEGER (272) 40
CHAR (273) 42
BOOL (274)
STRING (275) 43
NUMBER (276) 41
PLUS (277) 14
MINUS (278) 15 37
TIMES (279) 16
OVER (280) 17
MOD (281) 18
PPLUS (282) 20
MMINUS (283) 19
AND (284) 21
OR (285) 22
XOR (286) 24
NOT (287) 23
SHIFT_LEFT (288) 25
SHIFT_RIGHT (289) 26
ASSIGN (290) 27
EQU (291) 28
GTR (292) 29
LSS (293) 30
GEQ (294) 31
LEQ (295) 32
NEQ (296) 33
LOGICAL_AND (297) 34
LOGICAL_OR (298) 35
LOGICAL_NOT (299) 36
UMINUS (300)
FOR (301)
INPUT (302)
OUTPUT (303)
ELSE (304)
DO (305)
MAIN (306) 5
IF (307)
WHILE (308) 9
EOL (309)
LOP_EQ (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
statements (58)
    on left: 2 3 4, on right: 1 3 4 5 9
statement (59)
    on left: 5 6 7 8, on right: 2 3
while_stmt (60)
    on left: 9, on right: 6
declaration (61)
    on left: 10 11, on right: 7
IDLIST (62)
    on left: 12 13, on right: 11 12
expr (63)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34 35 36 37 38 39 40 41 42 43, on right: 9 10 14 15 16 17
    18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
T (64)
    on left: 44 45 46 47 48, on right: 10 11


State 0

    0 $accept: . program $end

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    WHILE      shift, and go to state 9

    program      go to state 10
    statements   go to state 11
    statement    go to state 12
    while_stmt   go to state 13
    declaration  go to state 14
    T            go to state 15


State 1

   45 T: T_CHAR .

    $default  reduce using rule 45 (T)


State 2

   44 T: T_INT .

    $default  reduce using rule 44 (T)


State 3

   46 T: T_BOOL .

    $default  reduce using rule 46 (T)


State 4

   47 T: T_DOUBLE .

    $default  reduce using rule 47 (T)


State 5

   48 T: T_VOID .

    $default  reduce using rule 48 (T)


State 6

    8 statement: SEMICOLON .

    $default  reduce using rule 8 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    WHILE      shift, and go to state 9

    statements   go to state 16
    statement    go to state 12
    while_stmt   go to state 13
    declaration  go to state 14
    T            go to state 15


State 8

    5 statement: MAIN . LP RP statements

    LP  shift, and go to state 17


State 9

    9 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 18


State 10

    0 $accept: program . $end

    $end  shift, and go to state 19


State 11

    1 program: statements .
    3 statements: statements . statement

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    MAIN       shift, and go to state 8
    WHILE      shift, and go to state 9

    $default  reduce using rule 1 (program)

    statement    go to state 20
    while_stmt   go to state 13
    declaration  go to state 14
    T            go to state 15


State 12

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 13

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 14

    7 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 21


State 15

   10 declaration: T . IDENTIFIER LOP_ASSIGN expr
   11            | T . IDLIST

    IDENTIFIER  shift, and go to state 22

    IDLIST  go to state 23


State 16

    3 statements: statements . statement
    4           | LB statements . RB

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    RB         shift, and go to state 24
    MAIN       shift, and go to state 8
    WHILE      shift, and go to state 9

    statement    go to state 20
    while_stmt   go to state 13
    declaration  go to state 14
    T            go to state 15


State 17

    5 statement: MAIN LP . RP statements

    RP  shift, and go to state 25


State 18

    9 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 35


State 19

    0 $accept: program $end .

    $default  accept


State 20

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 21

    7 statement: declaration SEMICOLON .

    $default  reduce using rule 7 (statement)


State 22

   10 declaration: T IDENTIFIER . LOP_ASSIGN expr
   12 IDLIST: IDENTIFIER . COMMA IDLIST
   13       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 36
    COMMA       shift, and go to state 37

    $default  reduce using rule 13 (IDLIST)


State 23

   11 declaration: T IDLIST .

    $default  reduce using rule 11 (declaration)


State 24

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 25

    5 statement: MAIN LP RP . statements

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    WHILE      shift, and go to state 9

    statements   go to state 38
    statement    go to state 12
    while_stmt   go to state 13
    declaration  go to state 14
    T            go to state 15


State 26

   38 expr: LP . expr RP

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 39


State 27

   39 expr: IDENTIFIER .

    $default  reduce using rule 39 (expr)


State 28

   40 expr: INTEGER .

    $default  reduce using rule 40 (expr)


State 29

   42 expr: CHAR .

    $default  reduce using rule 42 (expr)


State 30

   43 expr: STRING .

    $default  reduce using rule 43 (expr)


State 31

   41 expr: NUMBER .

    $default  reduce using rule 41 (expr)


State 32

   37 expr: MINUS . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 40


State 33

   23 expr: NOT . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 41


State 34

   36 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 42


State 35

    9 while_stmt: WHILE LP expr . RP statements
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    RP           shift, and go to state 43
    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    AND          shift, and go to state 51
    OR           shift, and go to state 52
    XOR          shift, and go to state 53
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    EQU          shift, and go to state 57
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61
    NEQ          shift, and go to state 62
    LOGICAL_AND  shift, and go to state 63
    LOGICAL_OR   shift, and go to state 64


State 36

   10 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 65


State 37

   12 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 66

    IDLIST  go to state 67


State 38

    3 statements: statements . statement
    5 statement: MAIN LP RP statements .

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    MAIN       shift, and go to state 8
    WHILE      shift, and go to state 9

    T_CHAR     [reduce using rule 5 (statement)]
    T_INT      [reduce using rule 5 (statement)]
    T_BOOL     [reduce using rule 5 (statement)]
    T_DOUBLE   [reduce using rule 5 (statement)]
    T_VOID     [reduce using rule 5 (statement)]
    SEMICOLON  [reduce using rule 5 (statement)]
    MAIN       [reduce using rule 5 (statement)]
    WHILE      [reduce using rule 5 (statement)]
    $default   reduce using rule 5 (statement)

    statement    go to state 20
    while_stmt   go to state 13
    declaration  go to state 14
    T            go to state 15


State 39

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr
   38     | LP expr . RP

    RP           shift, and go to state 68
    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    AND          shift, and go to state 51
    OR           shift, and go to state 52
    XOR          shift, and go to state 53
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    EQU          shift, and go to state 57
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61
    NEQ          shift, and go to state 62
    LOGICAL_AND  shift, and go to state 63
    LOGICAL_OR   shift, and go to state 64


State 40

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr
   37     | MINUS expr .

    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 41

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   23     | NOT expr .
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 23 (expr)]
    $default  reduce using rule 23 (expr)


State 42

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr
   36     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 43

    9 while_stmt: WHILE LP expr RP . statements

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    LB         shift, and go to state 7
    MAIN       shift, and go to state 8
    WHILE      shift, and go to state 9

    statements   go to state 69
    statement    go to state 12
    while_stmt   go to state 13
    declaration  go to state 14
    T            go to state 15


State 44

   14 expr: expr PLUS . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 70


State 45

   15 expr: expr MINUS . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 71


State 46

   16 expr: expr TIMES . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 72


State 47

   17 expr: expr OVER . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 73


State 48

   18 expr: expr MOD . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 74


State 49

   20 expr: expr PPLUS .

    $default  reduce using rule 20 (expr)


State 50

   19 expr: expr MMINUS .

    $default  reduce using rule 19 (expr)


State 51

   21 expr: expr AND . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 75


State 52

   22 expr: expr OR . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 76


State 53

   24 expr: expr XOR . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 77


State 54

   25 expr: expr SHIFT_LEFT . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 78


State 55

   26 expr: expr SHIFT_RIGHT . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 79


State 56

   27 expr: expr ASSIGN . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 80


State 57

   28 expr: expr EQU . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 81


State 58

   29 expr: expr GTR . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 82


State 59

   30 expr: expr LSS . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 83


State 60

   31 expr: expr GEQ . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 84


State 61

   32 expr: expr LEQ . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 85


State 62

   33 expr: expr NEQ . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 86


State 63

   34 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 87


State 64

   35 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 26
    IDENTIFIER   shift, and go to state 27
    INTEGER      shift, and go to state 28
    CHAR         shift, and go to state 29
    STRING       shift, and go to state 30
    NUMBER       shift, and go to state 31
    MINUS        shift, and go to state 32
    NOT          shift, and go to state 33
    LOGICAL_NOT  shift, and go to state 34

    expr  go to state 88


State 65

   10 declaration: T IDENTIFIER LOP_ASSIGN expr .
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    AND          shift, and go to state 51
    OR           shift, and go to state 52
    XOR          shift, and go to state 53
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    EQU          shift, and go to state 57
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61
    NEQ          shift, and go to state 62
    LOGICAL_AND  shift, and go to state 63
    LOGICAL_OR   shift, and go to state 64

    $default  reduce using rule 10 (declaration)


State 66

   12 IDLIST: IDENTIFIER . COMMA IDLIST
   13       | IDENTIFIER .

    COMMA  shift, and go to state 37

    $default  reduce using rule 13 (IDLIST)


State 67

   12 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 12 (IDLIST)


State 68

   38 expr: LP expr RP .

    $default  reduce using rule 38 (expr)


State 69

    3 statements: statements . statement
    9 while_stmt: WHILE LP expr RP statements .

    T_CHAR     shift, and go to state 1
    T_INT      shift, and go to state 2
    T_BOOL     shift, and go to state 3
    T_DOUBLE   shift, and go to state 4
    T_VOID     shift, and go to state 5
    SEMICOLON  shift, and go to state 6
    MAIN       shift, and go to state 8
    WHILE      shift, and go to state 9

    T_CHAR     [reduce using rule 9 (while_stmt)]
    T_INT      [reduce using rule 9 (while_stmt)]
    T_BOOL     [reduce using rule 9 (while_stmt)]
    T_DOUBLE   [reduce using rule 9 (while_stmt)]
    T_VOID     [reduce using rule 9 (while_stmt)]
    SEMICOLON  [reduce using rule 9 (while_stmt)]
    MAIN       [reduce using rule 9 (while_stmt)]
    WHILE      [reduce using rule 9 (while_stmt)]
    $default   reduce using rule 9 (while_stmt)

    statement    go to state 20
    while_stmt   go to state 13
    declaration  go to state 14
    T            go to state 15


State 70

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 46
    OVER    shift, and go to state 47
    MOD     shift, and go to state 48
    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 14 (expr)]
    $default  reduce using rule 14 (expr)


State 71

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 46
    OVER    shift, and go to state 47
    MOD     shift, and go to state 48
    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 15 (expr)]
    $default  reduce using rule 15 (expr)


State 72

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   16     | expr TIMES expr .
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 16 (expr)]
    $default  reduce using rule 16 (expr)


State 73

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   17     | expr OVER expr .
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 17 (expr)]
    $default  reduce using rule 17 (expr)


State 74

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   18     | expr MOD expr .
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 18 (expr)]
    $default  reduce using rule 18 (expr)


State 75

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   21     | expr AND expr .
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    EQU          shift, and go to state 57
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61
    NEQ          shift, and go to state 62

    ASSIGN    [reduce using rule 21 (expr)]
    $default  reduce using rule 21 (expr)


State 76

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   22     | expr OR expr .
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    AND          shift, and go to state 51
    XOR          shift, and go to state 53
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    EQU          shift, and go to state 57
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61
    NEQ          shift, and go to state 62

    ASSIGN    [reduce using rule 22 (expr)]
    $default  reduce using rule 22 (expr)


State 77

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   24     | expr XOR expr .
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    AND          shift, and go to state 51
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    EQU          shift, and go to state 57
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61
    NEQ          shift, and go to state 62

    ASSIGN    [reduce using rule 24 (expr)]
    $default  reduce using rule 24 (expr)


State 78

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   25     | expr SHIFT_LEFT expr .
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    OVER    shift, and go to state 47
    MOD     shift, and go to state 48
    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 25 (expr)]
    $default  reduce using rule 25 (expr)


State 79

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   26     | expr SHIFT_RIGHT expr .
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    TIMES   shift, and go to state 46
    OVER    shift, and go to state 47
    MOD     shift, and go to state 48
    PPLUS   shift, and go to state 49
    MMINUS  shift, and go to state 50
    ASSIGN  shift, and go to state 56

    ASSIGN    [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


State 80

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   27     | expr ASSIGN expr .
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    AND          shift, and go to state 51
    OR           shift, and go to state 52
    XOR          shift, and go to state 53
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    EQU          shift, and go to state 57
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61
    NEQ          shift, and go to state 62
    LOGICAL_AND  shift, and go to state 63
    LOGICAL_OR   shift, and go to state 64

    PLUS         [reduce using rule 27 (expr)]
    MINUS        [reduce using rule 27 (expr)]
    TIMES        [reduce using rule 27 (expr)]
    OVER         [reduce using rule 27 (expr)]
    MOD          [reduce using rule 27 (expr)]
    PPLUS        [reduce using rule 27 (expr)]
    MMINUS       [reduce using rule 27 (expr)]
    AND          [reduce using rule 27 (expr)]
    OR           [reduce using rule 27 (expr)]
    XOR          [reduce using rule 27 (expr)]
    SHIFT_LEFT   [reduce using rule 27 (expr)]
    SHIFT_RIGHT  [reduce using rule 27 (expr)]
    ASSIGN       [reduce using rule 27 (expr)]
    EQU          [reduce using rule 27 (expr)]
    GTR          [reduce using rule 27 (expr)]
    LSS          [reduce using rule 27 (expr)]
    GEQ          [reduce using rule 27 (expr)]
    LEQ          [reduce using rule 27 (expr)]
    NEQ          [reduce using rule 27 (expr)]
    LOGICAL_AND  [reduce using rule 27 (expr)]
    LOGICAL_OR   [reduce using rule 27 (expr)]
    $default     reduce using rule 27 (expr)


State 81

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   28     | expr EQU expr .
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61

    ASSIGN    [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


State 82

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   29     | expr GTR expr .
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56

    ASSIGN    [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


State 83

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   30     | expr LSS expr .
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56

    ASSIGN    [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 84

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   31     | expr GEQ expr .
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56

    ASSIGN    [reduce using rule 31 (expr)]
    $default  reduce using rule 31 (expr)


State 85

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   32     | expr LEQ expr .
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56

    ASSIGN    [reduce using rule 32 (expr)]
    $default  reduce using rule 32 (expr)


State 86

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   33     | expr NEQ expr .
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61

    ASSIGN    [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 87

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   34     | expr LOGICAL_AND expr .
   35     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    AND          shift, and go to state 51
    OR           shift, and go to state 52
    XOR          shift, and go to state 53
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    EQU          shift, and go to state 57
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61
    NEQ          shift, and go to state 62

    ASSIGN    [reduce using rule 34 (expr)]
    $default  reduce using rule 34 (expr)


State 88

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . TIMES expr
   17     | expr . OVER expr
   18     | expr . MOD expr
   19     | expr . MMINUS
   20     | expr . PPLUS
   21     | expr . AND expr
   22     | expr . OR expr
   24     | expr . XOR expr
   25     | expr . SHIFT_LEFT expr
   26     | expr . SHIFT_RIGHT expr
   27     | expr . ASSIGN expr
   28     | expr . EQU expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   31     | expr . GEQ expr
   32     | expr . LEQ expr
   33     | expr . NEQ expr
   34     | expr . LOGICAL_AND expr
   35     | expr . LOGICAL_OR expr
   35     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 44
    MINUS        shift, and go to state 45
    TIMES        shift, and go to state 46
    OVER         shift, and go to state 47
    MOD          shift, and go to state 48
    PPLUS        shift, and go to state 49
    MMINUS       shift, and go to state 50
    AND          shift, and go to state 51
    OR           shift, and go to state 52
    XOR          shift, and go to state 53
    SHIFT_LEFT   shift, and go to state 54
    SHIFT_RIGHT  shift, and go to state 55
    ASSIGN       shift, and go to state 56
    EQU          shift, and go to state 57
    GTR          shift, and go to state 58
    LSS          shift, and go to state 59
    GEQ          shift, and go to state 60
    LEQ          shift, and go to state 61
    NEQ          shift, and go to state 62
    LOGICAL_AND  shift, and go to state 63

    ASSIGN    [reduce using rule 35 (expr)]
    $default  reduce using rule 35 (expr)
