lno@0  @32  NODE PROG    children:[@5 @8 @31 ]
lno@26  @5  NODE STMT  STMT DECL  children:[@0 @1 @3 ]
lno@26  @0  NODE TYPE  int  children:[]
lno@26  @1  NODE VAR  var name: c  children:[]
lno@26  @3  NODE EXPR  OP: +  children:[@2 @4 ]
lno@26  @2  NODE CONST  int: 1  children:[]
lno@26  @4  NODE CONST  int: 1  children:[]
lno@30  @8  NODE STMT  STMT DECL  children:[@6 @7 ]
lno@30  @6  NODE TYPE  int  children:[]
lno@30  @7  NODE VAR  var name: a  children:[]
lno@30  @31  NODE STMT  STMT WHILE  children:[@16 @30 ]
lno@31  @16  NODE EXPR  OP: ||  children:[@12 @22 ]
lno@31  @12  NODE EXPR  OP: &&  children:[@10 @14 ]
lno@31  @10  NODE EXPR  OP: >  children:[@9 @11 ]
lno@31  @9  NODE VAR  var name: a  children:[]
lno@31  @11  NODE CONST  int: 0  children:[]
lno@31  @14  NODE EXPR  OP: <=  children:[@13 @15 ]
lno@31  @13  NODE VAR  var name: a  children:[]
lno@31  @15  NODE CONST  int: 10  children:[]
lno@31  @22  NODE EXPR  OP: &&  children:[@20 @25 ]
lno@31  @20  NODE EXPR  OP: ==  children:[@18 @21 ]
lno@31  @18  NODE EXPR  OP: %  children:[@17 @19 ]
lno@31  @17  NODE VAR  var name: a  children:[]
lno@31  @19  NODE CONST  int: 100  children:[]
lno@31  @21  NODE CONST  int: 10  children:[]
lno@31  @25  NODE EXPR  OP: ==  children:[@23 @26 ]
lno@31  @23  NODE EXPR  OP: !  children:[@24 ]
lno@31  @24  NODE VAR  var name: a  children:[]
lno@31  @26  NODE CONST  int: 10  children:[]
lno@32  @30  NODE STMT  STMT DECL  children:[@27 @28 @29 ]
lno@32  @27  NODE TYPE  int  children:[]
lno@32  @28  NODE VAR  var name: c  children:[]
lno@32  @29  NODE CONST  int: 0  children:[]
