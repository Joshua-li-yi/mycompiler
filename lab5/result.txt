lno@0  @0  NODE PROG    children:[@1 @5 @8 @17 @26 @28 @32 @36 ]
lno@35  @1  NODE STMT  STMT DECL  children:[@2 @3 @4 ]
lno@35  @2  NODE TYPE  int  children:[]
lno@35  @3  NODE VAR  var name: c  children:[]
lno@35  @4  NODE CONST  int: 1  children:[]
lno@36  @5  NODE STMT  STMT FUN DECL  children:[@6 @7 ]
lno@36  @6  NODE TYPE  int  children:[]
lno@36  @7  NODE VAR  var name: f  children:[]
lno@37  @8  NODE STMT  STMT FUN DECL  children:[@9 @10 @11 @14 ]
lno@37  @9  NODE TYPE  void  children:[]
lno@37  @10  NODE VAR  var name: f2  children:[]
lno@37  @11  NODE STMT  STMT DECL  children:[@12 @13 ]
lno@37  @12  NODE TYPE  int  children:[]
lno@37  @13  NODE VAR  var name: a  children:[]
lno@37  @14  NODE STMT  STMT DECL  children:[@15 @16 ]
lno@37  @15  NODE TYPE  &  children:[]
lno@37  @16  NODE VAR  var name: b  children:[]
lno@39  @17  NODE STMT  STMT FUN DEF  children:[@18 @19 @20 ]
lno@39  @18  NODE TYPE  int  children:[]
lno@39  @19  NODE VAR  var name: f  children:[]
lno@39  @20  NODE STMT  STMT DOMAIN  children:[@21 @24 @25 ]
lno@40  @21  NODE STMT  STMT DECL  children:[@22 @23 ]
lno@40  @22  NODE TYPE  int  children:[]
lno@40  @23  NODE VAR  var name: m  children:[]
lno@41  @24  NODE STMT  STMT RETURN  children:[]
lno@41  @25  NODE CONST  int: 1  children:[]
lno@45  @26  NODE STMT  STMT FUN CALL  children:[@27 ]
lno@45  @27  NODE VAR  var name: f  children:[]
lno@46  @28  NODE STMT  STMT DECL  children:[@29 @30 @31 ]
lno@46  @29  NODE TYPE  int  children:[]
lno@46  @30  NODE VAR  var name: m  children:[]
lno@46  @31  NODE VAR  var name: n  children:[]
lno@47  @32  NODE STMT  STMT FUN CALL  children:[@33 @34 @35 ]
lno@47  @33  NODE VAR  var name: f2  children:[]
lno@47  @34  NODE VAR  var name: m  children:[]
lno@47  @35  NODE VAR  var name: n  children:[]
lno@48  @36  main    children:[@37 @38 ]
lno@48  @37  NODE TYPE  void  children:[]
lno@48  @38  NODE STMT  STMT DOMAIN  children:[@39 @43 @46 @49 @52 ]
lno@49  @39  NODE STMT  STMT DECL  children:[@40 @41 @42 ]
lno@49  @40  NODE TYPE  int  children:[]
lno@49  @41  NODE VAR  var name: a  children:[]
lno@49  @42  NODE VAR  var name: s  children:[]
lno@50  @43  NODE STMT  =  children:[@44 @45 ]
lno@50  @44  NODE VAR  var name: a  children:[]
lno@50  @45  NODE CONST  int: 10  children:[]
lno@51  @46  NODE STMT  =  children:[@47 @48 ]
lno@51  @47  NODE VAR  var name: s  children:[]
lno@51  @48  NODE CONST  int: 0  children:[]
lno@52  @49  NODE STMT  STMT DECL  children:[@50 @51 ]
lno@52  @50  NODE TYPE  char  children:[]
lno@52  @51  NODE VAR  var name: ch  children:[]
lno@52  @52  NODE STMT  STMT WHILE  children:[@53 ]
lno@52  @53  NODE STMT  STMT DOMAIN  children:[@54 @72 ]
lno@53  @54  NODE EXPR  OP: ||  children:[@55 @62 ]
lno@53  @55  NODE EXPR  OP: &&  children:[@56 @59 ]
lno@53  @56  NODE EXPR  OP: >  children:[@57 @58 ]
lno@53  @57  NODE VAR  var name: a  children:[]
lno@53  @58  NODE CONST  int: 0  children:[]
lno@53  @59  NODE EXPR  OP: <=  children:[@60 @61 ]
lno@53  @60  NODE VAR  var name: a  children:[]
lno@53  @61  NODE CONST  int: 10  children:[]
lno@53  @62  NODE EXPR  OP: &&  children:[@63 @68 ]
lno@53  @63  NODE EXPR  OP: ==  children:[@64 @67 ]
lno@53  @64  NODE EXPR  OP: %  children:[@65 @66 ]
lno@53  @65  NODE VAR  var name: a  children:[]
lno@53  @66  NODE CONST  int: 100  children:[]
lno@53  @67  NODE CONST  int: 10  children:[]
lno@53  @68  NODE EXPR  OP: ==  children:[@69 @71 ]
lno@53  @69  NODE EXPR  OP: !  children:[@70 ]
lno@53  @70  NODE VAR  var name: a  children:[]
lno@53  @71  NODE CONST  int: 10  children:[]
lno@55  @72  NODE STMT  -=  children:[@73 @74 ]
lno@55  @73  NODE VAR  var name: a  children:[]
lno@55  @74  NODE CONST  int: 1  children:[]

a, 41 b, 16 c, 3 ch, 51 m, 30 n, 31 s, 42 