lno@0  @29  NODE PROG    children:[@5 @17 @22 @25 @28 ]
lno@6  @5  NODE STMT  STMT DECL  children:[@0 @1 @3 ]
lno@6  @0  NODE TYPE  int  children:[]
lno@6  @1  NODE VAR  var name: c  children:[]
lno@6  @3  NODE EXPR  OP: +  children:[@2 @4 ]
lno@6  @2  NODE CONST  int: 1  children:[]
lno@6  @4  NODE CONST  int: 1  children:[]
lno@6  @17  NODE STMT  STMT IF  children:[@7 @12 @16 ]
lno@7  @7  NODE EXPR  OP: >  children:[@6 @8 ]
lno@7  @6  NODE CONST  int: 1  children:[]
lno@7  @8  NODE CONST  int: 1  children:[]
lno@9  @12  NODE STMT  STMT DECL  children:[@9 @10 @11 ]
lno@9  @9  NODE TYPE  int  children:[]
lno@9  @10  NODE VAR  var name: c  children:[]
lno@9  @11  NODE CONST  int: 2  children:[]
lno@11  @16  NODE STMT  STMT DECL  children:[@13 @14 @15 ]
lno@11  @13  NODE TYPE  bool  children:[]
lno@11  @14  NODE VAR  var name: a  children:[]
lno@11  @15  NODE CONST  int: 1  children:[]
lno@11  @22  NODE STMT  STMT ELSE  children:[@21 ]
lno@15  @21  NODE STMT  STMT DECL  children:[@18 @19 @20 ]
lno@15  @18  NODE TYPE  int  children:[]
lno@15  @19  NODE VAR  var name: n  children:[]
lno@15  @20  NODE CONST  int: 0  children:[]
lno@23  @25  NODE STMT  STMT DECL  children:[@23 @24 ]
lno@23  @23  NODE TYPE  int  children:[]
lno@23  @24  NODE VAR  var name: a  children:[]
lno@24  @28  NODE STMT  STMT ASSIGN  children:[@26 @27 ]
lno@24  @26  NODE VAR  var name: a  children:[]
lno@24  @27  NODE CONST  int: 1  children:[]
