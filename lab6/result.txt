lno@0  @0  NODE PROG    children:[@1 @6 ]
lno@39  @1  NODE STMT  STMT DECL  children:[@2 @3 @4 @5 ]
lno@39  @2  NODE TYPE  int  children:[]
lno@39  @3  NODE VAR  var name: a  children:[]
lno@39  @4  NODE VAR  var name: b  children:[]
lno@39  @5  NODE VAR  var name: c  children:[]
lno@40  @6  main    children:[@7 @8 ]
lno@40  @7  NODE TYPE  int  children:[]
lno@40  @8  NODE STMT  STMT DOMAIN  children:[@9 ]
lno@40  @9  NODE STMT  STMT IF  children:[@10 @14 ]
lno@40  @10  NODE EXPR  OP: EXPR combine  children:[@11 ]
lno@42  @11  NODE EXPR  OP: ==  children:[@12 @13 ]
lno@42  @12  NODE VAR  var name: b  children:[]
lno@42  @13  NODE CONST  int: 0  children:[]
lno@40  @14  NODE STMT  STMT DOMAIN  children:[@15 ]
lno@44  @15  NODE STMT  =  children:[@16 @17 ]
lno@44  @16  NODE VAR  var name: a  children:[]
lno@44  @17  NODE EXPR  OP: EXPR combine  children:[@18 ]
lno@44  @18  NODE EXPR  OP: +  children:[@19 @22 ]
lno@44  @19  NODE EXPR  OP: *  children:[@20 @21 ]
lno@44  @20  NODE VAR  var name: b  children:[]
lno@44  @21  NODE VAR  var name: a  children:[]
lno@44  @22  NODE CONST  int: 1  children:[]

==========symbol table=======
name: a token: 3 type: -1
name: b token: 4 type: -1
name: c token: 5 type: -1
===========================
test: 1
test: 2
test: 4
test: 1111
	   Operator   	arg1	arg2	result
0	  VAR_DECL  	-	-	a	
1	  VAR_DECL  	-	-	b	
2	  VAR_DECL  	-	-	c	
3	  EQU  	b	0	t0	
4	    TIMES     	b	a	t0	
5	     PLUS     	t0	1	t0	
6	    ASSIGN    	t0	-	a	
