Terminals unused in grammar

   T_STRING
   BOOL
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ


State 17 conflicts: 14 shift/reduce
State 21 conflicts: 1 shift/reduce
State 182 conflicts: 2 reduce/reduce
State 215 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: T MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | for_stmt
   10          | function_declaration
   11          | function_definition
   12          | function_call
   13          | function_return
   14          | scanf_function
   15          | printf_function
   16          | declaration SEMICOLON
   17          | assignment_stmt
   18          | SEMICOLON

   19 scanf_function: SCANF LP function_call_idlist RP SEMICOLON
   20               | SCANF LP RP SEMICOLON

   21 printf_function: PRINTF LP function_call_idlist RP SEMICOLON
   22                | PRINTF LP RP SEMICOLON

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER LOP_ASSIGN IDENTIFIER LOP_ASSIGN expr SEMICOLON
   25                | IDENTIFIER PLUS_ASSIGN expr SEMICOLON
   26                | IDENTIFIER MIN_ASSIGN expr SEMICOLON
   27                | IDENTIFIER TIM_ASSIGN expr SEMICOLON
   28                | IDENTIFIER DIV_ASSIGN expr SEMICOLON
   29                | IDENTIFIER MOD_ASSIGN expr SEMICOLON

   30 else_stmt: ELSE statements

   31 if_stmt: IF LP expr RP statements

   32 if_else_stmt: if_stmt else_stmt

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   34         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR LP SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   36         | FOR LP expr SEMICOLON SEMICOLON expr RP statements
   37         | FOR LP expr SEMICOLON expr SEMICOLON RP statements
   38         | FOR LP SEMICOLON SEMICOLON expr RP statements
   39         | FOR LP SEMICOLON expr SEMICOLON RP statements
   40         | FOR LP expr SEMICOLON SEMICOLON RP statements
   41         | FOR LP SEMICOLON SEMICOLON RP statements

   42 while_stmt: WHILE LP expr RP statements

   43 declaration: T IDENTIFIER LOP_ASSIGN expr
   44            | T IDLIST
   45            | T

   46 IDLIST: IDENTIFIER COMMA IDLIST
   47       | IDENTIFIER

   48 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr
   49                        | T IDENTIFIER
   50                        | T
   51                        | T IDENTIFIER LOP_ASSIGN NEW T LP expr RP

   52 function_declaration_idlist: function_declaration_id
   53                            | function_declaration_id COMMA function_declaration_idlist

   54 function_return: RETURN SEMICOLON
   55                | RETURN expr SEMICOLON

   56 function_definition_id: T IDENTIFIER LOP_ASSIGN expr
   57                       | T IDENTIFIER

   58 function_definition_idlist: function_definition_id
   59                           | function_definition_id COMMA function_definition_idlist

   60 function_declaration: T IDENTIFIER LP function_declaration_idlist RP SEMICOLON
   61                     | T IDENTIFIER LP RP SEMICOLON

   62 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements RB
   63                    | T IDENTIFIER LP RP LB statements RB

   64 function_call_id: expr

   65 function_call_idlist: function_call_id
   66                     | function_call_id COMMA function_call_idlist

   67 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON
   68              | IDENTIFIER LP RP SEMICOLON

   69 expr: expr PLUS expr
   70     | expr MINUS expr
   71     | expr TIMES expr
   72     | expr DIVIDE expr
   73     | expr MOD expr
   74     | expr MMINUS
   75     | expr PPLUS
   76     | expr AND expr
   77     | expr OR expr
   78     | NOT expr
   79     | expr EQU expr
   80     | expr GTR expr
   81     | expr LSS expr
   82     | expr GEQ expr
   83     | expr LEQ expr
   84     | expr NEQ expr
   85     | expr LOGICAL_AND expr
   86     | expr LOGICAL_OR expr
   87     | LOGICAL_NOT expr
   88     | MINUS expr
   89     | LP expr RP
   90     | IDENTIFIER
   91     | INTEGER
   92     | NUMBER
   93     | CHAR
   94     | STRING
   95     | AND IDENTIFIER
   96     | TIMES IDENTIFIER

   97 T: T_INT
   98  | T_CHAR
   99  | T_BOOL
  100  | T_DOUBLE
  101  | T_VOID
  102  | T TIMES
  103  | T AND


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 98
T_INT (259) 97
T_STRING (260)
T_BOOL (261) 99
T_DOUBLE (262) 100
T_VOID (263) 101
LOP_ASSIGN (264) 23 24 33 35 43 48 51 56
PLUS_ASSIGN (265) 25
MIN_ASSIGN (266) 26
TIM_ASSIGN (267) 27
DIV_ASSIGN (268) 28
MOD_ASSIGN (269) 29
SEMICOLON (270) 16 18 19 20 21 22 23 24 25 26 27 28 29 33 34 35 36
    37 38 39 40 41 54 55 60 61 67 68
LB (271) 4 62 63
RB (272) 4 62 63
COMMA (273) 46 53 59 66
LP (274) 5 19 20 21 22 31 33 34 35 36 37 38 39 40 41 42 51 60 61 62
    63 67 68 89
RP (275) 5 19 20 21 22 31 33 34 35 36 37 38 39 40 41 42 51 60 61 62
    63 67 68 89
IDENTIFIER (276) 23 24 25 26 27 28 29 33 35 43 46 47 48 49 51 56 57
    60 61 62 63 67 68 90 95 96
INTEGER (277) 91
CHAR (278) 93
BOOL (279)
STRING (280) 94
NUMBER (281) 92
PLUS (282) 69
MINUS (283) 70 88
TIMES (284) 71 96 102
DIVIDE (285) 72
MOD (286) 73
PPLUS (287) 75
MMINUS (288) 74
AND (289) 76 95 103
OR (290) 77
NOT (291) 78
EQU (292) 79
GTR (293) 80
LSS (294) 81
GEQ (295) 82
LEQ (296) 83
NEQ (297) 84
LOGICAL_AND (298) 85
LOGICAL_OR (299) 86
LOGICAL_NOT (300) 87
UMINUS (301)
FOR (302) 33 34 35 36 37 38 39 40 41
INPUT (303)
OUTPUT (304)
DO (305)
MAIN (306) 5
IF (307) 31
ELSE (308) 30
WHILE (309) 42
RETURN (310) 54 55
SCANF (311) 19 20
PRINTF (312) 21 22
NEW (313) 51
EOL (314)
LOP_EQ (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3 4, on right: 1 3 4 5 30 31 33 34 35 36 37 38 39 40
    41 42 62 63
statement (64)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2 3
scanf_function (65)
    on left: 19 20, on right: 14
printf_function (66)
    on left: 21 22, on right: 15
assignment_stmt (67)
    on left: 23 24 25 26 27 28 29, on right: 17
else_stmt (68)
    on left: 30, on right: 32
if_stmt (69)
    on left: 31, on right: 7 32
if_else_stmt (70)
    on left: 32, on right: 8
for_stmt (71)
    on left: 33 34 35 36 37 38 39 40 41, on right: 9
while_stmt (72)
    on left: 42, on right: 6
declaration (73)
    on left: 43 44 45, on right: 16
IDLIST (74)
    on left: 46 47, on right: 44 46
function_declaration_id (75)
    on left: 48 49 50 51, on right: 52 53
function_declaration_idlist (76)
    on left: 52 53, on right: 53 60
function_return (77)
    on left: 54 55, on right: 13
function_definition_id (78)
    on left: 56 57, on right: 58 59
function_definition_idlist (79)
    on left: 58 59, on right: 59 62
function_declaration (80)
    on left: 60 61, on right: 10
function_definition (81)
    on left: 62 63, on right: 11
function_call_id (82)
    on left: 64, on right: 65 66
function_call_idlist (83)
    on left: 65 66, on right: 19 21 66 67
function_call (84)
    on left: 67 68, on right: 12
expr (85)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
    87 88 89 90 91 92 93 94 95 96, on right: 23 24 25 26 27 28 29 31
    33 34 35 36 37 38 39 40 42 43 48 51 55 56 64 69 70 71 72 73 74
    75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
T (86)
    on left: 97 98 99 100 101 102 103, on right: 5 43 44 45 48 49 50
    51 56 57 60 61 62 63 102 103


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    program               go to state 15
    statements            go to state 16
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 1

   98 T: T_CHAR .

    $default  reduce using rule 98 (T)


State 2

   97 T: T_INT .

    $default  reduce using rule 97 (T)


State 3

   99 T: T_BOOL .

    $default  reduce using rule 99 (T)


State 4

  100 T: T_DOUBLE .

    $default  reduce using rule 100 (T)


State 5

  101 T: T_VOID .

    $default  reduce using rule 101 (T)


State 6

   18 statement: SEMICOLON .

    $default  reduce using rule 18 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 31
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 8

   23 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER . LOP_ASSIGN IDENTIFIER LOP_ASSIGN expr SEMICOLON
   25                | IDENTIFIER . PLUS_ASSIGN expr SEMICOLON
   26                | IDENTIFIER . MIN_ASSIGN expr SEMICOLON
   27                | IDENTIFIER . TIM_ASSIGN expr SEMICOLON
   28                | IDENTIFIER . DIV_ASSIGN expr SEMICOLON
   29                | IDENTIFIER . MOD_ASSIGN expr SEMICOLON
   67 function_call: IDENTIFIER . LP function_call_idlist RP SEMICOLON
   68              | IDENTIFIER . LP RP SEMICOLON

    LOP_ASSIGN   shift, and go to state 32
    PLUS_ASSIGN  shift, and go to state 33
    MIN_ASSIGN   shift, and go to state 34
    TIM_ASSIGN   shift, and go to state 35
    DIV_ASSIGN   shift, and go to state 36
    MOD_ASSIGN   shift, and go to state 37
    LP           shift, and go to state 38


State 9

   33 for_stmt: FOR . LP IDENTIFIER LOP_ASSIGN expr SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   34         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR . LP SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   36         | FOR . LP expr SEMICOLON SEMICOLON expr RP statements
   37         | FOR . LP expr SEMICOLON expr SEMICOLON RP statements
   38         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   39         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   40         | FOR . LP expr SEMICOLON SEMICOLON RP statements
   41         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  shift, and go to state 39


State 10

   31 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 40


State 11

   42 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 41


State 12

   54 function_return: RETURN . SEMICOLON
   55                | RETURN . expr SEMICOLON

    SEMICOLON    shift, and go to state 42
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 54


State 13

   19 scanf_function: SCANF . LP function_call_idlist RP SEMICOLON
   20               | SCANF . LP RP SEMICOLON

    LP  shift, and go to state 55


State 14

   21 printf_function: PRINTF . LP function_call_idlist RP SEMICOLON
   22                | PRINTF . LP RP SEMICOLON

    LP  shift, and go to state 56


State 15

    0 $accept: program . $end

    $end  shift, and go to state 57


State 16

    1 program: statements .

    $default  reduce using rule 1 (program)


State 17

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    RETURN      [reduce using rule 2 (statements)]
    SCANF       [reduce using rule 2 (statements)]
    PRINTF      [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements            go to state 58
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 18

   14 statement: scanf_function .

    $default  reduce using rule 14 (statement)


State 19

   15 statement: printf_function .

    $default  reduce using rule 15 (statement)


State 20

   17 statement: assignment_stmt .

    $default  reduce using rule 17 (statement)


State 21

    7 statement: if_stmt .
   32 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 59

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 60


State 22

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 23

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 24

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 25

   16 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 26

   13 statement: function_return .

    $default  reduce using rule 13 (statement)


State 27

   10 statement: function_declaration .

    $default  reduce using rule 10 (statement)


State 28

   11 statement: function_definition .

    $default  reduce using rule 11 (statement)


State 29

   12 statement: function_call .

    $default  reduce using rule 12 (statement)


State 30

    5 statement: T . MAIN LP RP statements
   43 declaration: T . IDENTIFIER LOP_ASSIGN expr
   44            | T . IDLIST
   45            | T .
   60 function_declaration: T . IDENTIFIER LP function_declaration_idlist RP SEMICOLON
   61                     | T . IDENTIFIER LP RP SEMICOLON
   62 function_definition: T . IDENTIFIER LP function_definition_idlist RP LB statements RB
   63                    | T . IDENTIFIER LP RP LB statements RB
  102 T: T . TIMES
  103  | T . AND

    IDENTIFIER  shift, and go to state 62
    TIMES       shift, and go to state 63
    AND         shift, and go to state 64
    MAIN        shift, and go to state 65

    $default  reduce using rule 45 (declaration)

    IDLIST  go to state 66


State 31

    4 statements: LB statements . RB

    RB  shift, and go to state 67


State 32

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON
   24                | IDENTIFIER LOP_ASSIGN . IDENTIFIER LOP_ASSIGN expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 68
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 69


State 33

   25 assignment_stmt: IDENTIFIER PLUS_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 70


State 34

   26 assignment_stmt: IDENTIFIER MIN_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 71


State 35

   27 assignment_stmt: IDENTIFIER TIM_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 72


State 36

   28 assignment_stmt: IDENTIFIER DIV_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 73


State 37

   29 assignment_stmt: IDENTIFIER MOD_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 74


State 38

   67 function_call: IDENTIFIER LP . function_call_idlist RP SEMICOLON
   68              | IDENTIFIER LP . RP SEMICOLON

    LP           shift, and go to state 43
    RP           shift, and go to state 75
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    function_call_id      go to state 76
    function_call_idlist  go to state 77
    expr                  go to state 78


State 39

   33 for_stmt: FOR LP . IDENTIFIER LOP_ASSIGN expr SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   34         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR LP . SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   36         | FOR LP . expr SEMICOLON SEMICOLON expr RP statements
   37         | FOR LP . expr SEMICOLON expr SEMICOLON RP statements
   38         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   39         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   40         | FOR LP . expr SEMICOLON SEMICOLON RP statements
   41         | FOR LP . SEMICOLON SEMICOLON RP statements

    SEMICOLON    shift, and go to state 79
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 80
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 81


State 40

   31 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 82


State 41

   42 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 83


State 42

   54 function_return: RETURN SEMICOLON .

    $default  reduce using rule 54 (function_return)


State 43

   89 expr: LP . expr RP

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 84


State 44

   90 expr: IDENTIFIER .

    $default  reduce using rule 90 (expr)


State 45

   91 expr: INTEGER .

    $default  reduce using rule 91 (expr)


State 46

   93 expr: CHAR .

    $default  reduce using rule 93 (expr)


State 47

   94 expr: STRING .

    $default  reduce using rule 94 (expr)


State 48

   92 expr: NUMBER .

    $default  reduce using rule 92 (expr)


State 49

   88 expr: MINUS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 85


State 50

   96 expr: TIMES . IDENTIFIER

    IDENTIFIER  shift, and go to state 86


State 51

   95 expr: AND . IDENTIFIER

    IDENTIFIER  shift, and go to state 87


State 52

   78 expr: NOT . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 88


State 53

   87 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 89


State 54

   55 function_return: RETURN expr . SEMICOLON
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 90
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 55

   19 scanf_function: SCANF LP . function_call_idlist RP SEMICOLON
   20               | SCANF LP . RP SEMICOLON

    LP           shift, and go to state 43
    RP           shift, and go to state 108
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    function_call_id      go to state 76
    function_call_idlist  go to state 109
    expr                  go to state 78


State 56

   21 printf_function: PRINTF LP . function_call_idlist RP SEMICOLON
   22                | PRINTF LP . RP SEMICOLON

    LP           shift, and go to state 43
    RP           shift, and go to state 110
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    function_call_id      go to state 76
    function_call_idlist  go to state 111
    expr                  go to state 78


State 57

    0 $accept: program $end .

    $default  accept


State 58

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 59

   30 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 112
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 60

   32 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 32 (if_else_stmt)


State 61

   16 statement: declaration SEMICOLON .

    $default  reduce using rule 16 (statement)


State 62

   43 declaration: T IDENTIFIER . LOP_ASSIGN expr
   46 IDLIST: IDENTIFIER . COMMA IDLIST
   47       | IDENTIFIER .
   60 function_declaration: T IDENTIFIER . LP function_declaration_idlist RP SEMICOLON
   61                     | T IDENTIFIER . LP RP SEMICOLON
   62 function_definition: T IDENTIFIER . LP function_definition_idlist RP LB statements RB
   63                    | T IDENTIFIER . LP RP LB statements RB

    LOP_ASSIGN  shift, and go to state 113
    COMMA       shift, and go to state 114
    LP          shift, and go to state 115

    $default  reduce using rule 47 (IDLIST)


State 63

  102 T: T TIMES .

    $default  reduce using rule 102 (T)


State 64

  103 T: T AND .

    $default  reduce using rule 103 (T)


State 65

    5 statement: T MAIN . LP RP statements

    LP  shift, and go to state 116


State 66

   44 declaration: T IDLIST .

    $default  reduce using rule 44 (declaration)


State 67

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 68

   24 assignment_stmt: IDENTIFIER LOP_ASSIGN IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   90 expr: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 117

    $default  reduce using rule 90 (expr)


State 69

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 118
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 70

   25 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr . SEMICOLON
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 119
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 71

   26 assignment_stmt: IDENTIFIER MIN_ASSIGN expr . SEMICOLON
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 120
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 72

   27 assignment_stmt: IDENTIFIER TIM_ASSIGN expr . SEMICOLON
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 121
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 73

   28 assignment_stmt: IDENTIFIER DIV_ASSIGN expr . SEMICOLON
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 122
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 74

   29 assignment_stmt: IDENTIFIER MOD_ASSIGN expr . SEMICOLON
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 123
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 75

   68 function_call: IDENTIFIER LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 76

   65 function_call_idlist: function_call_id .
   66                     | function_call_id . COMMA function_call_idlist

    COMMA  shift, and go to state 125

    $default  reduce using rule 65 (function_call_idlist)


State 77

   67 function_call: IDENTIFIER LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 126


State 78

   64 function_call_id: expr .
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    $default  reduce using rule 64 (function_call_id)


State 79

   34 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   35         | FOR LP SEMICOLON . expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   38         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   39         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   41         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 127
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 128


State 80

   33 for_stmt: FOR LP IDENTIFIER . LOP_ASSIGN expr SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   90 expr: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 129

    $default  reduce using rule 90 (expr)


State 81

   36 for_stmt: FOR LP expr . SEMICOLON SEMICOLON expr RP statements
   37         | FOR LP expr . SEMICOLON expr SEMICOLON RP statements
   40         | FOR LP expr . SEMICOLON SEMICOLON RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 130
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 82

   31 if_stmt: IF LP expr . RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 131
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 83

   42 while_stmt: WHILE LP expr . RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 132
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 84

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr
   89     | LP expr . RP

    RP           shift, and go to state 133
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 85

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr
   88     | MINUS expr .

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 88 (expr)


State 86

   96 expr: TIMES IDENTIFIER .

    $default  reduce using rule 96 (expr)


State 87

   95 expr: AND IDENTIFIER .

    $default  reduce using rule 95 (expr)


State 88

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   78     | NOT expr .
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 78 (expr)


State 89

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr
   87     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 87 (expr)


State 90

   55 function_return: RETURN expr SEMICOLON .

    $default  reduce using rule 55 (function_return)


State 91

   69 expr: expr PLUS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 134


State 92

   70 expr: expr MINUS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 135


State 93

   71 expr: expr TIMES . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 136


State 94

   72 expr: expr DIVIDE . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 137


State 95

   73 expr: expr MOD . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 138


State 96

   75 expr: expr PPLUS .

    $default  reduce using rule 75 (expr)


State 97

   74 expr: expr MMINUS .

    $default  reduce using rule 74 (expr)


State 98

   76 expr: expr AND . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 139


State 99

   77 expr: expr OR . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 140


State 100

   79 expr: expr EQU . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 141


State 101

   80 expr: expr GTR . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 142


State 102

   81 expr: expr LSS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 143


State 103

   82 expr: expr GEQ . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 144


State 104

   83 expr: expr LEQ . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 145


State 105

   84 expr: expr NEQ . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 146


State 106

   85 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 147


State 107

   86 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 148


State 108

   20 scanf_function: SCANF LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 149


State 109

   19 scanf_function: SCANF LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 150


State 110

   22 printf_function: PRINTF LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 151


State 111

   21 printf_function: PRINTF LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 152


State 112

   30 else_stmt: ELSE statements .

    $default  reduce using rule 30 (else_stmt)


State 113

   43 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 153


State 114

   46 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 154

    IDLIST  go to state 155


State 115

   60 function_declaration: T IDENTIFIER LP . function_declaration_idlist RP SEMICOLON
   61                     | T IDENTIFIER LP . RP SEMICOLON
   62 function_definition: T IDENTIFIER LP . function_definition_idlist RP LB statements RB
   63                    | T IDENTIFIER LP . RP LB statements RB

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5
    RP        shift, and go to state 156

    function_declaration_id      go to state 157
    function_declaration_idlist  go to state 158
    function_definition_id       go to state 159
    function_definition_idlist   go to state 160
    T                            go to state 161


State 116

    5 statement: T MAIN LP . RP statements

    RP  shift, and go to state 162


State 117

   24 assignment_stmt: IDENTIFIER LOP_ASSIGN IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 163


State 118

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 23 (assignment_stmt)


State 119

   25 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr SEMICOLON .

    $default  reduce using rule 25 (assignment_stmt)


State 120

   26 assignment_stmt: IDENTIFIER MIN_ASSIGN expr SEMICOLON .

    $default  reduce using rule 26 (assignment_stmt)


State 121

   27 assignment_stmt: IDENTIFIER TIM_ASSIGN expr SEMICOLON .

    $default  reduce using rule 27 (assignment_stmt)


State 122

   28 assignment_stmt: IDENTIFIER DIV_ASSIGN expr SEMICOLON .

    $default  reduce using rule 28 (assignment_stmt)


State 123

   29 assignment_stmt: IDENTIFIER MOD_ASSIGN expr SEMICOLON .

    $default  reduce using rule 29 (assignment_stmt)


State 124

   68 function_call: IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 68 (function_call)


State 125

   66 function_call_idlist: function_call_id COMMA . function_call_idlist

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    function_call_id      go to state 76
    function_call_idlist  go to state 164
    expr                  go to state 78


State 126

   67 function_call: IDENTIFIER LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 165


State 127

   38 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   41         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 166
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 167


State 128

   34 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   35         | FOR LP SEMICOLON expr . SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   39         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 168
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 129

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN . expr SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 169


State 130

   36 for_stmt: FOR LP expr SEMICOLON . SEMICOLON expr RP statements
   37         | FOR LP expr SEMICOLON . expr SEMICOLON RP statements
   40         | FOR LP expr SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 170
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 171


State 131

   31 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 172
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 132

   42 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 173
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 133

   89 expr: LP expr RP .

    $default  reduce using rule 89 (expr)


State 134

   69 expr: expr . PLUS expr
   69     | expr PLUS expr .
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 69 (expr)


State 135

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   70     | expr MINUS expr .
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 70 (expr)


State 136

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   71     | expr TIMES expr .
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 71 (expr)


State 137

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   72     | expr DIVIDE expr .
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 72 (expr)


State 138

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   73     | expr MOD expr .
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 73 (expr)


State 139

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   76     | expr AND expr .
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    EQU     shift, and go to state 100
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104
    NEQ     shift, and go to state 105

    $default  reduce using rule 76 (expr)


State 140

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   77     | expr OR expr .
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    AND     shift, and go to state 98
    EQU     shift, and go to state 100
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104
    NEQ     shift, and go to state 105

    $default  reduce using rule 77 (expr)


State 141

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   79     | expr EQU expr .
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104

    $default  reduce using rule 79 (expr)


State 142

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   80     | expr GTR expr .
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 80 (expr)


State 143

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   81     | expr LSS expr .
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 81 (expr)


State 144

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   82     | expr GEQ expr .
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 82 (expr)


State 145

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   83     | expr LEQ expr .
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 83 (expr)


State 146

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   84     | expr NEQ expr .
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104

    $default  reduce using rule 84 (expr)


State 147

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   85     | expr LOGICAL_AND expr .
   86     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    AND     shift, and go to state 98
    OR      shift, and go to state 99
    EQU     shift, and go to state 100
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104
    NEQ     shift, and go to state 105

    $default  reduce using rule 85 (expr)


State 148

   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr
   86     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106

    $default  reduce using rule 86 (expr)


State 149

   20 scanf_function: SCANF LP RP SEMICOLON .

    $default  reduce using rule 20 (scanf_function)


State 150

   19 scanf_function: SCANF LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 174


State 151

   22 printf_function: PRINTF LP RP SEMICOLON .

    $default  reduce using rule 22 (printf_function)


State 152

   21 printf_function: PRINTF LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 175


State 153

   43 declaration: T IDENTIFIER LOP_ASSIGN expr .
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    $default  reduce using rule 43 (declaration)


State 154

   46 IDLIST: IDENTIFIER . COMMA IDLIST
   47       | IDENTIFIER .

    COMMA  shift, and go to state 114

    $default  reduce using rule 47 (IDLIST)


State 155

   46 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 46 (IDLIST)


State 156

   61 function_declaration: T IDENTIFIER LP RP . SEMICOLON
   63 function_definition: T IDENTIFIER LP RP . LB statements RB

    SEMICOLON  shift, and go to state 176
    LB         shift, and go to state 177


State 157

   52 function_declaration_idlist: function_declaration_id .
   53                            | function_declaration_id . COMMA function_declaration_idlist

    COMMA  shift, and go to state 178

    $default  reduce using rule 52 (function_declaration_idlist)


State 158

   60 function_declaration: T IDENTIFIER LP function_declaration_idlist . RP SEMICOLON

    RP  shift, and go to state 179


State 159

   58 function_definition_idlist: function_definition_id .
   59                           | function_definition_id . COMMA function_definition_idlist

    COMMA  shift, and go to state 180

    $default  reduce using rule 58 (function_definition_idlist)


State 160

   62 function_definition: T IDENTIFIER LP function_definition_idlist . RP LB statements RB

    RP  shift, and go to state 181


State 161

   48 function_declaration_id: T . IDENTIFIER LOP_ASSIGN expr
   49                        | T . IDENTIFIER
   50                        | T .
   51                        | T . IDENTIFIER LOP_ASSIGN NEW T LP expr RP
   56 function_definition_id: T . IDENTIFIER LOP_ASSIGN expr
   57                       | T . IDENTIFIER
  102 T: T . TIMES
  103  | T . AND

    IDENTIFIER  shift, and go to state 182
    TIMES       shift, and go to state 63
    AND         shift, and go to state 64

    $default  reduce using rule 50 (function_declaration_id)


State 162

    5 statement: T MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 183
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 163

   24 assignment_stmt: IDENTIFIER LOP_ASSIGN IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 184
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 164

   66 function_call_idlist: function_call_id COMMA function_call_idlist .

    $default  reduce using rule 66 (function_call_idlist)


State 165

   67 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 67 (function_call)


State 166

   41 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 185
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 167

   38 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 186
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 168

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   35         | FOR LP SEMICOLON expr SEMICOLON . IDENTIFIER LOP_ASSIGN expr RP statements
   39         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 187
    IDENTIFIER   shift, and go to state 188
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 189


State 169

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr . SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 190
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 170

   36 for_stmt: FOR LP expr SEMICOLON SEMICOLON . expr RP statements
   40         | FOR LP expr SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 191
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 192


State 171

   37 for_stmt: FOR LP expr SEMICOLON expr . SEMICOLON RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 193
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 172

   31 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 31 (if_stmt)


State 173

   42 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 42 (while_stmt)


State 174

   19 scanf_function: SCANF LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 19 (scanf_function)


State 175

   21 printf_function: PRINTF LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 21 (printf_function)


State 176

   61 function_declaration: T IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 61 (function_declaration)


State 177

   63 function_definition: T IDENTIFIER LP RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 194
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 178

   53 function_declaration_idlist: function_declaration_id COMMA . function_declaration_idlist

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    function_declaration_id      go to state 157
    function_declaration_idlist  go to state 195
    T                            go to state 196


State 179

   60 function_declaration: T IDENTIFIER LP function_declaration_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 197


State 180

   59 function_definition_idlist: function_definition_id COMMA . function_definition_idlist

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    function_definition_id      go to state 159
    function_definition_idlist  go to state 198
    T                           go to state 199


State 181

   62 function_definition: T IDENTIFIER LP function_definition_idlist RP . LB statements RB

    LB  shift, and go to state 200


State 182

   48 function_declaration_id: T IDENTIFIER . LOP_ASSIGN expr
   49                        | T IDENTIFIER .
   51                        | T IDENTIFIER . LOP_ASSIGN NEW T LP expr RP
   56 function_definition_id: T IDENTIFIER . LOP_ASSIGN expr
   57                       | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 201

    COMMA     reduce using rule 49 (function_declaration_id)
    COMMA     [reduce using rule 57 (function_definition_id)]
    RP        reduce using rule 49 (function_declaration_id)
    RP        [reduce using rule 57 (function_definition_id)]
    $default  reduce using rule 49 (function_declaration_id)


State 183

    5 statement: T MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 184

   24 assignment_stmt: IDENTIFIER LOP_ASSIGN IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 24 (assignment_stmt)


State 185

   41 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 41 (for_stmt)


State 186

   38 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 202
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 187

   39 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 203
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 188

   35 for_stmt: FOR LP SEMICOLON expr SEMICOLON IDENTIFIER . LOP_ASSIGN expr RP statements
   90 expr: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 204

    $default  reduce using rule 90 (expr)


State 189

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 205
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 190

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr SEMICOLON . expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 206


State 191

   40 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 207
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 192

   36 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr . RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 208
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 193

   37 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON . RP statements

    RP  shift, and go to state 209


State 194

   63 function_definition: T IDENTIFIER LP RP LB statements . RB

    RB  shift, and go to state 210


State 195

   53 function_declaration_idlist: function_declaration_id COMMA function_declaration_idlist .

    $default  reduce using rule 53 (function_declaration_idlist)


State 196

   48 function_declaration_id: T . IDENTIFIER LOP_ASSIGN expr
   49                        | T . IDENTIFIER
   50                        | T .
   51                        | T . IDENTIFIER LOP_ASSIGN NEW T LP expr RP
  102 T: T . TIMES
  103  | T . AND

    IDENTIFIER  shift, and go to state 211
    TIMES       shift, and go to state 63
    AND         shift, and go to state 64

    $default  reduce using rule 50 (function_declaration_id)


State 197

   60 function_declaration: T IDENTIFIER LP function_declaration_idlist RP SEMICOLON .

    $default  reduce using rule 60 (function_declaration)


State 198

   59 function_definition_idlist: function_definition_id COMMA function_definition_idlist .

    $default  reduce using rule 59 (function_definition_idlist)


State 199

   56 function_definition_id: T . IDENTIFIER LOP_ASSIGN expr
   57                       | T . IDENTIFIER
  102 T: T . TIMES
  103  | T . AND

    IDENTIFIER  shift, and go to state 212
    TIMES       shift, and go to state 63
    AND         shift, and go to state 64


State 200

   62 function_definition: T IDENTIFIER LP function_definition_idlist RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 213
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 201

   48 function_declaration_id: T IDENTIFIER LOP_ASSIGN . expr
   51                        | T IDENTIFIER LOP_ASSIGN . NEW T LP expr RP
   56 function_definition_id: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53
    NEW          shift, and go to state 214

    expr  go to state 215


State 202

   38 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 38 (for_stmt)


State 203

   39 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 39 (for_stmt)


State 204

   35 for_stmt: FOR LP SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN . expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 216


State 205

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 217
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 206

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr SEMICOLON expr . SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 218
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 207

   40 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 40 (for_stmt)


State 208

   36 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 219
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 209

   37 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 220
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 210

   63 function_definition: T IDENTIFIER LP RP LB statements RB .

    $default  reduce using rule 63 (function_definition)


State 211

   48 function_declaration_id: T IDENTIFIER . LOP_ASSIGN expr
   49                        | T IDENTIFIER .
   51                        | T IDENTIFIER . LOP_ASSIGN NEW T LP expr RP

    LOP_ASSIGN  shift, and go to state 221

    $default  reduce using rule 49 (function_declaration_id)


State 212

   56 function_definition_id: T IDENTIFIER . LOP_ASSIGN expr
   57                       | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 222

    $default  reduce using rule 57 (function_definition_id)


State 213

   62 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements . RB

    RB  shift, and go to state 223


State 214

   51 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW . T LP expr RP

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    T  go to state 224


State 215

   48 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr .
   56 function_definition_id: T IDENTIFIER LOP_ASSIGN expr .
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    COMMA     reduce using rule 48 (function_declaration_id)
    COMMA     [reduce using rule 56 (function_definition_id)]
    RP        reduce using rule 48 (function_declaration_id)
    RP        [reduce using rule 56 (function_definition_id)]
    $default  reduce using rule 48 (function_declaration_id)


State 216

   35 for_stmt: FOR LP SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr . RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 225
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 217

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 34 (for_stmt)


State 218

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr SEMICOLON expr SEMICOLON . IDENTIFIER LOP_ASSIGN expr RP statements

    IDENTIFIER  shift, and go to state 226


State 219

   36 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 36 (for_stmt)


State 220

   37 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 37 (for_stmt)


State 221

   48 function_declaration_id: T IDENTIFIER LOP_ASSIGN . expr
   51                        | T IDENTIFIER LOP_ASSIGN . NEW T LP expr RP

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53
    NEW          shift, and go to state 214

    expr  go to state 227


State 222

   56 function_definition_id: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 228


State 223

   62 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements RB .

    $default  reduce using rule 62 (function_definition)


State 224

   51 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T . LP expr RP
  102 T: T . TIMES
  103  | T . AND

    LP     shift, and go to state 229
    TIMES  shift, and go to state 63
    AND    shift, and go to state 64


State 225

   35 for_stmt: FOR LP SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 230
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 226

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr SEMICOLON expr SEMICOLON IDENTIFIER . LOP_ASSIGN expr RP statements

    LOP_ASSIGN  shift, and go to state 231


State 227

   48 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr .
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    $default  reduce using rule 48 (function_declaration_id)


State 228

   56 function_definition_id: T IDENTIFIER LOP_ASSIGN expr .
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    $default  reduce using rule 56 (function_definition_id)


State 229

   51 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T LP . expr RP

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 232


State 230

   35 for_stmt: FOR LP SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements .

    $default  reduce using rule 35 (for_stmt)


State 231

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN . expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 233


State 232

   51 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T LP expr . RP
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 234
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 233

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr . RP statements
   69 expr: expr . PLUS expr
   70     | expr . MINUS expr
   71     | expr . TIMES expr
   72     | expr . DIVIDE expr
   73     | expr . MOD expr
   74     | expr . MMINUS
   75     | expr . PPLUS
   76     | expr . AND expr
   77     | expr . OR expr
   79     | expr . EQU expr
   80     | expr . GTR expr
   81     | expr . LSS expr
   82     | expr . GEQ expr
   83     | expr . LEQ expr
   84     | expr . NEQ expr
   85     | expr . LOGICAL_AND expr
   86     | expr . LOGICAL_OR expr

    RP           shift, and go to state 235
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 234

   51 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T LP expr RP .

    $default  reduce using rule 51 (function_declaration_id)


State 235

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 236
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 236

   33 for_stmt: FOR LP IDENTIFIER LOP_ASSIGN expr SEMICOLON expr SEMICOLON IDENTIFIER LOP_ASSIGN expr RP statements .

    $default  reduce using rule 33 (for_stmt)
