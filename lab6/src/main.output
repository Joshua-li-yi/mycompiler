Terminals unused in grammar

   T_STRING
   BOOL
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ


State 17 conflicts: 14 shift/reduce
State 21 conflicts: 1 shift/reduce
State 181 conflicts: 2 reduce/reduce
State 212 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: T MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | for_stmt
   10          | function_declaration
   11          | function_definition
   12          | function_call
   13          | function_return
   14          | scanf_function
   15          | printf_function
   16          | declaration SEMICOLON
   17          | assignment_stmt
   18          | SEMICOLON

   19 scanf_function: SCANF LP function_call_idlist RP SEMICOLON
   20               | SCANF LP RP SEMICOLON

   21 printf_function: PRINTF LP function_call_idlist RP SEMICOLON
   22                | PRINTF LP RP SEMICOLON

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER PLUS_ASSIGN expr SEMICOLON
   25                | IDENTIFIER MIN_ASSIGN expr SEMICOLON
   26                | IDENTIFIER TIM_ASSIGN expr SEMICOLON
   27                | IDENTIFIER DIV_ASSIGN expr SEMICOLON
   28                | IDENTIFIER MOD_ASSIGN expr SEMICOLON

   29 else_stmt: ELSE statements

   30 if_stmt: IF LP expr RP statements

   31 if_else_stmt: if_stmt else_stmt

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements
   33         | FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements
   34         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR LP expr SEMICOLON SEMICOLON expr RP statements
   36         | FOR LP expr SEMICOLON expr SEMICOLON RP statements
   37         | FOR LP SEMICOLON SEMICOLON expr RP statements
   38         | FOR LP SEMICOLON expr SEMICOLON RP statements
   39         | FOR LP expr SEMICOLON SEMICOLON RP statements
   40         | FOR LP SEMICOLON SEMICOLON RP statements

   41 while_stmt: WHILE LP expr RP statements

   42 declaration: T IDENTIFIER LOP_ASSIGN expr
   43            | T IDLIST
   44            | T

   45 IDLIST: IDENTIFIER COMMA IDLIST
   46       | IDENTIFIER

   47 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr
   48                        | T IDENTIFIER
   49                        | T
   50                        | T IDENTIFIER LOP_ASSIGN NEW T LP expr RP

   51 function_declaration_idlist: function_declaration_id
   52                            | function_declaration_id COMMA function_declaration_idlist

   53 function_return: RETURN SEMICOLON
   54                | RETURN expr SEMICOLON

   55 function_definition_id: T IDENTIFIER LOP_ASSIGN expr
   56                       | T IDENTIFIER

   57 function_definition_idlist: function_definition_id
   58                           | function_definition_id COMMA function_definition_idlist

   59 function_declaration: T IDENTIFIER LP function_declaration_idlist RP SEMICOLON
   60                     | T IDENTIFIER LP RP SEMICOLON

   61 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements RB
   62                    | T IDENTIFIER LP RP LB statements RB

   63 function_call_id: expr
   64                 | AND IDENTIFIER
   65                 | TIMES IDENTIFIER

   66 function_call_idlist: function_call_id
   67                     | function_call_id COMMA function_call_idlist

   68 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON
   69              | IDENTIFIER LP RP SEMICOLON

   70 expr: expr PLUS expr
   71     | expr MINUS expr
   72     | expr TIMES expr
   73     | expr DIVIDE expr
   74     | expr MOD expr
   75     | expr MMINUS
   76     | expr PPLUS
   77     | expr AND expr
   78     | expr OR expr
   79     | NOT expr
   80     | expr EQU expr
   81     | expr GTR expr
   82     | expr LSS expr
   83     | expr GEQ expr
   84     | expr LEQ expr
   85     | expr NEQ expr
   86     | expr LOGICAL_AND expr
   87     | expr LOGICAL_OR expr
   88     | LOGICAL_NOT expr
   89     | MINUS expr
   90     | LP expr RP
   91     | IDENTIFIER
   92     | INTEGER
   93     | NUMBER
   94     | CHAR
   95     | STRING

   96 T: T_INT
   97  | T_CHAR
   98  | T_BOOL
   99  | T_DOUBLE
  100  | T_VOID
  101  | T TIMES
  102  | T AND


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 97
T_INT (259) 96
T_STRING (260)
T_BOOL (261) 98
T_DOUBLE (262) 99
T_VOID (263) 100
LOP_ASSIGN (264) 23 42 47 50 55
PLUS_ASSIGN (265) 24
MIN_ASSIGN (266) 25
TIM_ASSIGN (267) 26
DIV_ASSIGN (268) 27
MOD_ASSIGN (269) 28
SEMICOLON (270) 16 18 19 20 21 22 23 24 25 26 27 28 32 33 34 35 36
    37 38 39 40 53 54 59 60 68 69
LB (271) 4 61 62
RB (272) 4 61 62
COMMA (273) 45 52 58 67
LP (274) 5 19 20 21 22 30 32 33 34 35 36 37 38 39 40 41 50 59 60 61
    62 68 69 90
RP (275) 5 19 20 21 22 30 32 33 34 35 36 37 38 39 40 41 50 59 60 61
    62 68 69 90
IDENTIFIER (276) 23 24 25 26 27 28 42 45 46 47 48 50 55 56 59 60 61
    62 64 65 68 69 91
INTEGER (277) 92
CHAR (278) 94
BOOL (279)
STRING (280) 95
NUMBER (281) 93
PLUS (282) 70
MINUS (283) 71 89
TIMES (284) 65 72 101
DIVIDE (285) 73
MOD (286) 74
PPLUS (287) 76
MMINUS (288) 75
AND (289) 64 77 102
OR (290) 78
NOT (291) 79
EQU (292) 80
GTR (293) 81
LSS (294) 82
GEQ (295) 83
LEQ (296) 84
NEQ (297) 85
LOGICAL_AND (298) 86
LOGICAL_OR (299) 87
LOGICAL_NOT (300) 88
UMINUS (301)
FOR (302) 32 33 34 35 36 37 38 39 40
INPUT (303)
OUTPUT (304)
DO (305)
MAIN (306) 5
IF (307) 30
ELSE (308) 29
WHILE (309) 41
RETURN (310) 53 54
SCANF (311) 19 20
PRINTF (312) 21 22
NEW (313) 50
EOL (314)
LOP_EQ (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3 4, on right: 1 3 4 5 29 30 32 33 34 35 36 37 38 39
    40 41 61 62
statement (64)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2 3
scanf_function (65)
    on left: 19 20, on right: 14
printf_function (66)
    on left: 21 22, on right: 15
assignment_stmt (67)
    on left: 23 24 25 26 27 28, on right: 17
else_stmt (68)
    on left: 29, on right: 31
if_stmt (69)
    on left: 30, on right: 7 31
if_else_stmt (70)
    on left: 31, on right: 8
for_stmt (71)
    on left: 32 33 34 35 36 37 38 39 40, on right: 9
while_stmt (72)
    on left: 41, on right: 6
declaration (73)
    on left: 42 43 44, on right: 16 33
IDLIST (74)
    on left: 45 46, on right: 43 45
function_declaration_id (75)
    on left: 47 48 49 50, on right: 51 52
function_declaration_idlist (76)
    on left: 51 52, on right: 52 59
function_return (77)
    on left: 53 54, on right: 13
function_definition_id (78)
    on left: 55 56, on right: 57 58
function_definition_idlist (79)
    on left: 57 58, on right: 58 61
function_declaration (80)
    on left: 59 60, on right: 10
function_definition (81)
    on left: 61 62, on right: 11
function_call_id (82)
    on left: 63 64 65, on right: 66 67
function_call_idlist (83)
    on left: 66 67, on right: 19 21 67 68
function_call (84)
    on left: 68 69, on right: 12
expr (85)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    88 89 90 91 92 93 94 95, on right: 23 24 25 26 27 28 30 32 33 34
    35 36 37 38 39 41 42 47 50 54 55 63 70 71 72 73 74 75 76 77 78
    79 80 81 82 83 84 85 86 87 88 89 90
T (86)
    on left: 96 97 98 99 100 101 102, on right: 5 42 43 44 47 48 49
    50 55 56 59 60 61 62 101 102


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    program               go to state 15
    statements            go to state 16
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 1

   97 T: T_CHAR .

    $default  reduce using rule 97 (T)


State 2

   96 T: T_INT .

    $default  reduce using rule 96 (T)


State 3

   98 T: T_BOOL .

    $default  reduce using rule 98 (T)


State 4

   99 T: T_DOUBLE .

    $default  reduce using rule 99 (T)


State 5

  100 T: T_VOID .

    $default  reduce using rule 100 (T)


State 6

   18 statement: SEMICOLON .

    $default  reduce using rule 18 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 31
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 8

   23 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER . PLUS_ASSIGN expr SEMICOLON
   25                | IDENTIFIER . MIN_ASSIGN expr SEMICOLON
   26                | IDENTIFIER . TIM_ASSIGN expr SEMICOLON
   27                | IDENTIFIER . DIV_ASSIGN expr SEMICOLON
   28                | IDENTIFIER . MOD_ASSIGN expr SEMICOLON
   68 function_call: IDENTIFIER . LP function_call_idlist RP SEMICOLON
   69              | IDENTIFIER . LP RP SEMICOLON

    LOP_ASSIGN   shift, and go to state 32
    PLUS_ASSIGN  shift, and go to state 33
    MIN_ASSIGN   shift, and go to state 34
    TIM_ASSIGN   shift, and go to state 35
    DIV_ASSIGN   shift, and go to state 36
    MOD_ASSIGN   shift, and go to state 37
    LP           shift, and go to state 38


State 9

   32 for_stmt: FOR . LP expr SEMICOLON expr SEMICOLON expr RP statements
   33         | FOR . LP declaration SEMICOLON expr SEMICOLON expr RP statements
   34         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR . LP expr SEMICOLON SEMICOLON expr RP statements
   36         | FOR . LP expr SEMICOLON expr SEMICOLON RP statements
   37         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   38         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   39         | FOR . LP expr SEMICOLON SEMICOLON RP statements
   40         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  shift, and go to state 39


State 10

   30 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 40


State 11

   41 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 41


State 12

   53 function_return: RETURN . SEMICOLON
   54                | RETURN . expr SEMICOLON

    SEMICOLON    shift, and go to state 42
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 52


State 13

   19 scanf_function: SCANF . LP function_call_idlist RP SEMICOLON
   20               | SCANF . LP RP SEMICOLON

    LP  shift, and go to state 53


State 14

   21 printf_function: PRINTF . LP function_call_idlist RP SEMICOLON
   22                | PRINTF . LP RP SEMICOLON

    LP  shift, and go to state 54


State 15

    0 $accept: program . $end

    $end  shift, and go to state 55


State 16

    1 program: statements .

    $default  reduce using rule 1 (program)


State 17

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    RETURN      [reduce using rule 2 (statements)]
    SCANF       [reduce using rule 2 (statements)]
    PRINTF      [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements            go to state 56
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 18

   14 statement: scanf_function .

    $default  reduce using rule 14 (statement)


State 19

   15 statement: printf_function .

    $default  reduce using rule 15 (statement)


State 20

   17 statement: assignment_stmt .

    $default  reduce using rule 17 (statement)


State 21

    7 statement: if_stmt .
   31 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 57

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 58


State 22

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 23

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 24

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 25

   16 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 59


State 26

   13 statement: function_return .

    $default  reduce using rule 13 (statement)


State 27

   10 statement: function_declaration .

    $default  reduce using rule 10 (statement)


State 28

   11 statement: function_definition .

    $default  reduce using rule 11 (statement)


State 29

   12 statement: function_call .

    $default  reduce using rule 12 (statement)


State 30

    5 statement: T . MAIN LP RP statements
   42 declaration: T . IDENTIFIER LOP_ASSIGN expr
   43            | T . IDLIST
   44            | T .
   59 function_declaration: T . IDENTIFIER LP function_declaration_idlist RP SEMICOLON
   60                     | T . IDENTIFIER LP RP SEMICOLON
   61 function_definition: T . IDENTIFIER LP function_definition_idlist RP LB statements RB
   62                    | T . IDENTIFIER LP RP LB statements RB
  101 T: T . TIMES
  102  | T . AND

    IDENTIFIER  shift, and go to state 60
    TIMES       shift, and go to state 61
    AND         shift, and go to state 62
    MAIN        shift, and go to state 63

    $default  reduce using rule 44 (declaration)

    IDLIST  go to state 64


State 31

    4 statements: LB statements . RB

    RB  shift, and go to state 65


State 32

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 66


State 33

   24 assignment_stmt: IDENTIFIER PLUS_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 67


State 34

   25 assignment_stmt: IDENTIFIER MIN_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 68


State 35

   26 assignment_stmt: IDENTIFIER TIM_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 69


State 36

   27 assignment_stmt: IDENTIFIER DIV_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 70


State 37

   28 assignment_stmt: IDENTIFIER MOD_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 71


State 38

   68 function_call: IDENTIFIER LP . function_call_idlist RP SEMICOLON
   69              | IDENTIFIER LP . RP SEMICOLON

    LP           shift, and go to state 43
    RP           shift, and go to state 72
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 73
    AND          shift, and go to state 74
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    function_call_id      go to state 75
    function_call_idlist  go to state 76
    expr                  go to state 77


State 39

   32 for_stmt: FOR LP . expr SEMICOLON expr SEMICOLON expr RP statements
   33         | FOR LP . declaration SEMICOLON expr SEMICOLON expr RP statements
   34         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR LP . expr SEMICOLON SEMICOLON expr RP statements
   36         | FOR LP . expr SEMICOLON expr SEMICOLON RP statements
   37         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   38         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   39         | FOR LP . expr SEMICOLON SEMICOLON RP statements
   40         | FOR LP . SEMICOLON SEMICOLON RP statements

    T_CHAR       shift, and go to state 1
    T_INT        shift, and go to state 2
    T_BOOL       shift, and go to state 3
    T_DOUBLE     shift, and go to state 4
    T_VOID       shift, and go to state 5
    SEMICOLON    shift, and go to state 78
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    declaration  go to state 79
    expr         go to state 80
    T            go to state 81


State 40

   30 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 82


State 41

   41 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 83


State 42

   53 function_return: RETURN SEMICOLON .

    $default  reduce using rule 53 (function_return)


State 43

   90 expr: LP . expr RP

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 84


State 44

   91 expr: IDENTIFIER .

    $default  reduce using rule 91 (expr)


State 45

   92 expr: INTEGER .

    $default  reduce using rule 92 (expr)


State 46

   94 expr: CHAR .

    $default  reduce using rule 94 (expr)


State 47

   95 expr: STRING .

    $default  reduce using rule 95 (expr)


State 48

   93 expr: NUMBER .

    $default  reduce using rule 93 (expr)


State 49

   89 expr: MINUS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 85


State 50

   79 expr: NOT . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 86


State 51

   88 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 87


State 52

   54 function_return: RETURN expr . SEMICOLON
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 88
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 53

   19 scanf_function: SCANF LP . function_call_idlist RP SEMICOLON
   20               | SCANF LP . RP SEMICOLON

    LP           shift, and go to state 43
    RP           shift, and go to state 106
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 73
    AND          shift, and go to state 74
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    function_call_id      go to state 75
    function_call_idlist  go to state 107
    expr                  go to state 77


State 54

   21 printf_function: PRINTF LP . function_call_idlist RP SEMICOLON
   22                | PRINTF LP . RP SEMICOLON

    LP           shift, and go to state 43
    RP           shift, and go to state 108
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 73
    AND          shift, and go to state 74
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    function_call_id      go to state 75
    function_call_idlist  go to state 109
    expr                  go to state 77


State 55

    0 $accept: program $end .

    $default  accept


State 56

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 57

   29 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 110
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 58

   31 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 31 (if_else_stmt)


State 59

   16 statement: declaration SEMICOLON .

    $default  reduce using rule 16 (statement)


State 60

   42 declaration: T IDENTIFIER . LOP_ASSIGN expr
   45 IDLIST: IDENTIFIER . COMMA IDLIST
   46       | IDENTIFIER .
   59 function_declaration: T IDENTIFIER . LP function_declaration_idlist RP SEMICOLON
   60                     | T IDENTIFIER . LP RP SEMICOLON
   61 function_definition: T IDENTIFIER . LP function_definition_idlist RP LB statements RB
   62                    | T IDENTIFIER . LP RP LB statements RB

    LOP_ASSIGN  shift, and go to state 111
    COMMA       shift, and go to state 112
    LP          shift, and go to state 113

    $default  reduce using rule 46 (IDLIST)


State 61

  101 T: T TIMES .

    $default  reduce using rule 101 (T)


State 62

  102 T: T AND .

    $default  reduce using rule 102 (T)


State 63

    5 statement: T MAIN . LP RP statements

    LP  shift, and go to state 114


State 64

   43 declaration: T IDLIST .

    $default  reduce using rule 43 (declaration)


State 65

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 66

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 115
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 67

   24 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr . SEMICOLON
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 116
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 68

   25 assignment_stmt: IDENTIFIER MIN_ASSIGN expr . SEMICOLON
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 117
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 69

   26 assignment_stmt: IDENTIFIER TIM_ASSIGN expr . SEMICOLON
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 118
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 70

   27 assignment_stmt: IDENTIFIER DIV_ASSIGN expr . SEMICOLON
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 119
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 71

   28 assignment_stmt: IDENTIFIER MOD_ASSIGN expr . SEMICOLON
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 120
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 72

   69 function_call: IDENTIFIER LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 73

   65 function_call_id: TIMES . IDENTIFIER

    IDENTIFIER  shift, and go to state 122


State 74

   64 function_call_id: AND . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


State 75

   66 function_call_idlist: function_call_id .
   67                     | function_call_id . COMMA function_call_idlist

    COMMA  shift, and go to state 124

    $default  reduce using rule 66 (function_call_idlist)


State 76

   68 function_call: IDENTIFIER LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 125


State 77

   63 function_call_id: expr .
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105

    $default  reduce using rule 63 (function_call_id)


State 78

   34 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   37         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   38         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   40         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 126
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 127


State 79

   33 for_stmt: FOR LP declaration . SEMICOLON expr SEMICOLON expr RP statements

    SEMICOLON  shift, and go to state 128


State 80

   32 for_stmt: FOR LP expr . SEMICOLON expr SEMICOLON expr RP statements
   35         | FOR LP expr . SEMICOLON SEMICOLON expr RP statements
   36         | FOR LP expr . SEMICOLON expr SEMICOLON RP statements
   39         | FOR LP expr . SEMICOLON SEMICOLON RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 129
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 81

   42 declaration: T . IDENTIFIER LOP_ASSIGN expr
   43            | T . IDLIST
   44            | T .
  101 T: T . TIMES
  102  | T . AND

    IDENTIFIER  shift, and go to state 130
    TIMES       shift, and go to state 61
    AND         shift, and go to state 62

    $default  reduce using rule 44 (declaration)

    IDLIST  go to state 64


State 82

   30 if_stmt: IF LP expr . RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    RP           shift, and go to state 131
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 83

   41 while_stmt: WHILE LP expr . RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    RP           shift, and go to state 132
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 84

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr
   90     | LP expr . RP

    RP           shift, and go to state 133
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 85

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr
   89     | MINUS expr .

    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 89 (expr)


State 86

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   79     | NOT expr .
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 79 (expr)


State 87

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr
   88     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 88 (expr)


State 88

   54 function_return: RETURN expr SEMICOLON .

    $default  reduce using rule 54 (function_return)


State 89

   70 expr: expr PLUS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 134


State 90

   71 expr: expr MINUS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 135


State 91

   72 expr: expr TIMES . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 136


State 92

   73 expr: expr DIVIDE . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 137


State 93

   74 expr: expr MOD . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 138


State 94

   76 expr: expr PPLUS .

    $default  reduce using rule 76 (expr)


State 95

   75 expr: expr MMINUS .

    $default  reduce using rule 75 (expr)


State 96

   77 expr: expr AND . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 139


State 97

   78 expr: expr OR . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 140


State 98

   80 expr: expr EQU . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 141


State 99

   81 expr: expr GTR . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 142


State 100

   82 expr: expr LSS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 143


State 101

   83 expr: expr GEQ . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 144


State 102

   84 expr: expr LEQ . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 145


State 103

   85 expr: expr NEQ . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 146


State 104

   86 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 147


State 105

   87 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 148


State 106

   20 scanf_function: SCANF LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 149


State 107

   19 scanf_function: SCANF LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 150


State 108

   22 printf_function: PRINTF LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 151


State 109

   21 printf_function: PRINTF LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 152


State 110

   29 else_stmt: ELSE statements .

    $default  reduce using rule 29 (else_stmt)


State 111

   42 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 153


State 112

   45 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 154

    IDLIST  go to state 155


State 113

   59 function_declaration: T IDENTIFIER LP . function_declaration_idlist RP SEMICOLON
   60                     | T IDENTIFIER LP . RP SEMICOLON
   61 function_definition: T IDENTIFIER LP . function_definition_idlist RP LB statements RB
   62                    | T IDENTIFIER LP . RP LB statements RB

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5
    RP        shift, and go to state 156

    function_declaration_id      go to state 157
    function_declaration_idlist  go to state 158
    function_definition_id       go to state 159
    function_definition_idlist   go to state 160
    T                            go to state 161


State 114

    5 statement: T MAIN LP . RP statements

    RP  shift, and go to state 162


State 115

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 23 (assignment_stmt)


State 116

   24 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr SEMICOLON .

    $default  reduce using rule 24 (assignment_stmt)


State 117

   25 assignment_stmt: IDENTIFIER MIN_ASSIGN expr SEMICOLON .

    $default  reduce using rule 25 (assignment_stmt)


State 118

   26 assignment_stmt: IDENTIFIER TIM_ASSIGN expr SEMICOLON .

    $default  reduce using rule 26 (assignment_stmt)


State 119

   27 assignment_stmt: IDENTIFIER DIV_ASSIGN expr SEMICOLON .

    $default  reduce using rule 27 (assignment_stmt)


State 120

   28 assignment_stmt: IDENTIFIER MOD_ASSIGN expr SEMICOLON .

    $default  reduce using rule 28 (assignment_stmt)


State 121

   69 function_call: IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 69 (function_call)


State 122

   65 function_call_id: TIMES IDENTIFIER .

    $default  reduce using rule 65 (function_call_id)


State 123

   64 function_call_id: AND IDENTIFIER .

    $default  reduce using rule 64 (function_call_id)


State 124

   67 function_call_idlist: function_call_id COMMA . function_call_idlist

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 73
    AND          shift, and go to state 74
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    function_call_id      go to state 75
    function_call_idlist  go to state 163
    expr                  go to state 77


State 125

   68 function_call: IDENTIFIER LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 164


State 126

   37 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   40         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 165
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 166


State 127

   34 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   38         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 167
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 128

   33 for_stmt: FOR LP declaration SEMICOLON . expr SEMICOLON expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 168


State 129

   32 for_stmt: FOR LP expr SEMICOLON . expr SEMICOLON expr RP statements
   35         | FOR LP expr SEMICOLON . SEMICOLON expr RP statements
   36         | FOR LP expr SEMICOLON . expr SEMICOLON RP statements
   39         | FOR LP expr SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 169
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 170


State 130

   42 declaration: T IDENTIFIER . LOP_ASSIGN expr
   45 IDLIST: IDENTIFIER . COMMA IDLIST
   46       | IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 111
    COMMA       shift, and go to state 112

    $default  reduce using rule 46 (IDLIST)


State 131

   30 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 171
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 132

   41 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 172
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 133

   90 expr: LP expr RP .

    $default  reduce using rule 90 (expr)


State 134

   70 expr: expr . PLUS expr
   70     | expr PLUS expr .
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 70 (expr)


State 135

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   71     | expr MINUS expr .
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 71 (expr)


State 136

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   72     | expr TIMES expr .
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 72 (expr)


State 137

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   73     | expr DIVIDE expr .
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 73 (expr)


State 138

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   74     | expr MOD expr .
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 74 (expr)


State 139

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   77     | expr AND expr .
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95
    EQU     shift, and go to state 98
    GTR     shift, and go to state 99
    LSS     shift, and go to state 100
    GEQ     shift, and go to state 101
    LEQ     shift, and go to state 102
    NEQ     shift, and go to state 103

    $default  reduce using rule 77 (expr)


State 140

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   78     | expr OR expr .
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95
    AND     shift, and go to state 96
    EQU     shift, and go to state 98
    GTR     shift, and go to state 99
    LSS     shift, and go to state 100
    GEQ     shift, and go to state 101
    LEQ     shift, and go to state 102
    NEQ     shift, and go to state 103

    $default  reduce using rule 78 (expr)


State 141

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   80     | expr EQU expr .
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95
    GTR     shift, and go to state 99
    LSS     shift, and go to state 100
    GEQ     shift, and go to state 101
    LEQ     shift, and go to state 102

    $default  reduce using rule 80 (expr)


State 142

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   81     | expr GTR expr .
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 81 (expr)


State 143

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   82     | expr LSS expr .
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 82 (expr)


State 144

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   83     | expr GEQ expr .
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 83 (expr)


State 145

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   84     | expr LEQ expr .
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95

    $default  reduce using rule 84 (expr)


State 146

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   85     | expr NEQ expr .
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95
    GTR     shift, and go to state 99
    LSS     shift, and go to state 100
    GEQ     shift, and go to state 101
    LEQ     shift, and go to state 102

    $default  reduce using rule 85 (expr)


State 147

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   86     | expr LOGICAL_AND expr .
   87     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 89
    MINUS   shift, and go to state 90
    TIMES   shift, and go to state 91
    DIVIDE  shift, and go to state 92
    MOD     shift, and go to state 93
    PPLUS   shift, and go to state 94
    MMINUS  shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97
    EQU     shift, and go to state 98
    GTR     shift, and go to state 99
    LSS     shift, and go to state 100
    GEQ     shift, and go to state 101
    LEQ     shift, and go to state 102
    NEQ     shift, and go to state 103

    $default  reduce using rule 86 (expr)


State 148

   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr
   87     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104

    $default  reduce using rule 87 (expr)


State 149

   20 scanf_function: SCANF LP RP SEMICOLON .

    $default  reduce using rule 20 (scanf_function)


State 150

   19 scanf_function: SCANF LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 173


State 151

   22 printf_function: PRINTF LP RP SEMICOLON .

    $default  reduce using rule 22 (printf_function)


State 152

   21 printf_function: PRINTF LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 174


State 153

   42 declaration: T IDENTIFIER LOP_ASSIGN expr .
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105

    $default  reduce using rule 42 (declaration)


State 154

   45 IDLIST: IDENTIFIER . COMMA IDLIST
   46       | IDENTIFIER .

    COMMA  shift, and go to state 112

    $default  reduce using rule 46 (IDLIST)


State 155

   45 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 45 (IDLIST)


State 156

   60 function_declaration: T IDENTIFIER LP RP . SEMICOLON
   62 function_definition: T IDENTIFIER LP RP . LB statements RB

    SEMICOLON  shift, and go to state 175
    LB         shift, and go to state 176


State 157

   51 function_declaration_idlist: function_declaration_id .
   52                            | function_declaration_id . COMMA function_declaration_idlist

    COMMA  shift, and go to state 177

    $default  reduce using rule 51 (function_declaration_idlist)


State 158

   59 function_declaration: T IDENTIFIER LP function_declaration_idlist . RP SEMICOLON

    RP  shift, and go to state 178


State 159

   57 function_definition_idlist: function_definition_id .
   58                           | function_definition_id . COMMA function_definition_idlist

    COMMA  shift, and go to state 179

    $default  reduce using rule 57 (function_definition_idlist)


State 160

   61 function_definition: T IDENTIFIER LP function_definition_idlist . RP LB statements RB

    RP  shift, and go to state 180


State 161

   47 function_declaration_id: T . IDENTIFIER LOP_ASSIGN expr
   48                        | T . IDENTIFIER
   49                        | T .
   50                        | T . IDENTIFIER LOP_ASSIGN NEW T LP expr RP
   55 function_definition_id: T . IDENTIFIER LOP_ASSIGN expr
   56                       | T . IDENTIFIER
  101 T: T . TIMES
  102  | T . AND

    IDENTIFIER  shift, and go to state 181
    TIMES       shift, and go to state 61
    AND         shift, and go to state 62

    $default  reduce using rule 49 (function_declaration_id)


State 162

    5 statement: T MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 182
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 163

   67 function_call_idlist: function_call_id COMMA function_call_idlist .

    $default  reduce using rule 67 (function_call_idlist)


State 164

   68 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 68 (function_call)


State 165

   40 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 183
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 166

   37 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    RP           shift, and go to state 184
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 167

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   38         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 185
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 186


State 168

   33 for_stmt: FOR LP declaration SEMICOLON expr . SEMICOLON expr RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 187
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 169

   35 for_stmt: FOR LP expr SEMICOLON SEMICOLON . expr RP statements
   39         | FOR LP expr SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 188
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 189


State 170

   32 for_stmt: FOR LP expr SEMICOLON expr . SEMICOLON expr RP statements
   36         | FOR LP expr SEMICOLON expr . SEMICOLON RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 190
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 171

   30 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 30 (if_stmt)


State 172

   41 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 41 (while_stmt)


State 173

   19 scanf_function: SCANF LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 19 (scanf_function)


State 174

   21 printf_function: PRINTF LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 21 (printf_function)


State 175

   60 function_declaration: T IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 60 (function_declaration)


State 176

   62 function_definition: T IDENTIFIER LP RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 191
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 177

   52 function_declaration_idlist: function_declaration_id COMMA . function_declaration_idlist

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    function_declaration_id      go to state 157
    function_declaration_idlist  go to state 192
    T                            go to state 193


State 178

   59 function_declaration: T IDENTIFIER LP function_declaration_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 194


State 179

   58 function_definition_idlist: function_definition_id COMMA . function_definition_idlist

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    function_definition_id      go to state 159
    function_definition_idlist  go to state 195
    T                           go to state 196


State 180

   61 function_definition: T IDENTIFIER LP function_definition_idlist RP . LB statements RB

    LB  shift, and go to state 197


State 181

   47 function_declaration_id: T IDENTIFIER . LOP_ASSIGN expr
   48                        | T IDENTIFIER .
   50                        | T IDENTIFIER . LOP_ASSIGN NEW T LP expr RP
   55 function_definition_id: T IDENTIFIER . LOP_ASSIGN expr
   56                       | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 198

    COMMA     reduce using rule 48 (function_declaration_id)
    COMMA     [reduce using rule 56 (function_definition_id)]
    RP        reduce using rule 48 (function_declaration_id)
    RP        [reduce using rule 56 (function_definition_id)]
    $default  reduce using rule 48 (function_declaration_id)


State 182

    5 statement: T MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 183

   40 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 40 (for_stmt)


State 184

   37 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 199
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 185

   38 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 200
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 186

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    RP           shift, and go to state 201
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 187

   33 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON . expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 202


State 188

   39 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 203
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 189

   35 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr . RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    RP           shift, and go to state 204
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 190

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON . expr RP statements
   36         | FOR LP expr SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 205
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 206


State 191

   62 function_definition: T IDENTIFIER LP RP LB statements . RB

    RB  shift, and go to state 207


State 192

   52 function_declaration_idlist: function_declaration_id COMMA function_declaration_idlist .

    $default  reduce using rule 52 (function_declaration_idlist)


State 193

   47 function_declaration_id: T . IDENTIFIER LOP_ASSIGN expr
   48                        | T . IDENTIFIER
   49                        | T .
   50                        | T . IDENTIFIER LOP_ASSIGN NEW T LP expr RP
  101 T: T . TIMES
  102  | T . AND

    IDENTIFIER  shift, and go to state 208
    TIMES       shift, and go to state 61
    AND         shift, and go to state 62

    $default  reduce using rule 49 (function_declaration_id)


State 194

   59 function_declaration: T IDENTIFIER LP function_declaration_idlist RP SEMICOLON .

    $default  reduce using rule 59 (function_declaration)


State 195

   58 function_definition_idlist: function_definition_id COMMA function_definition_idlist .

    $default  reduce using rule 58 (function_definition_idlist)


State 196

   55 function_definition_id: T . IDENTIFIER LOP_ASSIGN expr
   56                       | T . IDENTIFIER
  101 T: T . TIMES
  102  | T . AND

    IDENTIFIER  shift, and go to state 209
    TIMES       shift, and go to state 61
    AND         shift, and go to state 62


State 197

   61 function_definition: T IDENTIFIER LP function_definition_idlist RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 210
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 198

   47 function_declaration_id: T IDENTIFIER LOP_ASSIGN . expr
   50                        | T IDENTIFIER LOP_ASSIGN . NEW T LP expr RP
   55 function_definition_id: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51
    NEW          shift, and go to state 211

    expr  go to state 212


State 199

   37 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 37 (for_stmt)


State 200

   38 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 38 (for_stmt)


State 201

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 213
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 202

   33 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr . RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    RP           shift, and go to state 214
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 203

   39 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 39 (for_stmt)


State 204

   35 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 215
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 205

   36 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 216
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 206

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr . RP statements
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    RP           shift, and go to state 217
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 207

   62 function_definition: T IDENTIFIER LP RP LB statements RB .

    $default  reduce using rule 62 (function_definition)


State 208

   47 function_declaration_id: T IDENTIFIER . LOP_ASSIGN expr
   48                        | T IDENTIFIER .
   50                        | T IDENTIFIER . LOP_ASSIGN NEW T LP expr RP

    LOP_ASSIGN  shift, and go to state 218

    $default  reduce using rule 48 (function_declaration_id)


State 209

   55 function_definition_id: T IDENTIFIER . LOP_ASSIGN expr
   56                       | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 219

    $default  reduce using rule 56 (function_definition_id)


State 210

   61 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements . RB

    RB  shift, and go to state 220


State 211

   50 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW . T LP expr RP

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    T  go to state 221


State 212

   47 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr .
   55 function_definition_id: T IDENTIFIER LOP_ASSIGN expr .
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105

    COMMA     reduce using rule 47 (function_declaration_id)
    COMMA     [reduce using rule 55 (function_definition_id)]
    RP        reduce using rule 47 (function_declaration_id)
    RP        [reduce using rule 55 (function_definition_id)]
    $default  reduce using rule 47 (function_declaration_id)


State 213

   34 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 34 (for_stmt)


State 214

   33 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 222
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 215

   35 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 35 (for_stmt)


State 216

   36 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 36 (for_stmt)


State 217

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 223
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 218

   47 function_declaration_id: T IDENTIFIER LOP_ASSIGN . expr
   50                        | T IDENTIFIER LOP_ASSIGN . NEW T LP expr RP

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51
    NEW          shift, and go to state 211

    expr  go to state 224


State 219

   55 function_definition_id: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 225


State 220

   61 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements RB .

    $default  reduce using rule 61 (function_definition)


State 221

   50 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T . LP expr RP
  101 T: T . TIMES
  102  | T . AND

    LP     shift, and go to state 226
    TIMES  shift, and go to state 61
    AND    shift, and go to state 62


State 222

   33 for_stmt: FOR LP declaration SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 33 (for_stmt)


State 223

   32 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 32 (for_stmt)


State 224

   47 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr .
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105

    $default  reduce using rule 47 (function_declaration_id)


State 225

   55 function_definition_id: T IDENTIFIER LOP_ASSIGN expr .
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105

    $default  reduce using rule 55 (function_definition_id)


State 226

   50 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T LP . expr RP

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    NOT          shift, and go to state 50
    LOGICAL_NOT  shift, and go to state 51

    expr  go to state 227


State 227

   50 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T LP expr . RP
   70 expr: expr . PLUS expr
   71     | expr . MINUS expr
   72     | expr . TIMES expr
   73     | expr . DIVIDE expr
   74     | expr . MOD expr
   75     | expr . MMINUS
   76     | expr . PPLUS
   77     | expr . AND expr
   78     | expr . OR expr
   80     | expr . EQU expr
   81     | expr . GTR expr
   82     | expr . LSS expr
   83     | expr . GEQ expr
   84     | expr . LEQ expr
   85     | expr . NEQ expr
   86     | expr . LOGICAL_AND expr
   87     | expr . LOGICAL_OR expr

    RP           shift, and go to state 228
    PLUS         shift, and go to state 89
    MINUS        shift, and go to state 90
    TIMES        shift, and go to state 91
    DIVIDE       shift, and go to state 92
    MOD          shift, and go to state 93
    PPLUS        shift, and go to state 94
    MMINUS       shift, and go to state 95
    AND          shift, and go to state 96
    OR           shift, and go to state 97
    EQU          shift, and go to state 98
    GTR          shift, and go to state 99
    LSS          shift, and go to state 100
    GEQ          shift, and go to state 101
    LEQ          shift, and go to state 102
    NEQ          shift, and go to state 103
    LOGICAL_AND  shift, and go to state 104
    LOGICAL_OR   shift, and go to state 105


State 228

   50 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T LP expr RP .

    $default  reduce using rule 50 (function_declaration_id)
