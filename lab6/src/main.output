Terminals unused in grammar

   T_STRING
   BOOL
   INPUT
   OUTPUT
   DO
   EOL
   LOP_EQ


State 17 conflicts: 14 shift/reduce
State 21 conflicts: 1 shift/reduce
State 180 conflicts: 2 reduce/reduce
State 211 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statement statements
    4           | LB statements RB

    5 statement: T MAIN LP RP statements
    6          | while_stmt
    7          | if_stmt
    8          | if_else_stmt
    9          | for_stmt
   10          | function_declaration
   11          | function_definition
   12          | function_call
   13          | function_return
   14          | scanf_function
   15          | printf_function
   16          | declaration SEMICOLON
   17          | assignment_stmt
   18          | SEMICOLON

   19 scanf_function: SCANF LP function_call_idlist RP SEMICOLON
   20               | SCANF LP RP SEMICOLON

   21 printf_function: PRINTF LP function_call_idlist RP SEMICOLON
   22                | PRINTF LP RP SEMICOLON

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER PLUS_ASSIGN expr SEMICOLON
   25                | IDENTIFIER MIN_ASSIGN expr SEMICOLON
   26                | IDENTIFIER TIM_ASSIGN expr SEMICOLON
   27                | IDENTIFIER DIV_ASSIGN expr SEMICOLON
   28                | IDENTIFIER MOD_ASSIGN expr SEMICOLON

   29 else_stmt: ELSE statements

   30 if_stmt: IF LP expr RP statements

   31 if_else_stmt: if_stmt else_stmt

   32 for_stmt: FOR LP assignment_stmt SEMICOLON expr SEMICOLON assignment_stmt RP statements
   33         | FOR LP SEMICOLON expr SEMICOLON expr RP statements
   34         | FOR LP expr SEMICOLON SEMICOLON expr RP statements
   35         | FOR LP expr SEMICOLON expr SEMICOLON RP statements
   36         | FOR LP SEMICOLON SEMICOLON expr RP statements
   37         | FOR LP SEMICOLON expr SEMICOLON RP statements
   38         | FOR LP expr SEMICOLON SEMICOLON RP statements
   39         | FOR LP SEMICOLON SEMICOLON RP statements

   40 while_stmt: WHILE LP expr RP statements

   41 declaration: T IDENTIFIER LOP_ASSIGN expr
   42            | T IDLIST
   43            | T

   44 IDLIST: IDENTIFIER COMMA IDLIST
   45       | IDENTIFIER

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr
   47                        | T IDENTIFIER
   48                        | T
   49                        | T IDENTIFIER LOP_ASSIGN NEW T LP expr RP

   50 function_declaration_idlist: function_declaration_id
   51                            | function_declaration_id COMMA function_declaration_idlist

   52 function_return: RETURN SEMICOLON
   53                | RETURN expr SEMICOLON

   54 function_definition_id: T IDENTIFIER LOP_ASSIGN expr
   55                       | T IDENTIFIER

   56 function_definition_idlist: function_definition_id
   57                           | function_definition_id COMMA function_definition_idlist

   58 function_declaration: T IDENTIFIER LP function_declaration_idlist RP SEMICOLON
   59                     | T IDENTIFIER LP RP SEMICOLON

   60 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements RB
   61                    | T IDENTIFIER LP RP LB statements RB

   62 function_call_id: expr

   63 function_call_idlist: function_call_id
   64                     | function_call_id COMMA function_call_idlist

   65 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON
   66              | IDENTIFIER LP RP SEMICOLON

   67 expr: expr PLUS expr
   68     | expr MINUS expr
   69     | expr TIMES expr
   70     | expr DIVIDE expr
   71     | expr MOD expr
   72     | expr MMINUS
   73     | expr PPLUS
   74     | expr AND expr
   75     | expr OR expr
   76     | NOT expr
   77     | expr EQU expr
   78     | expr GTR expr
   79     | expr LSS expr
   80     | expr GEQ expr
   81     | expr LEQ expr
   82     | expr NEQ expr
   83     | expr LOGICAL_AND expr
   84     | expr LOGICAL_OR expr
   85     | LOGICAL_NOT expr
   86     | MINUS expr
   87     | LP expr RP
   88     | IDENTIFIER
   89     | INTEGER
   90     | NUMBER
   91     | CHAR
   92     | STRING
   93     | AND IDENTIFIER
   94     | TIMES IDENTIFIER

   95 T: T_INT
   96  | T_CHAR
   97  | T_BOOL
   98  | T_DOUBLE
   99  | T_VOID
  100  | T TIMES
  101  | T AND


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 96
T_INT (259) 95
T_STRING (260)
T_BOOL (261) 97
T_DOUBLE (262) 98
T_VOID (263) 99
LOP_ASSIGN (264) 23 41 46 49 54
PLUS_ASSIGN (265) 24
MIN_ASSIGN (266) 25
TIM_ASSIGN (267) 26
DIV_ASSIGN (268) 27
MOD_ASSIGN (269) 28
SEMICOLON (270) 16 18 19 20 21 22 23 24 25 26 27 28 32 33 34 35 36
    37 38 39 52 53 58 59 65 66
LB (271) 4 60 61
RB (272) 4 60 61
COMMA (273) 44 51 57 64
LP (274) 5 19 20 21 22 30 32 33 34 35 36 37 38 39 40 49 58 59 60 61
    65 66 87
RP (275) 5 19 20 21 22 30 32 33 34 35 36 37 38 39 40 49 58 59 60 61
    65 66 87
IDENTIFIER (276) 23 24 25 26 27 28 41 44 45 46 47 49 54 55 58 59 60
    61 65 66 88 93 94
INTEGER (277) 89
CHAR (278) 91
BOOL (279)
STRING (280) 92
NUMBER (281) 90
PLUS (282) 67
MINUS (283) 68 86
TIMES (284) 69 94 100
DIVIDE (285) 70
MOD (286) 71
PPLUS (287) 73
MMINUS (288) 72
AND (289) 74 93 101
OR (290) 75
NOT (291) 76
EQU (292) 77
GTR (293) 78
LSS (294) 79
GEQ (295) 80
LEQ (296) 81
NEQ (297) 82
LOGICAL_AND (298) 83
LOGICAL_OR (299) 84
LOGICAL_NOT (300) 85
UMINUS (301)
FOR (302) 32 33 34 35 36 37 38 39
INPUT (303)
OUTPUT (304)
DO (305)
MAIN (306) 5
IF (307) 30
ELSE (308) 29
WHILE (309) 40
RETURN (310) 52 53
SCANF (311) 19 20
PRINTF (312) 21 22
NEW (313) 49
EOL (314)
LOP_EQ (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
statements (63)
    on left: 2 3 4, on right: 1 3 4 5 29 30 32 33 34 35 36 37 38 39
    40 60 61
statement (64)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right: 2 3
scanf_function (65)
    on left: 19 20, on right: 14
printf_function (66)
    on left: 21 22, on right: 15
assignment_stmt (67)
    on left: 23 24 25 26 27 28, on right: 17 32
else_stmt (68)
    on left: 29, on right: 31
if_stmt (69)
    on left: 30, on right: 7 31
if_else_stmt (70)
    on left: 31, on right: 8
for_stmt (71)
    on left: 32 33 34 35 36 37 38 39, on right: 9
while_stmt (72)
    on left: 40, on right: 6
declaration (73)
    on left: 41 42 43, on right: 16
IDLIST (74)
    on left: 44 45, on right: 42 44
function_declaration_id (75)
    on left: 46 47 48 49, on right: 50 51
function_declaration_idlist (76)
    on left: 50 51, on right: 51 58
function_return (77)
    on left: 52 53, on right: 13
function_definition_id (78)
    on left: 54 55, on right: 56 57
function_definition_idlist (79)
    on left: 56 57, on right: 57 60
function_declaration (80)
    on left: 58 59, on right: 10
function_definition (81)
    on left: 60 61, on right: 11
function_call_id (82)
    on left: 62, on right: 63 64
function_call_idlist (83)
    on left: 63 64, on right: 19 21 64 65
function_call (84)
    on left: 65 66, on right: 12
expr (85)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
    85 86 87 88 89 90 91 92 93 94, on right: 23 24 25 26 27 28 30 32
    33 34 35 36 37 38 40 41 46 49 53 54 62 67 68 69 70 71 72 73 74
    75 76 77 78 79 80 81 82 83 84 85 86 87
T (86)
    on left: 95 96 97 98 99 100 101, on right: 5 41 42 43 46 47 48
    49 54 55 58 59 60 61 100 101


State 0

    0 $accept: . program $end

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    program               go to state 15
    statements            go to state 16
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 1

   96 T: T_CHAR .

    $default  reduce using rule 96 (T)


State 2

   95 T: T_INT .

    $default  reduce using rule 95 (T)


State 3

   97 T: T_BOOL .

    $default  reduce using rule 97 (T)


State 4

   98 T: T_DOUBLE .

    $default  reduce using rule 98 (T)


State 5

   99 T: T_VOID .

    $default  reduce using rule 99 (T)


State 6

   18 statement: SEMICOLON .

    $default  reduce using rule 18 (statement)


State 7

    4 statements: LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 31
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 8

   23 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER . PLUS_ASSIGN expr SEMICOLON
   25                | IDENTIFIER . MIN_ASSIGN expr SEMICOLON
   26                | IDENTIFIER . TIM_ASSIGN expr SEMICOLON
   27                | IDENTIFIER . DIV_ASSIGN expr SEMICOLON
   28                | IDENTIFIER . MOD_ASSIGN expr SEMICOLON
   65 function_call: IDENTIFIER . LP function_call_idlist RP SEMICOLON
   66              | IDENTIFIER . LP RP SEMICOLON

    LOP_ASSIGN   shift, and go to state 32
    PLUS_ASSIGN  shift, and go to state 33
    MIN_ASSIGN   shift, and go to state 34
    TIM_ASSIGN   shift, and go to state 35
    DIV_ASSIGN   shift, and go to state 36
    MOD_ASSIGN   shift, and go to state 37
    LP           shift, and go to state 38


State 9

   32 for_stmt: FOR . LP assignment_stmt SEMICOLON expr SEMICOLON assignment_stmt RP statements
   33         | FOR . LP SEMICOLON expr SEMICOLON expr RP statements
   34         | FOR . LP expr SEMICOLON SEMICOLON expr RP statements
   35         | FOR . LP expr SEMICOLON expr SEMICOLON RP statements
   36         | FOR . LP SEMICOLON SEMICOLON expr RP statements
   37         | FOR . LP SEMICOLON expr SEMICOLON RP statements
   38         | FOR . LP expr SEMICOLON SEMICOLON RP statements
   39         | FOR . LP SEMICOLON SEMICOLON RP statements

    LP  shift, and go to state 39


State 10

   30 if_stmt: IF . LP expr RP statements

    LP  shift, and go to state 40


State 11

   40 while_stmt: WHILE . LP expr RP statements

    LP  shift, and go to state 41


State 12

   52 function_return: RETURN . SEMICOLON
   53                | RETURN . expr SEMICOLON

    SEMICOLON    shift, and go to state 42
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 54


State 13

   19 scanf_function: SCANF . LP function_call_idlist RP SEMICOLON
   20               | SCANF . LP RP SEMICOLON

    LP  shift, and go to state 55


State 14

   21 printf_function: PRINTF . LP function_call_idlist RP SEMICOLON
   22                | PRINTF . LP RP SEMICOLON

    LP  shift, and go to state 56


State 15

    0 $accept: program . $end

    $end  shift, and go to state 57


State 16

    1 program: statements .

    $default  reduce using rule 1 (program)


State 17

    2 statements: statement .
    3           | statement . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    T_CHAR      [reduce using rule 2 (statements)]
    T_INT       [reduce using rule 2 (statements)]
    T_BOOL      [reduce using rule 2 (statements)]
    T_DOUBLE    [reduce using rule 2 (statements)]
    T_VOID      [reduce using rule 2 (statements)]
    SEMICOLON   [reduce using rule 2 (statements)]
    LB          [reduce using rule 2 (statements)]
    IDENTIFIER  [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    IF          [reduce using rule 2 (statements)]
    WHILE       [reduce using rule 2 (statements)]
    RETURN      [reduce using rule 2 (statements)]
    SCANF       [reduce using rule 2 (statements)]
    PRINTF      [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements            go to state 58
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 18

   14 statement: scanf_function .

    $default  reduce using rule 14 (statement)


State 19

   15 statement: printf_function .

    $default  reduce using rule 15 (statement)


State 20

   17 statement: assignment_stmt .

    $default  reduce using rule 17 (statement)


State 21

    7 statement: if_stmt .
   31 if_else_stmt: if_stmt . else_stmt

    ELSE  shift, and go to state 59

    ELSE      [reduce using rule 7 (statement)]
    $default  reduce using rule 7 (statement)

    else_stmt  go to state 60


State 22

    8 statement: if_else_stmt .

    $default  reduce using rule 8 (statement)


State 23

    9 statement: for_stmt .

    $default  reduce using rule 9 (statement)


State 24

    6 statement: while_stmt .

    $default  reduce using rule 6 (statement)


State 25

   16 statement: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 26

   13 statement: function_return .

    $default  reduce using rule 13 (statement)


State 27

   10 statement: function_declaration .

    $default  reduce using rule 10 (statement)


State 28

   11 statement: function_definition .

    $default  reduce using rule 11 (statement)


State 29

   12 statement: function_call .

    $default  reduce using rule 12 (statement)


State 30

    5 statement: T . MAIN LP RP statements
   41 declaration: T . IDENTIFIER LOP_ASSIGN expr
   42            | T . IDLIST
   43            | T .
   58 function_declaration: T . IDENTIFIER LP function_declaration_idlist RP SEMICOLON
   59                     | T . IDENTIFIER LP RP SEMICOLON
   60 function_definition: T . IDENTIFIER LP function_definition_idlist RP LB statements RB
   61                    | T . IDENTIFIER LP RP LB statements RB
  100 T: T . TIMES
  101  | T . AND

    IDENTIFIER  shift, and go to state 62
    TIMES       shift, and go to state 63
    AND         shift, and go to state 64
    MAIN        shift, and go to state 65

    $default  reduce using rule 43 (declaration)

    IDLIST  go to state 66


State 31

    4 statements: LB statements . RB

    RB  shift, and go to state 67


State 32

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 68


State 33

   24 assignment_stmt: IDENTIFIER PLUS_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 69


State 34

   25 assignment_stmt: IDENTIFIER MIN_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 70


State 35

   26 assignment_stmt: IDENTIFIER TIM_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 71


State 36

   27 assignment_stmt: IDENTIFIER DIV_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 72


State 37

   28 assignment_stmt: IDENTIFIER MOD_ASSIGN . expr SEMICOLON

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 73


State 38

   65 function_call: IDENTIFIER LP . function_call_idlist RP SEMICOLON
   66              | IDENTIFIER LP . RP SEMICOLON

    LP           shift, and go to state 43
    RP           shift, and go to state 74
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    function_call_id      go to state 75
    function_call_idlist  go to state 76
    expr                  go to state 77


State 39

   32 for_stmt: FOR LP . assignment_stmt SEMICOLON expr SEMICOLON assignment_stmt RP statements
   33         | FOR LP . SEMICOLON expr SEMICOLON expr RP statements
   34         | FOR LP . expr SEMICOLON SEMICOLON expr RP statements
   35         | FOR LP . expr SEMICOLON expr SEMICOLON RP statements
   36         | FOR LP . SEMICOLON SEMICOLON expr RP statements
   37         | FOR LP . SEMICOLON expr SEMICOLON RP statements
   38         | FOR LP . expr SEMICOLON SEMICOLON RP statements
   39         | FOR LP . SEMICOLON SEMICOLON RP statements

    SEMICOLON    shift, and go to state 78
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 79
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    assignment_stmt  go to state 80
    expr             go to state 81


State 40

   30 if_stmt: IF LP . expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 82


State 41

   40 while_stmt: WHILE LP . expr RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 83


State 42

   52 function_return: RETURN SEMICOLON .

    $default  reduce using rule 52 (function_return)


State 43

   87 expr: LP . expr RP

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 84


State 44

   88 expr: IDENTIFIER .

    $default  reduce using rule 88 (expr)


State 45

   89 expr: INTEGER .

    $default  reduce using rule 89 (expr)


State 46

   91 expr: CHAR .

    $default  reduce using rule 91 (expr)


State 47

   92 expr: STRING .

    $default  reduce using rule 92 (expr)


State 48

   90 expr: NUMBER .

    $default  reduce using rule 90 (expr)


State 49

   86 expr: MINUS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 85


State 50

   94 expr: TIMES . IDENTIFIER

    IDENTIFIER  shift, and go to state 86


State 51

   93 expr: AND . IDENTIFIER

    IDENTIFIER  shift, and go to state 87


State 52

   76 expr: NOT . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 88


State 53

   85 expr: LOGICAL_NOT . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 89


State 54

   53 function_return: RETURN expr . SEMICOLON
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 90
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 55

   19 scanf_function: SCANF LP . function_call_idlist RP SEMICOLON
   20               | SCANF LP . RP SEMICOLON

    LP           shift, and go to state 43
    RP           shift, and go to state 108
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    function_call_id      go to state 75
    function_call_idlist  go to state 109
    expr                  go to state 77


State 56

   21 printf_function: PRINTF LP . function_call_idlist RP SEMICOLON
   22                | PRINTF LP . RP SEMICOLON

    LP           shift, and go to state 43
    RP           shift, and go to state 110
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    function_call_id      go to state 75
    function_call_idlist  go to state 111
    expr                  go to state 77


State 57

    0 $accept: program $end .

    $default  accept


State 58

    3 statements: statement statements .

    $default  reduce using rule 3 (statements)


State 59

   29 else_stmt: ELSE . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 112
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 60

   31 if_else_stmt: if_stmt else_stmt .

    $default  reduce using rule 31 (if_else_stmt)


State 61

   16 statement: declaration SEMICOLON .

    $default  reduce using rule 16 (statement)


State 62

   41 declaration: T IDENTIFIER . LOP_ASSIGN expr
   44 IDLIST: IDENTIFIER . COMMA IDLIST
   45       | IDENTIFIER .
   58 function_declaration: T IDENTIFIER . LP function_declaration_idlist RP SEMICOLON
   59                     | T IDENTIFIER . LP RP SEMICOLON
   60 function_definition: T IDENTIFIER . LP function_definition_idlist RP LB statements RB
   61                    | T IDENTIFIER . LP RP LB statements RB

    LOP_ASSIGN  shift, and go to state 113
    COMMA       shift, and go to state 114
    LP          shift, and go to state 115

    $default  reduce using rule 45 (IDLIST)


State 63

  100 T: T TIMES .

    $default  reduce using rule 100 (T)


State 64

  101 T: T AND .

    $default  reduce using rule 101 (T)


State 65

    5 statement: T MAIN . LP RP statements

    LP  shift, and go to state 116


State 66

   42 declaration: T IDLIST .

    $default  reduce using rule 42 (declaration)


State 67

    4 statements: LB statements RB .

    $default  reduce using rule 4 (statements)


State 68

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 117
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 69

   24 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr . SEMICOLON
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 118
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 70

   25 assignment_stmt: IDENTIFIER MIN_ASSIGN expr . SEMICOLON
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 119
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 71

   26 assignment_stmt: IDENTIFIER TIM_ASSIGN expr . SEMICOLON
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 120
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 72

   27 assignment_stmt: IDENTIFIER DIV_ASSIGN expr . SEMICOLON
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 121
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 73

   28 assignment_stmt: IDENTIFIER MOD_ASSIGN expr . SEMICOLON
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 122
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 74

   66 function_call: IDENTIFIER LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 123


State 75

   63 function_call_idlist: function_call_id .
   64                     | function_call_id . COMMA function_call_idlist

    COMMA  shift, and go to state 124

    $default  reduce using rule 63 (function_call_idlist)


State 76

   65 function_call: IDENTIFIER LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 125


State 77

   62 function_call_id: expr .
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    $default  reduce using rule 62 (function_call_id)


State 78

   33 for_stmt: FOR LP SEMICOLON . expr SEMICOLON expr RP statements
   36         | FOR LP SEMICOLON . SEMICOLON expr RP statements
   37         | FOR LP SEMICOLON . expr SEMICOLON RP statements
   39         | FOR LP SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 126
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 127


State 79

   23 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER . PLUS_ASSIGN expr SEMICOLON
   25                | IDENTIFIER . MIN_ASSIGN expr SEMICOLON
   26                | IDENTIFIER . TIM_ASSIGN expr SEMICOLON
   27                | IDENTIFIER . DIV_ASSIGN expr SEMICOLON
   28                | IDENTIFIER . MOD_ASSIGN expr SEMICOLON
   88 expr: IDENTIFIER .

    LOP_ASSIGN   shift, and go to state 32
    PLUS_ASSIGN  shift, and go to state 33
    MIN_ASSIGN   shift, and go to state 34
    TIM_ASSIGN   shift, and go to state 35
    DIV_ASSIGN   shift, and go to state 36
    MOD_ASSIGN   shift, and go to state 37

    $default  reduce using rule 88 (expr)


State 80

   32 for_stmt: FOR LP assignment_stmt . SEMICOLON expr SEMICOLON assignment_stmt RP statements

    SEMICOLON  shift, and go to state 128


State 81

   34 for_stmt: FOR LP expr . SEMICOLON SEMICOLON expr RP statements
   35         | FOR LP expr . SEMICOLON expr SEMICOLON RP statements
   38         | FOR LP expr . SEMICOLON SEMICOLON RP statements
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 129
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 82

   30 if_stmt: IF LP expr . RP statements
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    RP           shift, and go to state 130
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 83

   40 while_stmt: WHILE LP expr . RP statements
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    RP           shift, and go to state 131
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 84

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr
   87     | LP expr . RP

    RP           shift, and go to state 132
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 85

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr
   86     | MINUS expr .

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 86 (expr)


State 86

   94 expr: TIMES IDENTIFIER .

    $default  reduce using rule 94 (expr)


State 87

   93 expr: AND IDENTIFIER .

    $default  reduce using rule 93 (expr)


State 88

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   76     | NOT expr .
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 76 (expr)


State 89

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr
   85     | LOGICAL_NOT expr .

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 85 (expr)


State 90

   53 function_return: RETURN expr SEMICOLON .

    $default  reduce using rule 53 (function_return)


State 91

   67 expr: expr PLUS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 133


State 92

   68 expr: expr MINUS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 134


State 93

   69 expr: expr TIMES . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 135


State 94

   70 expr: expr DIVIDE . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 136


State 95

   71 expr: expr MOD . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 137


State 96

   73 expr: expr PPLUS .

    $default  reduce using rule 73 (expr)


State 97

   72 expr: expr MMINUS .

    $default  reduce using rule 72 (expr)


State 98

   74 expr: expr AND . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 138


State 99

   75 expr: expr OR . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 139


State 100

   77 expr: expr EQU . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 140


State 101

   78 expr: expr GTR . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 141


State 102

   79 expr: expr LSS . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 142


State 103

   80 expr: expr GEQ . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 143


State 104

   81 expr: expr LEQ . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 144


State 105

   82 expr: expr NEQ . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 145


State 106

   83 expr: expr LOGICAL_AND . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 146


State 107

   84 expr: expr LOGICAL_OR . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 147


State 108

   20 scanf_function: SCANF LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 148


State 109

   19 scanf_function: SCANF LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 149


State 110

   22 printf_function: PRINTF LP RP . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 111

   21 printf_function: PRINTF LP function_call_idlist . RP SEMICOLON

    RP  shift, and go to state 151


State 112

   29 else_stmt: ELSE statements .

    $default  reduce using rule 29 (else_stmt)


State 113

   41 declaration: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 152


State 114

   44 IDLIST: IDENTIFIER COMMA . IDLIST

    IDENTIFIER  shift, and go to state 153

    IDLIST  go to state 154


State 115

   58 function_declaration: T IDENTIFIER LP . function_declaration_idlist RP SEMICOLON
   59                     | T IDENTIFIER LP . RP SEMICOLON
   60 function_definition: T IDENTIFIER LP . function_definition_idlist RP LB statements RB
   61                    | T IDENTIFIER LP . RP LB statements RB

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5
    RP        shift, and go to state 155

    function_declaration_id      go to state 156
    function_declaration_idlist  go to state 157
    function_definition_id       go to state 158
    function_definition_idlist   go to state 159
    T                            go to state 160


State 116

    5 statement: T MAIN LP . RP statements

    RP  shift, and go to state 161


State 117

   23 assignment_stmt: IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 23 (assignment_stmt)


State 118

   24 assignment_stmt: IDENTIFIER PLUS_ASSIGN expr SEMICOLON .

    $default  reduce using rule 24 (assignment_stmt)


State 119

   25 assignment_stmt: IDENTIFIER MIN_ASSIGN expr SEMICOLON .

    $default  reduce using rule 25 (assignment_stmt)


State 120

   26 assignment_stmt: IDENTIFIER TIM_ASSIGN expr SEMICOLON .

    $default  reduce using rule 26 (assignment_stmt)


State 121

   27 assignment_stmt: IDENTIFIER DIV_ASSIGN expr SEMICOLON .

    $default  reduce using rule 27 (assignment_stmt)


State 122

   28 assignment_stmt: IDENTIFIER MOD_ASSIGN expr SEMICOLON .

    $default  reduce using rule 28 (assignment_stmt)


State 123

   66 function_call: IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 66 (function_call)


State 124

   64 function_call_idlist: function_call_id COMMA . function_call_idlist

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    function_call_id      go to state 75
    function_call_idlist  go to state 162
    expr                  go to state 77


State 125

   65 function_call: IDENTIFIER LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 163


State 126

   36 for_stmt: FOR LP SEMICOLON SEMICOLON . expr RP statements
   39         | FOR LP SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 164
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 165


State 127

   33 for_stmt: FOR LP SEMICOLON expr . SEMICOLON expr RP statements
   37         | FOR LP SEMICOLON expr . SEMICOLON RP statements
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 166
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 128

   32 for_stmt: FOR LP assignment_stmt SEMICOLON . expr SEMICOLON assignment_stmt RP statements

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 167


State 129

   34 for_stmt: FOR LP expr SEMICOLON . SEMICOLON expr RP statements
   35         | FOR LP expr SEMICOLON . expr SEMICOLON RP statements
   38         | FOR LP expr SEMICOLON . SEMICOLON RP statements

    SEMICOLON    shift, and go to state 168
    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 169


State 130

   30 if_stmt: IF LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 170
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 131

   40 while_stmt: WHILE LP expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 171
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 132

   87 expr: LP expr RP .

    $default  reduce using rule 87 (expr)


State 133

   67 expr: expr . PLUS expr
   67     | expr PLUS expr .
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 67 (expr)


State 134

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   68     | expr MINUS expr .
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 68 (expr)


State 135

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   69     | expr TIMES expr .
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 69 (expr)


State 136

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   70     | expr DIVIDE expr .
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 70 (expr)


State 137

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   71     | expr MOD expr .
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 71 (expr)


State 138

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   74     | expr AND expr .
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    EQU     shift, and go to state 100
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104
    NEQ     shift, and go to state 105

    $default  reduce using rule 74 (expr)


State 139

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   75     | expr OR expr .
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    AND     shift, and go to state 98
    EQU     shift, and go to state 100
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104
    NEQ     shift, and go to state 105

    $default  reduce using rule 75 (expr)


State 140

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   77     | expr EQU expr .
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104

    $default  reduce using rule 77 (expr)


State 141

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   78     | expr GTR expr .
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 78 (expr)


State 142

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   79     | expr LSS expr .
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 79 (expr)


State 143

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   80     | expr GEQ expr .
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 80 (expr)


State 144

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   81     | expr LEQ expr .
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97

    $default  reduce using rule 81 (expr)


State 145

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   82     | expr NEQ expr .
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104

    $default  reduce using rule 82 (expr)


State 146

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   83     | expr LOGICAL_AND expr .
   84     | expr . LOGICAL_OR expr

    PLUS    shift, and go to state 91
    MINUS   shift, and go to state 92
    TIMES   shift, and go to state 93
    DIVIDE  shift, and go to state 94
    MOD     shift, and go to state 95
    PPLUS   shift, and go to state 96
    MMINUS  shift, and go to state 97
    AND     shift, and go to state 98
    OR      shift, and go to state 99
    EQU     shift, and go to state 100
    GTR     shift, and go to state 101
    LSS     shift, and go to state 102
    GEQ     shift, and go to state 103
    LEQ     shift, and go to state 104
    NEQ     shift, and go to state 105

    $default  reduce using rule 83 (expr)


State 147

   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr
   84     | expr LOGICAL_OR expr .

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106

    $default  reduce using rule 84 (expr)


State 148

   20 scanf_function: SCANF LP RP SEMICOLON .

    $default  reduce using rule 20 (scanf_function)


State 149

   19 scanf_function: SCANF LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 172


State 150

   22 printf_function: PRINTF LP RP SEMICOLON .

    $default  reduce using rule 22 (printf_function)


State 151

   21 printf_function: PRINTF LP function_call_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 173


State 152

   41 declaration: T IDENTIFIER LOP_ASSIGN expr .
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    $default  reduce using rule 41 (declaration)


State 153

   44 IDLIST: IDENTIFIER . COMMA IDLIST
   45       | IDENTIFIER .

    COMMA  shift, and go to state 114

    $default  reduce using rule 45 (IDLIST)


State 154

   44 IDLIST: IDENTIFIER COMMA IDLIST .

    $default  reduce using rule 44 (IDLIST)


State 155

   59 function_declaration: T IDENTIFIER LP RP . SEMICOLON
   61 function_definition: T IDENTIFIER LP RP . LB statements RB

    SEMICOLON  shift, and go to state 174
    LB         shift, and go to state 175


State 156

   50 function_declaration_idlist: function_declaration_id .
   51                            | function_declaration_id . COMMA function_declaration_idlist

    COMMA  shift, and go to state 176

    $default  reduce using rule 50 (function_declaration_idlist)


State 157

   58 function_declaration: T IDENTIFIER LP function_declaration_idlist . RP SEMICOLON

    RP  shift, and go to state 177


State 158

   56 function_definition_idlist: function_definition_id .
   57                           | function_definition_id . COMMA function_definition_idlist

    COMMA  shift, and go to state 178

    $default  reduce using rule 56 (function_definition_idlist)


State 159

   60 function_definition: T IDENTIFIER LP function_definition_idlist . RP LB statements RB

    RP  shift, and go to state 179


State 160

   46 function_declaration_id: T . IDENTIFIER LOP_ASSIGN expr
   47                        | T . IDENTIFIER
   48                        | T .
   49                        | T . IDENTIFIER LOP_ASSIGN NEW T LP expr RP
   54 function_definition_id: T . IDENTIFIER LOP_ASSIGN expr
   55                       | T . IDENTIFIER
  100 T: T . TIMES
  101  | T . AND

    IDENTIFIER  shift, and go to state 180
    TIMES       shift, and go to state 63
    AND         shift, and go to state 64

    $default  reduce using rule 48 (function_declaration_id)


State 161

    5 statement: T MAIN LP RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 181
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 162

   64 function_call_idlist: function_call_id COMMA function_call_idlist .

    $default  reduce using rule 64 (function_call_idlist)


State 163

   65 function_call: IDENTIFIER LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 65 (function_call)


State 164

   39 for_stmt: FOR LP SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 182
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 165

   36 for_stmt: FOR LP SEMICOLON SEMICOLON expr . RP statements
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    RP           shift, and go to state 183
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 166

   33 for_stmt: FOR LP SEMICOLON expr SEMICOLON . expr RP statements
   37         | FOR LP SEMICOLON expr SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 184
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 185


State 167

   32 for_stmt: FOR LP assignment_stmt SEMICOLON expr . SEMICOLON assignment_stmt RP statements
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 186
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 168

   34 for_stmt: FOR LP expr SEMICOLON SEMICOLON . expr RP statements
   38         | FOR LP expr SEMICOLON SEMICOLON . RP statements

    LP           shift, and go to state 43
    RP           shift, and go to state 187
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 188


State 169

   35 for_stmt: FOR LP expr SEMICOLON expr . SEMICOLON RP statements
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    SEMICOLON    shift, and go to state 189
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 170

   30 if_stmt: IF LP expr RP statements .

    $default  reduce using rule 30 (if_stmt)


State 171

   40 while_stmt: WHILE LP expr RP statements .

    $default  reduce using rule 40 (while_stmt)


State 172

   19 scanf_function: SCANF LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 19 (scanf_function)


State 173

   21 printf_function: PRINTF LP function_call_idlist RP SEMICOLON .

    $default  reduce using rule 21 (printf_function)


State 174

   59 function_declaration: T IDENTIFIER LP RP SEMICOLON .

    $default  reduce using rule 59 (function_declaration)


State 175

   61 function_definition: T IDENTIFIER LP RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 190
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 176

   51 function_declaration_idlist: function_declaration_id COMMA . function_declaration_idlist

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    function_declaration_id      go to state 156
    function_declaration_idlist  go to state 191
    T                            go to state 192


State 177

   58 function_declaration: T IDENTIFIER LP function_declaration_idlist RP . SEMICOLON

    SEMICOLON  shift, and go to state 193


State 178

   57 function_definition_idlist: function_definition_id COMMA . function_definition_idlist

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    function_definition_id      go to state 158
    function_definition_idlist  go to state 194
    T                           go to state 195


State 179

   60 function_definition: T IDENTIFIER LP function_definition_idlist RP . LB statements RB

    LB  shift, and go to state 196


State 180

   46 function_declaration_id: T IDENTIFIER . LOP_ASSIGN expr
   47                        | T IDENTIFIER .
   49                        | T IDENTIFIER . LOP_ASSIGN NEW T LP expr RP
   54 function_definition_id: T IDENTIFIER . LOP_ASSIGN expr
   55                       | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 197

    COMMA     reduce using rule 47 (function_declaration_id)
    COMMA     [reduce using rule 55 (function_definition_id)]
    RP        reduce using rule 47 (function_declaration_id)
    RP        [reduce using rule 55 (function_definition_id)]
    $default  reduce using rule 47 (function_declaration_id)


State 181

    5 statement: T MAIN LP RP statements .

    $default  reduce using rule 5 (statement)


State 182

   39 for_stmt: FOR LP SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 39 (for_stmt)


State 183

   36 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 198
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 184

   37 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 199
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 185

   33 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr . RP statements
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    RP           shift, and go to state 200
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 186

   32 for_stmt: FOR LP assignment_stmt SEMICOLON expr SEMICOLON . assignment_stmt RP statements

    IDENTIFIER  shift, and go to state 201

    assignment_stmt  go to state 202


State 187

   38 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 203
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 188

   34 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr . RP statements
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    RP           shift, and go to state 204
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 189

   35 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON . RP statements

    RP  shift, and go to state 205


State 190

   61 function_definition: T IDENTIFIER LP RP LB statements . RB

    RB  shift, and go to state 206


State 191

   51 function_declaration_idlist: function_declaration_id COMMA function_declaration_idlist .

    $default  reduce using rule 51 (function_declaration_idlist)


State 192

   46 function_declaration_id: T . IDENTIFIER LOP_ASSIGN expr
   47                        | T . IDENTIFIER
   48                        | T .
   49                        | T . IDENTIFIER LOP_ASSIGN NEW T LP expr RP
  100 T: T . TIMES
  101  | T . AND

    IDENTIFIER  shift, and go to state 207
    TIMES       shift, and go to state 63
    AND         shift, and go to state 64

    $default  reduce using rule 48 (function_declaration_id)


State 193

   58 function_declaration: T IDENTIFIER LP function_declaration_idlist RP SEMICOLON .

    $default  reduce using rule 58 (function_declaration)


State 194

   57 function_definition_idlist: function_definition_id COMMA function_definition_idlist .

    $default  reduce using rule 57 (function_definition_idlist)


State 195

   54 function_definition_id: T . IDENTIFIER LOP_ASSIGN expr
   55                       | T . IDENTIFIER
  100 T: T . TIMES
  101  | T . AND

    IDENTIFIER  shift, and go to state 208
    TIMES       shift, and go to state 63
    AND         shift, and go to state 64


State 196

   60 function_definition: T IDENTIFIER LP function_definition_idlist RP LB . statements RB

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 209
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 197

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN . expr
   49                        | T IDENTIFIER LOP_ASSIGN . NEW T LP expr RP
   54 function_definition_id: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53
    NEW          shift, and go to state 210

    expr  go to state 211


State 198

   36 for_stmt: FOR LP SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 36 (for_stmt)


State 199

   37 for_stmt: FOR LP SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 37 (for_stmt)


State 200

   33 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 212
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 201

   23 assignment_stmt: IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   24                | IDENTIFIER . PLUS_ASSIGN expr SEMICOLON
   25                | IDENTIFIER . MIN_ASSIGN expr SEMICOLON
   26                | IDENTIFIER . TIM_ASSIGN expr SEMICOLON
   27                | IDENTIFIER . DIV_ASSIGN expr SEMICOLON
   28                | IDENTIFIER . MOD_ASSIGN expr SEMICOLON

    LOP_ASSIGN   shift, and go to state 32
    PLUS_ASSIGN  shift, and go to state 33
    MIN_ASSIGN   shift, and go to state 34
    TIM_ASSIGN   shift, and go to state 35
    DIV_ASSIGN   shift, and go to state 36
    MOD_ASSIGN   shift, and go to state 37


State 202

   32 for_stmt: FOR LP assignment_stmt SEMICOLON expr SEMICOLON assignment_stmt . RP statements

    RP  shift, and go to state 213


State 203

   38 for_stmt: FOR LP expr SEMICOLON SEMICOLON RP statements .

    $default  reduce using rule 38 (for_stmt)


State 204

   34 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 214
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 205

   35 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 215
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 206

   61 function_definition: T IDENTIFIER LP RP LB statements RB .

    $default  reduce using rule 61 (function_definition)


State 207

   46 function_declaration_id: T IDENTIFIER . LOP_ASSIGN expr
   47                        | T IDENTIFIER .
   49                        | T IDENTIFIER . LOP_ASSIGN NEW T LP expr RP

    LOP_ASSIGN  shift, and go to state 216

    $default  reduce using rule 47 (function_declaration_id)


State 208

   54 function_definition_id: T IDENTIFIER . LOP_ASSIGN expr
   55                       | T IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 217

    $default  reduce using rule 55 (function_definition_id)


State 209

   60 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements . RB

    RB  shift, and go to state 218


State 210

   49 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW . T LP expr RP

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_BOOL    shift, and go to state 3
    T_DOUBLE  shift, and go to state 4
    T_VOID    shift, and go to state 5

    T  go to state 219


State 211

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr .
   54 function_definition_id: T IDENTIFIER LOP_ASSIGN expr .
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    COMMA     reduce using rule 46 (function_declaration_id)
    COMMA     [reduce using rule 54 (function_definition_id)]
    RP        reduce using rule 46 (function_declaration_id)
    RP        [reduce using rule 54 (function_definition_id)]
    $default  reduce using rule 46 (function_declaration_id)


State 212

   33 for_stmt: FOR LP SEMICOLON expr SEMICOLON expr RP statements .

    $default  reduce using rule 33 (for_stmt)


State 213

   32 for_stmt: FOR LP assignment_stmt SEMICOLON expr SEMICOLON assignment_stmt RP . statements

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_DOUBLE    shift, and go to state 4
    T_VOID      shift, and go to state 5
    SEMICOLON   shift, and go to state 6
    LB          shift, and go to state 7
    IDENTIFIER  shift, and go to state 8
    FOR         shift, and go to state 9
    IF          shift, and go to state 10
    WHILE       shift, and go to state 11
    RETURN      shift, and go to state 12
    SCANF       shift, and go to state 13
    PRINTF      shift, and go to state 14

    statements            go to state 220
    statement             go to state 17
    scanf_function        go to state 18
    printf_function       go to state 19
    assignment_stmt       go to state 20
    if_stmt               go to state 21
    if_else_stmt          go to state 22
    for_stmt              go to state 23
    while_stmt            go to state 24
    declaration           go to state 25
    function_return       go to state 26
    function_declaration  go to state 27
    function_definition   go to state 28
    function_call         go to state 29
    T                     go to state 30


State 214

   34 for_stmt: FOR LP expr SEMICOLON SEMICOLON expr RP statements .

    $default  reduce using rule 34 (for_stmt)


State 215

   35 for_stmt: FOR LP expr SEMICOLON expr SEMICOLON RP statements .

    $default  reduce using rule 35 (for_stmt)


State 216

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN . expr
   49                        | T IDENTIFIER LOP_ASSIGN . NEW T LP expr RP

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53
    NEW          shift, and go to state 210

    expr  go to state 221


State 217

   54 function_definition_id: T IDENTIFIER LOP_ASSIGN . expr

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 222


State 218

   60 function_definition: T IDENTIFIER LP function_definition_idlist RP LB statements RB .

    $default  reduce using rule 60 (function_definition)


State 219

   49 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T . LP expr RP
  100 T: T . TIMES
  101  | T . AND

    LP     shift, and go to state 223
    TIMES  shift, and go to state 63
    AND    shift, and go to state 64


State 220

   32 for_stmt: FOR LP assignment_stmt SEMICOLON expr SEMICOLON assignment_stmt RP statements .

    $default  reduce using rule 32 (for_stmt)


State 221

   46 function_declaration_id: T IDENTIFIER LOP_ASSIGN expr .
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    $default  reduce using rule 46 (function_declaration_id)


State 222

   54 function_definition_id: T IDENTIFIER LOP_ASSIGN expr .
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107

    $default  reduce using rule 54 (function_definition_id)


State 223

   49 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T LP . expr RP

    LP           shift, and go to state 43
    IDENTIFIER   shift, and go to state 44
    INTEGER      shift, and go to state 45
    CHAR         shift, and go to state 46
    STRING       shift, and go to state 47
    NUMBER       shift, and go to state 48
    MINUS        shift, and go to state 49
    TIMES        shift, and go to state 50
    AND          shift, and go to state 51
    NOT          shift, and go to state 52
    LOGICAL_NOT  shift, and go to state 53

    expr  go to state 224


State 224

   49 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T LP expr . RP
   67 expr: expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . TIMES expr
   70     | expr . DIVIDE expr
   71     | expr . MOD expr
   72     | expr . MMINUS
   73     | expr . PPLUS
   74     | expr . AND expr
   75     | expr . OR expr
   77     | expr . EQU expr
   78     | expr . GTR expr
   79     | expr . LSS expr
   80     | expr . GEQ expr
   81     | expr . LEQ expr
   82     | expr . NEQ expr
   83     | expr . LOGICAL_AND expr
   84     | expr . LOGICAL_OR expr

    RP           shift, and go to state 225
    PLUS         shift, and go to state 91
    MINUS        shift, and go to state 92
    TIMES        shift, and go to state 93
    DIVIDE       shift, and go to state 94
    MOD          shift, and go to state 95
    PPLUS        shift, and go to state 96
    MMINUS       shift, and go to state 97
    AND          shift, and go to state 98
    OR           shift, and go to state 99
    EQU          shift, and go to state 100
    GTR          shift, and go to state 101
    LSS          shift, and go to state 102
    GEQ          shift, and go to state 103
    LEQ          shift, and go to state 104
    NEQ          shift, and go to state 105
    LOGICAL_AND  shift, and go to state 106
    LOGICAL_OR   shift, and go to state 107


State 225

   49 function_declaration_id: T IDENTIFIER LOP_ASSIGN NEW T LP expr RP .

    $default  reduce using rule 49 (function_declaration_id)
